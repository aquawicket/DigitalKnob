### VERSION ###
DKSET(UV_MAJOR 1)
DKSET(UV_MINOR 37)
DKSET(UV_BUILD 0)
DKSET(UV_VERSION v${UV_MAJOR}.${UV_MINOR}.${UV_BUILD})
DKSET(UV ${3RDPARTY}/libuv-${UV_VERSION})


### INSTALL ###
DKINSTALL(https://dist.libuv.org/dist/${UV_VERSION}/libuv-${UV_VERSION}.tar.gz libuv libuv-${UV_VERSION})



### DKPLUGINS LINK ###
LIST(APPEND WIN_LIBS Iphlpapi.lib)
LIST(APPEND WIN_LIBS Userenv.lib)
DKINCLUDE(${UV}/include)
DKINCLUDE(${UV}/${OS})
WIN_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/uv_a.lib)
WIN_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/uv_a.lib)
MAC_DEBUG_LIB(${UV}/${OS}/lib/${DEBUG_DIR}/libuv_a.a)
MAC_RELEASE_LIB(${UV}/${OS}/lib/${RELEASE_DIR}/libuv_a.a)
IOSSIM_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/lib/.libs/libuv_a.a)
IOSSIM_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/lib/.libs/libuv_a.a)
LINUX_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/libuv_a.a)
LINUX_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/libuv_a.a)
RASPBERRY_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/libuv_a.a)
RASPBERRY_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/libuv_a.a)
## ANDROID_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libuv_a.a)
## ANDROID_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libuv_a.a)
ANDROID_DEBUG_LIB(${UV}/${OS}/${DEBUG_DIR}/libuv_a.a)
ANDROID_RELEASE_LIB(${UV}/${OS}/${RELEASE_DIR}/libuv_a.a)



### 3RDPARTY LINK ###
DKSET(LIBUV_WIN -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/${RELEASE_DIR}/uv_a.lib)
DKSET(LIBUV_APPLE -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/${RELEASE_DIR}/uv_a.a)
DKSET(LIBUV_LINUX -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/${RELEASE_DIR}/uv_a.a)
DKSET(LIBUV_RASPBERRY -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/${RELEASE_DIR}/uv_a.a)
DKSET(LIBUV_ANDROID -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/${RELEASE_DIR}/uv_a.a)



### COMPILE ###
WIN_PATH(${UV}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} ${UV})
WIN64_COMMAND(${DKCMAKE_WIN64} ${UV})
WIN_VS(libuv-${UV_VERSION} libuv.sln uv_a)


MAC_PATH(${UV}/${OS})
MAC64_COMMAND(${DKCMAKE_MAC64} ${UV})
MAC64_XCODE_DEBUG(libuv-${UV_VERSION} uv_a)
MAC64_XCODE_RELEASE(libuv-${UV_VERSION} uv_a)


IOS_PATH(${UV}/${OS})
IOS_COMMAND(${DKCMAKE_IOS64} ${UV})
IOS_XCODE_DEBUG(libuv-${UV_VERSION} uv_a)
IOS_XCODE_RELEASE(libuv-${UV_VERSION} uv_a)


IOSSIM_PATH(${UV}/${OS})
IOSSIM_COMMAND(${DKCMAKE_IOSSIM64} ${UV})
IOSSIM_XCODE_DEBUG(libuv-${UV_VERSION} uv_a)
IOSSIM_XCODE_RELEASE(libuv-${UV_VERSION} uv_a)


LINUX_DEBUG_PATH(${UV}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${DKCMAKE_LINUX_DEBUG} -DCMAKE_C_FLAGS=-fPIC ${UV})
LINUX_DEBUG_COMMAND(make uv_a)

LINUX_RELEASE_PATH(${UV}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${DKCMAKE_LINUX_RELEASE} -DCMAKE_C_FLAGS=-fPIC ${UV})
LINUX_RELEASE_COMMAND(make uv_a)


RASPBERRY_DEBUG_PATH(${UV}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${DKCMAKE_RASPBERRY_DEBUG} -DCMAKE_C_FLAGS=-fPIC ${UV})
RASPBERRY_DEBUG_COMMAND(make uv_a)

RASPBERRY_RELEASE_PATH(${UV}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${DKCMAKE_RASPBERRY_RELEASE} -DCMAKE_C_FLAGS=-fPIC ${UV})
RASPBERRY_RELEASE_COMMAND(make uv_a)


## ANDROID_NDK(libuv-${UV_VERSION})
ANDROID_PATH(${UV}/${OS})
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} ${UV})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} ${UV})
ANDROID_VS(libuv-${UV_VERSION} libuv.sln uv_a)