### DEPENDS ###
DKDEPEND(ffmpeg-20150905-git-a87ada5-win32-dev)
DKDEPEND(ffmpeg-20150905-git-a87ada5-win32-shared)
DKDEPEND(ffmpeg-20150905-git-a87ada5-win64-dev)
DKDEPEND(ffmpeg-20150905-git-a87ada5-win64-shared)
DKDEPEND(SDL2-2.0.4)


### INSTALL ###
## DKINSTALL(www.internet.com/waave-3.01.tar waave-3.01) ## find an online link
## DKINSTALL(${DKWEB}/Download/waave-3.01.tar waave-3.01)
DKSET(WAAVE ${3RDPARTY}/waave-3.01)


### LINK ###
DKINCLUDE(${WAAVE}/src)
WIN_DEBUG_LIB(${WAAVE}/${OS}/Debug/waave.lib)
WIN_RELEASE_LIB(${WAAVE}/${OS}/Release/waave.lib)
APPLE_DEBUG_LIB(${WAAVE}/${OS}/${DEBUG}/libwaave.a)
APPLE_RELEASE_LIB(${WAAVE}/${OS}/${RELEASE}/libwaave.a)
LINUX_DEBUG_LIB(${WAAVE}/${OS}/Debug/libwaave.a)
LINUX_RELEASE_LIB(${WAAVE}/${OS}/Release/libwaave.a)
ANDROID_DEBUG_LIB(${WAAVE}/${OS}/Debug/obj/local/armeabi-v7a/libwaave.a)
ANDROID_RELEASE_LIB(${WAAVE}/${OS}/Release/obj/local/armeabi-v7a/libwaave.a)


### COMPILE ###
DKSETPATH(${WAAVE}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DFFMPEG_INCLUDE_DIR=${FFMPEG}/include -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/SDL2.lib ${WAAVE})
WIN32_VS_DEBUG(waave-3.01 waave.sln waave)
WIN32_VS_RELEASE(waave-3.01 waave.sln waave)

DKSETPATH(${WAAVE}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DFFMPEG_INCLUDE_DIR=${FFMPEG}/include -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/SDL2.lib ${WAAVE})
WIN64_VS_DEBUG(waave-3.01 waave.sln waave)
WIN64_VS_RELEASE(waave-3.01 waave.sln waave)

DKSETPATH(${WAAVE}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${WAAVE})
MAC_XCODE_DEBUG(waave-3.01 waave)
MAC_XCODE_RELEASE(waave-3.01 waave)

DKSETPATH(${WAAVE}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${WAAVE})
IOS_XCODE_DEBUG(waave-3.01 waave)
IOS_XCODE_RELEASE(waave-3.01 waave)

DKSETPATH(${WAAVE}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${WAAVE})
IOSSIM_XCODE_DEBUG(waave-3.01 waave)
IOSSIM_XCODE_RELEASE(waave-3.01 waave)

DKSETPATH(${WAAVE}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${WAAVE})
LINUX_DEBUG_COMMAND(make waave)

DKSETPATH(${WAAVE}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${WAAVE})
LINUX_RELEASE_COMMAND(make waave)

ANDROID_NDK_DEBUG(waave-3.01)
ANDROID_NDK_RELEASE(waave-3.01)