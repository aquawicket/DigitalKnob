# https://curl.se/
#
# https://curl.haxx.se/download/curl-7.34.0.zip

### DEPENDS ###
DKDEPEND(ws2_32.lib)
DKDEPEND(zlib)
DKDEPEND(openssl)


### VERSION ###
DKSET(CURL_VERSION 7.34.0)
DKSET(CURL_NAME curl-${CURL_VERSION})
DKSET(CURL_DL https://curl.haxx.se/download/${CURL_NAME}.zip)
DKSET(CURL ${3RDPARTY}/${CURL_NAME})


### INSTALL ###
DKINSTALL(${CURL_DL} curl ${CURL})


### DKPLUGINS LINK ###
DKDEFINE(CURL_STATICLIB)
DKINCLUDE(${CURL}/include)
DKINCLUDE(${CURL}/${OS}/include/curl)
WIN_DEBUG_LIB(${CURL}/${OS}/${DEBUG_DIR}/libcurl.lib)
WIN_RELEASE_LIB(${CURL}/${OS}/${RELEASE_DIR}/libcurl.lib)
APPLE_DEBUG_LIB(${CURL}/${OS}/${DEBUG_DIR}/libcurl.a)
APPLE_RELEASE_LIB(${CURL}/${OS}/${RELEASE_DIR}/libcurl.a)
LINUX_DEBUG_LIB(${CURL}/${OS}/${DEBUG_DIR}/lib/libcurl.a)
LINUX_RELEASE_LIB(${CURL}/${OS}/${RELEASE_DIR}/lib/libcurl.a)
RASPBERRY_DEBUG_LIB(${CURL}/${OS}/${DEBUG_DIR}/lib/libcurl.a)
RASPBERRY_RELEASE_LIB(${CURL}/${OS}/${RELEASE_DIR}/lib/libcurl.a)
ANDROID_DEBUG_LIB(${CURL}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libcurl.a)
ANDROID_RELEASE_LIB(${CURL}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libcurl.a)
##ANDROID_DEBUG_LIB(${CURL}/${OS}/lib/${DEBUG_DIR}/libcurl.a)
##ANDROID_RELEASE_LIB(${CURL}/${OS}/lib/${RELEASE_DIR}/libcurl.a)


### COMPILE ###
DKSETPATH(${CURL}/${BUILD_DIR})

WIN_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF ${OPENSSL_CMAKE} ${ZLIB_CMAKE} ${CURL})
WIN_VS(${CURL_NAME} CURL.sln libcurl)


MAC_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
MAC_XCODE(${CURL_NAME} libcurl)


IOS_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
IOS_XCODE_RELEASE(${CURL_NAME} libcurl)


IOSSIM_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF  ${ZLIB_CMAKE} ${CURL})
IOSSIM_XCODE(${CURL_NAME} libcurl)
#DHAVE_GLIBC_STRERROR_R=advanced HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced


LINUX_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
LINUX_COMMAND(make libcurl)


RASPBERRY_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
RASPBERRY_COMMAND(make libcurl)


#ANDROID_NDK(${CURL_NAME})
#ANDROID_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON "-DCMAKE_C_FLAGS=-DHAVE_POSIX_STRERROR_R" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
ANDROID_COMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
ANDROID_VS(${CURL_NAME} CURL.sln libcurl)