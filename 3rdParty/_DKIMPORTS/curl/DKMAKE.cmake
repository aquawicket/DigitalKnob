# https://robertying.io/posts/compile-openssl-and-curl-for-android
# https://curl.se/
# https://curl.haxx.se/download/curl-7.34.0.zip
# https://github.com/curl/curl

### DEPENDS ###
WIN_DKDEPEND(ws2_32.lib)
ANDROID_DKDEPEND(dl)
DKDEPEND(zlib)
DKDEPEND(openssl)

#DKGITCLONE(https://github.com/curl/curl.git curl-7_83_1)
dk_import(https://github.com/curl/curl/archive/refs/tags/curl-7_43_0.zip)

#dk_set(CURL_VERSION 7.34.0)
#dk_set(CURL_NAME curl-${CURL_VERSION})
#dk_set(CURL_DL https://curl.haxx.se/download/${CURL_NAME}.zip)
#dk_set(CURL ${3RDPARTY}/${CURL_NAME})
#DKINSTALL(${CURL_DL} curl ${CURL})


### DKPLUGINS LINK ###
DKDEFINE(CURL_STATICLIB)
DKINCLUDE(${CURL}/include)
DKINCLUDE(${CURL}/${OS}/include/curl)
if(DEBUG)
	DKINCLUDE(${CURL}/${OS}/${DEBUG_DIR}/include/curl)
elseif(RELEASE)
	DKINCLUDE(${CURL}/${OS}/${RELEASE_DIR}/include/curl)
endif()
WIN_DEBUG_DKLIB(${CURL}/${OS}/lib/${DEBUG_DIR}/libcurl.lib)
WIN_RELEASE_DKLIB(${CURL}/${OS}/lib/${RELEASE_DIR}/libcurl.lib)
APPLE_DEBUG_DKLIB(${CURL}/${OS}/lib/${DEBUG_DIR}/libcurl.a)
APPLE_RELEASE_DKLIB(${CURL}/${OS}/lib/${RELEASE_DIR}/libcurl.a)
LINUX_DEBUG_DKLIB(${CURL}/${OS}/${DEBUG_DIR}/lib/libcurl.a)
LINUX_RELEASE_DKLIB(${CURL}/${OS}/${RELEASE_DIR}/lib/libcurl.a)
RASPBERRY_DEBUG_DKLIB(${CURL}/${OS}/${DEBUG_DIR}/lib/libcurl.a)
RASPBERRY_RELEASE_DKLIB(${CURL}/${OS}/${RELEASE_DIR}/lib/libcurl.a)
ANDROID_DEBUG_DKLIB(${CURL}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libcurl.a)
ANDROID_RELEASE_DKLIB(${CURL}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libcurl.a)
##ANDROID_DEBUG_DKLIB(${CURL}/${OS}/lib/${DEBUG_DIR}/libcurl.a)
##ANDROID_RELEASE_DKLIB(${CURL}/${OS}/lib/${RELEASE_DIR}/libcurl.a)


### COMPILE ###
DKSETPATH(${CURL}/${BUILD_DIR})

WIN_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF ${OPENSSL_CMAKE} ${ZLIB_CMAKE} ${CURL})
WIN_VS(${CURL_NAME} CURL.sln libcurl)


MAC_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
MAC_XCODE(${CURL_NAME} libcurl)


IOS_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
IOS_RELEASE_XCODE(${CURL_NAME} libcurl)


IOSSIM_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF  ${ZLIB_CMAKE} ${CURL})
IOSSIM_XCODE(${CURL_NAME} libcurl)
#DHAVE_GLIBC_STRERROR_R=advanced HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced


LINUX_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
LINUX_DKQCOMMAND(make libcurl)


RASPBERRY_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
RASPBERRY_DKQCOMMAND(make libcurl)


#ANDROID_NDK(${CURL_NAME})
#ANDROID_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON "-DCMAKE_C_FLAGS=-DHAVE_POSIX_STRERROR_R" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_CMAKE} ${CURL})
ANDROID_DKQCOMMAND(${DKCMAKE_BUILD} -DCURL_STATICLIB=ON -DHAVE_POSIX_STRERROR_R=1 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_DISABLE_LDAP=ON -DHAVE_GLIBC_STRERROR_R=advanced -DHAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced ${ZLIB_CMAKE} ${CURL})
ANDROID_VS(${CURL_NAME} CURL.sln libcurl)

# arm64
#export TARGET_HOST=aarch64-linux-android
#export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/$HOST_TAG
#PATH=$TOOLCHAIN/bin:$PATH
#export AR=$TOOLCHAIN/bin/$TARGET_HOST-ar
#export AS=$TOOLCHAIN/bin/$TARGET_HOST-as
#export CC=$TOOLCHAIN/bin/$TARGET_HOST$MIN_SDK_VERSION-clang
#export CXX=$TOOLCHAIN/bin/$TARGET_HOST$MIN_SDK_VERSION-clang++
#export LD=$TOOLCHAIN/bin/$TARGET_HOST-ld
#export RANLIB=$TOOLCHAIN/bin/$TARGET_HOST-ranlib
#export STRIP=$TOOLCHAIN/bin/$TARGET_HOST-strip
#export SSL_DIR=$PWD/../openssl/build/arm64-v8a
#./configure --host=$TARGET_HOST --target=$TARGET_HOST --prefix=$PWD/build/arm64-v8a --disable-shared --with-ssl=$SSL_DIR