### VERSION ###
DKSET(CURL_VERSION 7.34.0)

### DEPENDS ###
DKDEPEND(zlib)
DKDEPEND(openssl-vs2015)

### INSTALL ###
DKINSTALL(https://curl.haxx.se/download/curl-${CURL_VERSION}.zip curl curl-${CURL_VERSION})
DKSET(CURL ${3RDPARTY}/curl-${CURL_VERSION})


### DKPLUGINS LINK ###
DKDEFINE(CURL_STATICLIB)
DKINCLUDE(${CURL}/include)
DKINCLUDE(${CURL}/${OS}/include/curl)
	
WIN_DEBUG_LIB(${CURL}/${OS}/lib/Debug/libcurl.lib)
WIN_RELEASE_LIB(${CURL}/${OS}/lib/Release/libcurl.lib)
APPLE_DEBUG_LIB(${CURL}/${OS}/lib/${DEBUG}/libcurl.a)
APPLE_RELEASE_LIB(${CURL}/${OS}/lib/${RELEASE}/libcurl.a)
LINUX_DEBUG_LIB(${CURL}/${OS}/Debug/lib/libcurl.a)
LINUX_RELEASE_LIB(${CURL}/${OS}/Release/lib/libcurl.a)
ANDROID_DEBUG_LIB(${CURL}/${OS}/Debug/obj/local/armeabi-v7a/libcurl.a)
ANDROID_RELEASE_LIB(${CURL}/${OS}/Release/obj/local/armeabi-v7a/libcurl.a)
RASPBERRY_DEBUG_LIB(${CURL}/${OS}/Debug/lib/libcurl.a)
RASPBERRY_RELEASE_LIB(${CURL}/${OS}/Release/lib/libcurl.a)


### COMPILE ###
DKSETPATH(${CURL}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON ${OPENSSL_WIN} ${ZLIB_WIN} ${CURL})





#########WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON ${OPENSSL_WIN} ${ZLIB_WIN} ${CURL})
WIN32_VS_DEBUG(curl-${CURL_VERSION} CURL.sln libcurl)
WIN32_VS_RELEASE(curl-${CURL_VERSION} CURL.sln libcurl)

DKSETPATH(${CURL}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DCMAKE_USE_OPENSSL=ON -DOPENSSL_INCLUDE_DIR=${OPENSSL}/include -DLIB_EAY_DEBUG=${OPENSSL}/lib/libeay32MTd.lib -DLIB_EAY_RELEASE=${OPENSSL}/lib/libeay32MT.lib -DSSL_EAY_DEBUG=${OPENSSL}/lib/ssleay32MTd.lib -DSSL_EAY_RELEASE=${OPENSSL}/lib/ssleay32MT.lib -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${CURL})
WIN64_VS_DEBUG(curl-${CURL_VERSION} CURL.sln libcurl)
WIN64_VS_RELEASE(curl-${CURL_VERSION} CURL.sln libcurl)

DKSETPATH(${CURL}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${CURL})
MAC_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
MAC_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)

DKSETPATH(${CURL}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${CURL})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${CURL})
IOS_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
IOS_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)

DKSETPATH(${CURL}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a -DHAVE_GLIBC_STRERROR_R=advanced HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced ${CURL})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a -DHAVE_GLIBC_STRERROR_R=advanced HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced ${CURL})
IOSSIM_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
IOSSIM_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)

DKSETPATH(${CURL}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a ${CURL})
LINUX_DEBUG_COMMAND(make libcurl)

DKSETPATH(${CURL}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${CURL})
LINUX_RELEASE_COMMAND(make libcurl)

ANDROID_NDK_DEBUG(curl-${CURL_VERSION})
ANDROID_NDK_RELEASE(curl-${CURL_VERSION})

DKSETPATH(${CURL}/${OS}/Debug)
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a ${CURL})
RASPBERRY_DEBUG_COMMAND(make libcurl)

DKSETPATH(${CURL}/${OS}/Release)
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCMAKE_USE_OPENSSL=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${CURL})
RASPBERRY_RELEASE_COMMAND(make libcurl)