## https://curl.se/

### DEPENDS ###
DKDEPEND(zlib)
DKDEPEND(openssl-vs2015)


### VERSION ###
DKSET(CURL_VERSION 7.34.0)


### INSTALL ###
## https://curl.haxx.se/download/curl-7.34.0.zip
DKINSTALL(https://curl.haxx.se/download/curl-${CURL_VERSION}.zip curl curl-${CURL_VERSION})
DKSET(CURL ${3RDPARTY}/curl-${CURL_VERSION})


### DKPLUGINS LINK ###
DKDEFINE(CURL_STATICLIB)
DKINCLUDE(${CURL}/include)
DKINCLUDE(${CURL}/${OS}/include/curl)
WIN_DEBUG_LIB(${CURL}/${OS}/lib/${DEBUG}/libcurl.lib)
WIN_RELEASE_LIB(${CURL}/${OS}/lib/${RELEASE}/libcurl.lib)
APPLE_DEBUG_LIB(${CURL}/${OS}/lib/${DEBUG}/libcurl.a)
APPLE_RELEASE_LIB(${CURL}/${OS}/lib/${RELEASE}/libcurl.a)
LINUX_DEBUG_LIB(${CURL}/${OS}/${DEBUG}/lib/libcurl.a)
LINUX_RELEASE_LIB(${CURL}/${OS}/${RELEASE}/lib/libcurl.a)
RASPBERRY_DEBUG_LIB(${CURL}/${OS}/${DEBUG}/lib/libcurl.a)
RASPBERRY_RELEASE_LIB(${CURL}/${OS}/${RELEASE}/lib/libcurl.a)
ANDROID_DEBUG_LIB(${CURL}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libcurl.a)
ANDROID_RELEASE_LIB(${CURL}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libcurl.a)


### COMPILE ###
WIN_PATH(${CURL}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON ${OPENSSL_WIN} ${ZLIB_WIN} ${CURL})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_WIN} ${CURL})
WIN_VS(curl-${CURL_VERSION} CURL.sln libcurl)


MAC_PATH(${CURL}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_APPLE} ${CURL})
MAC_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
MAC_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)


IOS_PATH(${CURL}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_APPLE} ${CURL})
IOS_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
IOS_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)


IOSSIM_PATH(${CURL}/${OS})
IOSSIM64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF DHAVE_GLIBC_STRERROR_R=advanced HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT=advanced ${ZLIB_APPLE} ${CURL})
IOSSIM_XCODE_DEBUG(curl-${CURL_VERSION} libcurl)
IOSSIM_XCODE_RELEASE(curl-${CURL_VERSION} libcurl)


LINUX_DEBUG_PATH(${CURL}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_LINUX} ${CURL})
LINUX_DEBUG_COMMAND(make libcurl)

LINUX_RELEASE_PATH(${CURL}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_LINUX} ${CURL})
LINUX_RELEASE_COMMAND(make libcurl)


RASPBERRY_DEBUG_PATH(${CURL}/${OS}/${DEBUG})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_RASPBERRY} ${CURL})
RASPBERRY_DEBUG_COMMAND(make libcurl)

RASPBERRY_RELEASE_PATH(${CURL}/${OS}/${RELEASE})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_CURL_EXE=OFF -DBUILD_CURL_TESTS=OFF -DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON -DCMAKE_USE_OPENSSL=OFF ${ZLIB_RASPBERRY} ${CURL})
RASPBERRY_RELEASE_COMMAND(make libcurl)


ANDROID_NDK_DEBUG(curl-${CURL_VERSION})
ANDROID_NDK_RELEASE(curl-${CURL_VERSION})
