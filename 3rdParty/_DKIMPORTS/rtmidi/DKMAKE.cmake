# https://github.com/thestk/rtmidi


#dk_import(https://github.com/thestk/rtmidi)
#dk_set(RTMIDI_SLN RtMidi.sln)
#dk_set(RTMIDI_TARGET rtmidi)

dk_import(http://www.music.mcgill.ca/~gary/rtmidi/release/rtmidi-2.1.0.tar.gz PATCH)

#dk_set(RTMIDI_VERSION 2.1.0)
#dk_set(RTMIDI_DL http://www.music.mcgill.ca/~gary/rtmidi/release/rtmidi-2.1.0.tar.gz)
#dk_set(RTMIDI_NAME rtmidi-${RTMIDI_VERSION})
#dk_set(RTMIDI ${3RDPARTY}/${RTMIDI_NAME})
#DKINSTALL(${RTMIDI_DL} rtmidi ${RTMIDI} PATCH)

dk_set(RTMIDI_SLN Project.sln)
dk_set(RTMIDI_TARGET RtMidi)


### LINK ###
DKINCLUDE(${RTMIDI})
if(WIN)
	DKDEPEND(winmm.lib)
endif()
if(APPLE)
	DKDEFINE(__MACOSX_CORE__)
endif()
if(LINUX OR RASPBERRY OR ANDROID)
	DKDEFINE(__LINUX_ALSA__)
endif()
WIN_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/RtMidi.lib)
WIN_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/RtMidi.lib)
MAC_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
MAC_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)
IOS_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
IOS_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)
IOSSIM_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
IOSSIM_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)
LINUX_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
LINUX_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)
RASPBERRY_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
RASPBERRY_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)
ANDROID_DEBUG_DKLIB(${RTMIDI}/${OS}/${DEBUG_DIR}/libRtMidi.a)
ANDROID_RELEASE_DKLIB(${RTMIDI}/${OS}/${RELEASE_DIR}/libRtMidi.a)

### COMPILE ###
WIN_DKSETPATH(${RTMIDI}/${OS})
WIN32_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
WIN64_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
WIN_VS(${RTMIDI_NAME} ${RTMIDI_SLN} ${RTMIDI_TARGET})


MAC_DKSETPATH(${RTMIDI}/${OS})
MAC64_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
MAC_XCODE(${RTMIDI_NAME} ${RTMIDI_TARGET})

IOS_DKSETPATH(${RTMIDI}/${OS})
IOS64_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
IOS_XCODE(${RTMIDI_NAME} ${RTMIDI_TARGET})

IOSSIM_DKSETPATH(${RTMIDI}/${OS})
IOSSIM64_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
IOSSIM_XCODE(${RTMIDI_NAME} ${RTMIDI_TARGET})


LINUX_DEBUG_DKSETPATH(${RTMIDI}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
LINUX_DEBUG_DKQCOMMAND(make ${RTMIDI_TARGET})
LINUX_RELEASE_DKSETPATH(${RTMIDI}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
LINUX_RELEASE_DKQCOMMAND(make ${RTMIDI_TARGET})


RASPBERRY_DEBUG_DKSETPATH(${RTMIDI}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
RASPBERRY_DEBUG_DKQCOMMAND(make ${RTMIDI_TARGET})
RASPBERRY_RELEASE_DKSETPATH(${RTMIDI}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
RASPBERRY_RELEASE_DKQCOMMAND(make ${RTMIDI_TARGET})


ANDROID_DKSETPATH(${RTMIDI}/${OS})
ANDROID32_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
ANDROID64_DKQCOMMAND(${DKCMAKE_BUILD} ${RTMIDI})
ANDROID_VS(${RTMIDI_NAME} Project.sln ${RTMIDI_TARGET})