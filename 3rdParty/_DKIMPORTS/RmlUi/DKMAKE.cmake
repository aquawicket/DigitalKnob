### DEPENDS ###
DKDEPEND(freetype)
DKDEPEND(glew)
DKDEPEND(SDL2)
DKDEPEND(SDL2_image)
DKDEPEND(SFML)



### VERSION ###
DKSET(RMLUI_VERSION master)
DKSET(RMLUI ${3RDPARTY}/RmlUi-${RMLUI_VERSION})



### INSTALL ###
DKINSTALL(https://codeload.github.com/mikke89/RmlUi/zip/master RmlUi RmlUi-${RMLUI_VERSION})
DKRENAME(${DKDOWNLOAD}/master ${DKDOWNLOAD}/RmlUi-${RMLUI_VERSION}.zip) ##FIXME: Only do this after install



### LINK ###
DKDEFINE(RMLUI_STATIC_LIB)
DKINCLUDE(${RMLUI}/Include)
WIN_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/RmlCore.lib)
WIN_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/RmlCore.lib)
MAC_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlCore.a)
MAC_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlCore.a)
IOSSIM_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlCore_d.a)
IOSSIM_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlCore.a)
LINUX_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlCore.a)
LINUX_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlCore.a)
RASPBERRY_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlCore.a)
RASPBERRY_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlCore.a)
##ANDROID_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libRmlCore.a)
##ANDROID_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libRmlCore.a)
ANDROID_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlCore.a)
ANDROID_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlCore.a)

WIN_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/RmlDebugger.lib)
WIN_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/RmlDebugger.lib)
WIN_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/RmlDebugger.lib)
MAC_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlDebugger.a)
MAC_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlDebugger.a)
IOSSIM_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlDebugger_d.a)
IOSSIM_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlDebugger.a)
LINUX_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlDebugger.a)
LINUX_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlDebugger.a)
RASPBERRY_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlDebugger.a)
RASPBERRY_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlDebugger.a)
##ANDROID_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libRmlDebugger.a)
##ANDROID_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libRmlDebugger.a)
ANDROID_DEBUG_LIB(${RMLUI}/${OS}/${DEBUG_DIR}/libRmlDebugger.a)
ANDROID_RELEASE_LIB(${RMLUI}/${OS}/${RELEASE_DIR}/libRmlDebugger.a)

### The RmlUi SDL example needs these libraries
#${GLEW}\${OS}\lib\Debug\glew32d.lib
#${JPEG}\${OS}\Debug\turbojpeg-static.lib
#${PNG}\${OS}\Debug\libpng17_staticd.lib
#${TIFF}\${OS}\Debug\tiff-static.lib
#${ZLIB}\${OS}\Debug\zlibstaticd.lib
#winmm.lib
#Setupapi.lib
#version.lib
#imm32.lib

#### DEBUG COMPILE #####
WIN_PATH(${RMLUI}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc -DRMLUI_STATIC_LIB /I${RMLUI}/Include /I${SDL}/include /I${GLEW}/include" -DBUILD_SAMPLES=OFF ${FREETYPE_WIN} ${SDL2_WIN} ${RMLUI})
WIN64_COMMAND(${DKCMAKE_WIN64} "-DCMAKE_CXX_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo /GR /EHsc -DRMLUI_STATIC_LIB /I${RMLUI}/Include /I${SDL}/include /I${GLEW}/include" -DBUILD_SAMPLES=ON  ${FREETYPE_WIN} ${SDL2_WIN} ${RMLUI})
WIN_VS(RmlUi-${RMLUI_VERSION} RmlUi.sln)

WaitForEnter()
##WIN32_COMMAND(${CMAKE_COMMAND} -G "Visual Studio 16 2019" -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc -DRMLUI_STATIC_LIB /I${3RDPARTY}/RmlUi-${RMLUI_VERSION}/Include /I${SDL}/include /I${GLEW}/include" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF -DBUILD_SAMPLES=ON ${FREETYPE_WIN} ${SDL2_WIN} -DSDL2_IMAGE_LIBRARY_TEMP=${SDLIMAGE}/${OS}/lib/${RELEASE_DIR}/SDL_image.lib -DSDL2_IMAGE_INCLUDE_DIR=${SDLIMAGE} -DGLEW_DIR=${GLEW}/build/cmake -DGLEW_INCLUDE_DIR=${GLEW} -DGLEW_SHARED_LIBRARY_DEBUG=${GLEW}/${OS}/lib/${DEBUG_DIR}/libglew32d.lib -DGLEW_SHARED_LIBRARY_RELEASE=${GLEW}/${OS}/lib/${RELEASE_DIR}/libglew32.lib -DGLEW_STATIC_LIBRARY_DEBUG=${GLEW}/${OS}/lib/${DEBUG_DIR}/glew32d.lib -DGLEW_STATIC_LIBRARY_RELEASE=${GLEW}/${OS}/lib/${RELEASE_DIR}/glew32.lib -DCMAKE_PREFIX_PATH=${GLEW} -DSFML_INCLUDE_DIR=${SFML}/include -DSFML_MAIN_LIBRARY_DEBUG=${SFML}/${OS}/lib/${DEBUG_DIR}/sfml-main-d.lib -DSFML_MAIN_LIBRARY_RELEASE=${SFML}/${OS}/lib/${RELEASE_DIR}/sfml-main.lib -DSFML_SYSTEM_LIBRARY_DEBUG=${SFML}/${OS}/lib/${DEBUG_DIR}/sfml-system-s-d.lib -DSFML_SYSTEM_LIBRARY_RELEASE=${SFML}/${OS}/lib/${DEBUG_DIR}/sfml-system-s.lib -DSFML_WINDOW_LIBRARY_DEBUG=${SFML}/${OS}/lib/${DEBUG_DIR}/sfml-window-s-d.lib -DSFML_WINDOW_LIBRARY_RELEASE=${SFML}/${OS}/lib/${RELEASE_DIR}/sfml-window-s.lib -DSFML_GRAPHICS_LIBRARY_DEBUG=${SFML}/${OS}/lib/${DEBUG_DIR}/sfml-graphics-s-d.lib -DSFML_GRAPHICS_LIBRARY_RELEASE=${SFML}/${OS}/lib/${RELEASE_DIR}/sfml-graphics-s.lib ${RMLUI})


### COMPILE ###
#WIN_PATH(${RMLUI}/${OS})
#WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc /I${RMLUI}/Include /I${SDL}/include" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF -DBUILD_SAMPLES=ON -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY=${FREETYPE}/${OS}/${RELEASE_DIR}/freetype.lib -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/freetype.lib -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/freetype.lib -DSDL2_INCLUDE_DIR=${SDL} -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE_DIR}/SDL2.lib -DSDL2_LIBRARY_TEMP=${SDL}/${OS}/${RELEASE_DIR}/SDL2.lib -DSDL2_IMAGE_INCLUDE_DIR=${SDLIMAGE} -DSDL2_IMAGE_LIBRARY_TEMP=${SDLIMAGE}/${OS}/lib/${RELEASE_DIR}/SDL_image.lib -DGLEW_INCLUDE_DIR=${GLEW} -DGLEW_STATIC_LIBRARY_DEBUG=${GLEW}/${OS}/lib/${DEBUG_DIR}/glew32d.lib -DGLEW_STATIC_LIBRARY_RELEASE=${GLEW}/${OS}/lib/${RELEASE_DIR}/glew32.lib ${RMLUI})
#WIN32_VS_DEBUG(RmlUi-${RMLUI_VERSION} RmlUi.sln)
#WIN32_VS_RELEASE(RmlUi-${RMLUI_VERSION} RmlUi.sln)

## Test Building with Msys/Mingw
##WIN32_COMMAND(${CMAKE_COMMAND} -G "MSYS Makefiles" -DCMAKE_MAKE_PROGRAM=${MSYS}/bin/make.exe -DENABLE_PRECOMPILED_HEADERS=OFF -DDISABLE_RTTI_AND_EXCEPTIONS=ON -DBUILD_SHARED_LIBS=OFF -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/freetype.lib -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/freetype.lib ${RMLUI})
##WIN32_BASH("#!/bin/bash\;
##cd /${RMLUI}/${OS}\;
##export PATH=/c/mingw32/bin:$PATH\;
##export PATH=/c/msys/bin:$PATH\;
##make\;
##exit\;")


MAC_PATH(${RMLUI}/${OS})
MAC_COMMAND(${DKCMAKE_MAC64} ${FREETYPE_APPLE} ${RMLUI})
MAC_XCODE(RmlUi-${RMLUI_VERSION})


IOS_COMMAND(${RMLUI}/${OS})
IOS_COMMAND(${DKCMAKE_IOS64} ${FREETYPE_APPLE} ${RMLUI})
IOS_XCODE(RmlUi-${RMLUI_VERSION})


IOSSIM_PATH(${RMLUI}/${OS})
IOSSIM_COMMAND(${DKCMAKE_IOSSIM64} ${FREETYPE_APPLE} ${RMLUI})
IOSSIM_XCODE(RmlUi-${RMLUI_VERSION})


LINUX_DEBUG_PATH(${RMLUI}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=DEBUG ${FREETYPE_LINUX} ${RMLUI})
LINUX_DEBUG_COMMAND(make)

LINUX_RELEASE_PATH(${RMLUI}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=RELEASE ${FREETYPE_LINUX} ${RMLUI})
LINUX_RELEASE_COMMAND(make)


RASPBERRY_DEBUG_PATH(${RMLUI}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=DEBUG ${FREETYPE_RASPBERRY} ${RMLUI})
RASPBERRY_DEBUG_COMMAND(make)

RASPBERRY_RELEASE_PATH(${RMLUI}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=RELEASE ${FREETYPE_RASPBERRY} ${RMLUI})
RASPBERRY_RELEASE_COMMAND(make)


##ANDROID_NDK_DEBUG(RmlUi-${RMLUI_VERSION})
##ANDROID_NDK_RELEASE(${RMLUI_VERSION})

ANDROID_PATH(${RMLUI}/${OS})
ANDROID32_COMMAND(${DKCMAKE_WIN32} "-DANDROID_COMPILER_FLAGS=-DRMLUI_STATIC_LIB -I${RMLUI}/Include" -DENABLE_PRECOMPILED_HEADERS=OFF -DBUILD_SAMPLES=OFF ${FREETYPE_ANDROID} ${RMLUI})
ANDROID64_COMMAND(${DKCMAKE_WIN64} "-DANDROID_COMPILER_FLAGS=-DRMLUI_STATIC_LIB -I${RMLUI}/Include" -DENABLE_PRECOMPILED_HEADERS=OFF -DBUILD_SAMPLES=OFF ${FREETYPE_ANDROID} ${RMLUI})
ANDROID_VS(RmlUi-${RMLUI_VERSION} RmlUi.sln)
