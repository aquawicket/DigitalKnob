#!/usr/bin/cmake -P
if(NOT EXISTS "$ENV{DKCMAKE_FUNCTIONS_DIR_}")
	set(ENV{DKCMAKE_FUNCTIONS_DIR_} "../../../DKCMake/functions/")
endif()
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")


############ libbcrypt ############
dk_validate(Target_Tuple "dk_Target_Tuple()")
if(NOT win)
	dk_undepend(libbcrypt)
	dk_disable(libbcrypt)
	dk_return()
endif()


if(win_arm_msvc)
	dk_set(LIBBCRYPT_LIB "$ENV{SystemDrive}/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/arm/bcrypt.lib")
elseif(Windows_Arm64_Clang)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/clangarm64/lib/libbcrypt.a")
elseif(Windows_Arm64_Msvc)
	dk_set(LIBBCRYPT_LIB "$ENV{SystemDrive}/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/arm64/bcrypt.lib")
elseif(Windows_X86_Clang)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/clang32/lib/libbcrypt.a")
elseif(win_x86_64)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/clang64/lib/libbcrypt.a")
elseif(Windows_X86_64_Clang)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/clang64/lib/libbcrypt.a")
elseif(Windows_X86_Gcc)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/mingw32/lib/libbcrypt.a")
elseif(Windows_X86_Msvc)
	dk_set(LIBBCRYPT_LIB "$ENV{SystemDrive}/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x86/bcrypt.lib")
elseif(Windows_X86_64_Gcc)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/mingw64/lib/libbcrypt.a")
elseif(Windows_X86_64_Msvc)
	dk_set(LIBBCRYPT_LIB "$ENV{SystemDrive}/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64/bcrypt.lib")
elseif(Windows_X86_64_Ucrt)
	dk_validate(MSYS2 "dk_depend(msys2)")
	dk_set(LIBBCRYPT_LIB "${MSYS2}/ucrt64/lib/libbcrypt.a")
endif()

dk_assertPath(LIBBCRYPT_LIB)
dk_lib(${LIBBCRYPT_LIB})

#dynamic linking
#SET(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE} -lbcrypt")
#dk_findLibrary(bcrypt.lib)
