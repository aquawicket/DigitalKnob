## http://www.leptonica.org

### DEPENDS ###
DKDEPEND(zlib)
DKDEPEND(tiff)
DKDEPEND(libpng)
IF(ANDROID)
	DKDEPEND(jpeg)
ELSE()
	DKDEPEND(libjpeg-turbo)
ENDIF()
DKDEPEND(giflib)


### VERSION ###
DKSET(LEPTONICA_MAJOR_VERSION 1)
DKSET(LEPTONICA_MINOR_VERSION 74)
DKSET(LEPTONICA_BUILD_VERSION 4)
DKSET(LEPTONICA_VERSION ${LEPTONICA_MAJOR_VERSION}.${LEPTONICA_MINOR_VERSION}.${LEPTONICA_BUILD_VERSION})
DKSET(LEPTONICA ${3RDPARTY}/leptonica-${LEPTONICA_VERSION})


### INSTALL ###
## http://www.leptonica.org/source/leptonica-1.74.4.tar.gz
DKINSTALL(http://www.leptonica.org/source/leptonica-${LEPTONICA_MAJOR_VERSION}.${LEPTONICA_MINOR_VERSION}.${LEPTONICA_BUILD_VERSION}.tar.gz leptonica leptonica-${LEPTONICA_VERSION})


### LINK ###
DKINCLUDE(${LEPTONICA})
DKINCLUDE(${LEPTONICA}/${OS}/src)
DKINCLUDE(${LEPTONICA}/${OS}/${RELEASE}/src)
WIN_DEBUG_LIB(${LEPTONICA}/${OS}/src/${DEBUG}/leptonica-${LEPTONICA_VERSION}d.lib)
WIN_RELEASE_LIB(${LEPTONICA}/${OS}/src/${RELEASE}/leptonica-${LEPTONICA_VERSION}.lib)
APPLE_DEBUG_LIB(${LEPTONICA}/${OS}/src/${DEBUG}/libleptonica.a)
APPLE_RELEASE_LIB(${LEPTONICA}/${OS}/src/${RELEASE}/libleptonica.a)
LINUX_DEBUG_LIB(${LEPTONICA}/${OS}/${DEBUG}/src/libleptonica.a)
LINUX_RELEASE_LIB(${LEPTONICA}/${OS}/${RELEASE}/src/libleptonica.a)
ANDROID_DEBUG_LIB(${LEPTONICA}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libleptonica.a)
ANDROID_RELEASE_LIB(${LEPTONICA}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libleptonica.a)


### COMPILE ###
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON ${ZLIB_WIN} ${TIFF_WIN} ${PNG_WIN} ${JPEG_WIN} ${GIF_WIN} -S ${LEPTONICA} -B ${LEPTONICA}/${OS})
WIN32_VS_DEBUG(leptonica-${LEPTONICA_VERSION} LEPTONICA.sln leptonica)
WIN32_VS_RELEASE(leptonica-${LEPTONICA_VERSION} LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_CXX_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_WIN} ${TIFF_WIN} ${PNG_WIN} ${JPEG_WIN} -S ${LEPTONICA})
WIN64_VS_DEBUG(leptonica-${LEPTONICA_VERSION} LEPTONICA.sln leptonica)
WIN64_VS_RELEASE(leptonica-${LEPTONICA_VERSION} LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_APPLE} ${TIFF_APPLE} ${PNG_APPLE} ${JPEG_APPLE} -S ${LEPTONICA})
MAC_XCODE_DEBUG(leptonica-${LEPTONICA_VERSION} leptonica)
MAC_XCODE_RELEASE(leptonica-${LEPTONICA_VERSION} leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_APPLE} ${TIFF_APPLE} ${PNG_APPLE} ${JPEG_APPLE} -S ${LEPTONICA})
IOS_XCODE_DEBUG(leptonica-${LEPTONICA_VERSION} leptonica)
IOS_XCODE_RELEASE(leptonica-${LEPTONICA_VERSION} leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${SDL2_APPLE} ${TIFF_APPLE} ${PNG_APPLE} ${JPEG_APPLE} -S ${LEPTONICA})
IOSSIM_XCODE_DEBUG(leptonica-${LEPTONICA_VERSION} leptonica)
IOSSIM_XCODE_RELEASE(leptonica-${LEPTONICA_VERSION} leptonica)

DKSETPATH(${LEPTONICA}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_LINUX} ${TIFF_LINUX} ${PNG_APPLE} ${JPEG_LINUX} -S ${LEPTONICA})
LINUX_DEBUG_COMMAND(make leptonica)

DKSETPATH(${LEPTONICA}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_LINUX} ${TIFF_LINUX} ${PNG_APPLE} ${JPEG_LINUX} -S ${LEPTONICA})
LINUX_RELEASE_COMMAND(make leptonica)

DKSETPATH(${LEPTONICA}/${OS}/${DEBUG})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_RASPBERRY} ${TIFF_RASPBERRY} ${PNG_APPLE} ${JPEG_RASPBERRY} -S ${LEPTONICA})
RASPBERRY_DEBUG_COMMAND(make leptonica)

DKSETPATH(${LEPTONICA}/${OS}/${RELEASE})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_RASPBERRY} ${TIFF_RASPBERRY} ${PNG_APPLE} ${JPEG_RASPBERRY} -S ${LEPTONICA})
RASPBERRY_RELEASE_COMMAND(make leptonica)

ANDROID_NDK_DEBUG(leptonica-${LEPTONICA_VERSION})
ANDROID_NDK_RELEASE(leptonica-${LEPTONICA_VERSION})
