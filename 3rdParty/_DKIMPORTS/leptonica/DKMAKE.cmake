## http://www.leptonica.org

### DEPENDS ###
DKDEPEND(zlib)
DKDEPEND(tiff)
DKDEPEND(libpng)
IF(ANDROID)
	DKDEPEND(jpeg)
ELSE()
	DKDEPEND(libjpeg-turbo)
ENDIF()
DKDEPEND(giflib)


### VERSION ###
DKSET(LEPTONICA_MAJOR_VERSION 1)
DKSET(LEPTONICA_MINOR_VERSION 74)
DKSET(LEPTONICA_BUILD_VERSION 4)
DKSET(LEPTONICA_VERSION ${LEPTONICA_MAJOR_VERSION}.${LEPTONICA_MINOR_VERSION}.${LEPTONICA_BUILD_VERSION})
DKSET(LEPTONICA_NAME leptonica-${LEPTONICA_VERSION})
DKSET(LEPTONICA ${3RDPARTY}/${LEPTONICA_VERSION})


### INSTALL ###
## http://www.leptonica.org/source/leptonica-1.74.4.tar.gz
DKINSTALL(http://www.leptonica.org/source/leptonica-${LEPTONICA_MAJOR_VERSION}.${LEPTONICA_MINOR_VERSION}.${LEPTONICA_BUILD_VERSION}.tar.gz leptonica ${LEPTONICA_NAME})


### LINK ###
DKINCLUDE(${LEPTONICA})
DKINCLUDE(${LEPTONICA}/${OS}/src)
DKINCLUDE(${LEPTONICA}/${OS}/Release/src)
WIN_DEBUG_LIB(${LEPTONICA}/${OS}/src/${DEBUG}/${LEPTONICA_NAME}d.lib)
WIN_RELEASE_LIB(${LEPTONICA}/${OS}/src/Release/${LEPTONICA_NAME}.lib)
APPLE_DEBUG_LIB(${LEPTONICA}/${OS}/src/${DEBUG}/libleptonica.a)
APPLE_RELEASE_LIB(${LEPTONICA}/${OS}/src/${RELEASE}/libleptonica.a)
LINUX_DEBUG_LIB(${LEPTONICA}/${OS}/${DEBUG}/src/libleptonica.a)
LINUX_RELEASE_LIB(${LEPTONICA}/${OS}/Release/src/libleptonica.a)
ANDROID_DEBUG_LIB(${LEPTONICA}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libleptonica.a)
ANDROID_RELEASE_LIB(${LEPTONICA}/${OS}/Release/obj/local/armeabi-v7a/libleptonica.a)


### COMPILE ###
DKSETPATH(${LEPTONICA}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${TIFF}/libtiff /I${TIFF}/${OS}" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_WIN} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS} -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib ${LEPTONICA})
WIN32_VS_DEBUG(${LEPTONICA_NAME} LEPTONICA.sln leptonica)
WIN32_VS_RELEASE(${LEPTONICA_NAME} LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_CXX_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo /I${TIFF}/libtiff /I${TIFF}/${OS}" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_WIN} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS} -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib ${LEPTONICA})
WIN64_VS_DEBUG(${LEPTONICA_NAME} LEPTONICA.sln leptonica)
WIN64_VS_RELEASE(${LEPTONICA_NAME} LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" "-DCMAKE_CXX_FLAGS= -I${TIFF}/libtiff -I${TIFF}/${OS}" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_APPLE} -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE}/libturbojpeg.a ${LEPTONICA})
MAC_XCODE_DEBUG(${LEPTONICA_NAME} leptonica)
MAC_XCODE_RELEASE(${LEPTONICA_NAME} leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" "-DCMAKE_CXX_FLAGS=-I${TIFF}/libtiff -I${TIFF}/${OS}" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${ZLIB_APPLE} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS} -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE}/libturbojpeg.a ${LEPTONICA})
IOS_XCODE_DEBUG(${LEPTONICA_NAME} leptonica)
IOS_XCODE_RELEASE(${LEPTONICA_NAME} leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" "-DCMAKE_CXX_FLAGS=-I${TIFF}/libtiff -I${TIFF}/${OS}" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${SDL2_APPLE} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS} -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE}/libturbojpeg.a ${LEPTONICA})
IOSSIM_XCODE_DEBUG(${LEPTONICA_NAME} leptonica)
IOSSIM_XCODE_RELEASE(${LEPTONICA_NAME} leptonica)

DKSETPATH(${LEPTONICA}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" "-DCMAKE_CXX_FLAGS=-I${TIFF}/libtiff -I${TIFF}/${OS}/${DEBUG}" -DCMAKE_BUILD_TYPE=DEBUG -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${SDL2_LINUX} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS}/${DEBUG} -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/libtiff-static.a -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/libtiff-static.a -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS}/${DEBUG} -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS}/${DEBUG} -DJPEG_LIBRARY=${JPEG}/${OS}/${DEBUG}/libturbojpeg.a ${LEPTONICA})
LINUX_DEBUG_COMMAND(make leptonica)

DKSETPATH(${LEPTONICA}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" "-DCMAKE_CXX_FLAGS=-I${TIFF}/libtiff -I${TIFF}/${OS}/Release" -DCMAKE_BUILD_TYPE=RELEASE -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} ${SDL2_LINUX} -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_INCLUDE_DIR2=${TIFF}/${OS}/Release -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/${DEBUG}/libtiff-static.a -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/libtiff-static.a -DPNG_PNG_INCLUDE_DIR=${PNG} -DPNG_PNG_INCLUDE_DIR2=${PNG}/${OS}/Release -DPNG_LIBRARY_DEBUG=${PNG}/${OS}/${DEBUG}/libpng17_staticd.lib -DPNG_LIBRARY_RELEASE=${PNG}/${OS}/Release/libpng17_static.lib -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS}/Release -DJPEG_LIBRARY=${JPEG}/${OS}/Release/libturbojpeg.a ${LEPTONICA})
LINUX_RELEASE_COMMAND(make leptonica)

ANDROID_NDK_DEBUG(${LEPTONICA_NAME})
ANDROID_NDK_RELEASE(${LEPTONICA_NAME})
