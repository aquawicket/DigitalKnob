### INSTALL ###
DKINSTALL(${DKONLINE}/Libs/libuv-1.x.zip libuv-1.x)
DKSET(UV ${3RDPARTY}/libuv-1.x)


### LINK ###
DKINCLUDE(${UV})
DKINCLUDE(${UV}/${OS})
WIN_DEBUG_LIB(${UV}/${OS}/Debug/uv.lib)
WIN_RELEASE_LIB(${UV}/${OS}/Release/uv.lib)
MAC_DEBUG_LIB(${UV}/${OS}/lib/${DEBUG}/uv.a)
MAC_RELEASE_LIB(${UV}/${OS}/lib/${RELEASE}/uv.a)
IOSSIM_DEBUG_LIB(${UV}/${OS}/${DEBUG}/lib/.libs/uv.a)
IOSSIM_RELEASE_LIB(${UV}/${OS}/${RELEASE}/lib/.libs/uv.a)
LINUX_DEBUG_LIB(${UV}/${OS}/Debug/uv.a)
LINUX_RELEASE_LIB(${UV}/${OS}/Release/uv.a)
ANDROID_DEBUG_LIB(${UV}/${OS}/Debug/obj/local/armeabi-v7a/uv.a)
ANDROID_RELEASE_LIB(${UV}/${OS}/Release/obj/local/armeabi-v7a/uv.a)



DKSETPATH(${UV}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${UV})
WIN32_VS_DEBUG(libuv-1.x uv.sln uv)
WIN32_VS_RELEASE(libuv-1.x uv.sln uv)

DKSETPATH(${UV}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${UV})
WIN64_VS_DEBUG(libuv-1.x uv.sln uv)
WIN64_VS_RELEASE(libuv-1.x uv.sln uv)

DKSETPATH(${UV}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${UV})
MAC64_XCODE_DEBUG(libuv-1.x libuv)
MAC64_XCODE_RELEASE(libuv-1.x libuv)

DKSETPATH(${UV}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${UV})
IOS_XCODE_DEBUG(libuv-1.x libuv)
IOS_XCODE_RELEASE(libuv-1.x libuv)

DKSETPATH(${UV}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${UV})
IOSSIM_XCODE_DEBUG(libuv-1.x libuv)
IOSSIM_XCODE_RELEASE(libuv-1.x libuv)

DKSETPATH(${UV}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC ${UV})
LINUX_DEBUG_COMMAND(make uv)

DKSETPATH(${UV}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC ${UV})
LINUX_RELEASE_COMMAND(make uv)

ANDROID_NDK_DEBUG(libuv-1.x)
ANDROID_NDK_RELEASE(libuv-1.x)