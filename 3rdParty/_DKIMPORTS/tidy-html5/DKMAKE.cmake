### VERSION ###
DKSET(TIDY_MAJOR_VERSION 5)
DKSET(TIDY_MINOR_VERSION 7)
DKSET(TIDY_BUILD_VERSION 28)
DKSET(TIDY_VERSION tidy-html5-${TIDY_MAJOR_VERSION}.${TIDY_MINOR_VERSION}.${TIDY_BUILD_VERSION})


### INSTALL ###
DKINSTALL(https://github.com/htacg/tidy-html5/archive/${TIDY_MAJOR_VERSION}.${TIDY_MINOR_VERSION}.${TIDY_BUILD_VERSION}.zip tidy-html5 ${TIDY_VERSION})
DKRENAME(${DKDOWNLOAD}/${TIDY_MAJOR_VERSION}.${TIDY_MINOR_VERSION}.${TIDY_BUILD_VERSION}.zip ${DKDOWNLOAD}/${TIDY_VERSION})
DKSET(TIDY ${3RDPARTY}/${TIDY_VERSION})


### LINK ###
DKINCLUDE(${TIDY})
DKINCLUDE(${TIDY}/include)
DKINCLUDE(${TIDY}/${OS})
ANDROID_INCLUDE(${TIDY}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/tidysd.lib)
WIN_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/tidys.lib)
APPLE_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/libtidys.a)
APPLE_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/libtidys.a)
LINUX_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/libtidys.a)
LINUX_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/libtidys.a)
RASPBERRY_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/libtidys.a)
RASPBERRY_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/libtidys.a)
#ANDROID_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libtidys.a)
#ANDROID_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libtidys.a)
ANDROID_DEBUG_LIB(${TIDY}/${OS}/${DEBUG_DIR}/libtidys.a)
ANDROID_RELEASE_LIB(${TIDY}/${OS}/${RELEASE_DIR}/libtidys.a)


### COMPILE ###
WIN_PATH(${TIDY}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" ${TIDY})
WIN64_COMMAND(${DKCMAKE_WIN64} "-DCMAKE_C_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" ${TIDY})
WIN_VS(${TIDY_VERSION} tidy.sln tidy-static)


MAC_PATH(${TIDY}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${TIDY})
MAC_XCODE_DEBUG(${TIDY_VERSION} tidy)
MAC_XCODE_RELEASE(${TIDY_VERSION} tidy)


IOS_PATH(${TIDY}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${TIDY})
IOS_XCODE_DEBUG(${TIDY_VERSION} tidy)
IOS_XCODE_RELEASE(${TIDY_VERSION} tidy)


IOSSIM_PATH(${TIDY}/${OS})
IOSSIM64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 ${TIDY})
IOSSIM_XCODE_DEBUG(${TIDY_VERSION} tidy)
IOSSIM_XCODE_RELEASE(${TIDY_VERSION} tidy)


LINUX_DEBUG_PATH(${TIDY}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${TIDY})
LINUX_DEBUG_COMMAND(make tidy)


LINUX_RELEASE_PATH(${TIDY}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${TIDY})
LINUX_RELEASE_COMMAND(make tidy)


RASPBERRY_DEBUG_PATH(${TIDY}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${TIDY})
RASPBERRY_DEBUG_COMMAND(make tidy)

RASPBERRY_RELEASE_PATH(${TIDY}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${TIDY})
RASPBERRY_RELEASE_COMMAND(make tidy)


#ANDROID_NDK_DEBUG(${TIDY_VERSION}d)
#ANDROID_NDK_RELEASE(${TIDY_VERSION})

ANDROID_PATH(${TIDY}/${OS})
ANDROID32_COMMAND(${DKCMAKE_WIN32} "-DANDROID_COMPILER_FLAGS=-DANDROID32 -D_ANDROID -I${ZLIB}/${OS}" ${TIDY})
ANDROID64_COMMAND(${DKCMAKE_WIN64} "-DANDROID_COMPILER_FLAGS=-DANDROID64 -D_ANDROID -I${ZLIB}/${OS}" ${TIDY})
ANDROID_VS(${TIDY_VERSION} tidy.sln tidy-static)