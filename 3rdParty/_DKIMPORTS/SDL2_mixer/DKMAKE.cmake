## https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.4.zip

### DEPENDS ###
DKDEPEND(smpeg2)
IF(NOT WIN_64)
	DKDEPEND(libogg)
	DKDEPEND(libvorbis)
ENDIF()


### VERSION ###
DKSET(SDLMIXER_VERSION 2.0.1)
DKSET(SDLMIXER ${3RDPARTY}/SDL2_mixer-${SDLMIXER_VERSION})



### INSTALL ###
DKINSTALL(https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-${SDLMIXER_VERSION}.zip SDL2_mixer SDL2_mixer-${SDLMIXER_VERSION})



### LINK ###
DKINCLUDE(${SDLMIXER})
WIN_DEBUG_LIB(${SDLMIXER}/${OS}/lib/${DEBUG}/SDL_mixer.lib)
WIN_RELEASE_LIB(${SDLMIXER}/${OS}/lib/${RELEASE}/SDL_mixer.lib)
APPLE_DEBUG_LIB(${SDLMIXER}/${OS}/lib/${DEBUG}/SDL_mixer.a)
APPLE_RELEASE_LIB(${SDLMIXER}/${OS}/lib/${RELEASE}/SDL_mixer.a)
LINUX_DEBUG_LIB(${SDLMIXER}/${OS}/${DEBUG}/lib/SDL_mixer.a)
LINUX_RELEASE_LIB(${SDLMIXER}/${OS}/${RELEASE}/lib/SDL_mixer.a)
ANDROID_DEBUG_LIB(${SDLMIXER}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libSDL2_mixer.a)
ANDROID_RELEASE_LIB(${SDLMIXER}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libSDL2_mixer.a)


### COMPILE ###
WIN_PATH(${SDLMIXER}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${SDL2_WIN} ${VORBIS_WIN} ${OGG_WIN} ${SMPEG2_WIN} ${SDLMIXER})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${SDL2_WIN} ${VORBIS_WIN} ${OGG_WIN} ${SMPEG2_WIN} ${SDLMIXER})
WIN_VS(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER.sln SDLMIXER)


MAC_PATH(${SDLMIXER}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${SDLMIXER})
MAC_XCODE_DEBUG(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)
MAC_XCODE_RELEASE(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)


IOS_PATH(${SDLMIXER}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${SDLMIXER})
IOS_XCODE_DEBUG(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)
IOS_XCODE_RELEASE(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)


IOSSIM_PATH(${SDLMIXER}/${OS})
IOSSIM64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 ${SDLMIXER})
IOSSIM_XCODE_DEBUG(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)
IOSSIM_XCODE_RELEASE(SDL2_mixer-${SDLMIXER_VERSION} SDLMIXER)


LINUX_DEBUG_PATH(${SDLMIXER}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC ${SDLMIXER})
LINUX_DEBUG_COMMAND(make SDLMIXER)

LINUX_RELEASE_PATH(${SDLMIXER}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC ${SDLMIXER})
LINUX_RELEASE_COMMAND(make SDLMIXER)


ANDROID_NDK_DEBUG(SDL2_mixer-${SDLMIXER_VERSION})
ANDROID_NDK_RELEASE(SDL2_mixer-${SDLMIXER_VERSION})
