include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
# https://github.com/madler/zlib
# http://www.zlib.net/

dk_validate(HOST_TRIPLE "dk_getHostTriple()")
dk_validate(TRIPLE "dk_getTargetTriple()")

### IMPORT ###
dk_import(https://github.com/madler/zlib/archive/refs/heads/master.zip)


### LINK ###
dk_include				(${ZLIB}										ZLIB_INCLUDE_DIR)
dk_include				(${ZLIB}/${BUILD_DIR}							ZLIB_INCLUDE_DIR2)

#if(MSVC)
#	WIN_dk_libDebug		(${ZLIB}/${triple}/${DEBUG_DIR}/zlibstaticd.lib		ZLIB_LIBRARY_DEBUG)
#	WIN_dk_libRelease	(${ZLIB}/${triple}/${RELEASE_DIR}/zlibstatic.lib	ZLIB_LIBRARY_RELEASE)
#else()
#	if(MSYSTEM)
#		dk_libDebug		(${ZLIB}/${triple}/${DEBUG_DIR}/libzlibstatic.a		ZLIB_LIBRARY_DEBUG)
#		dk_libRelease	(${ZLIB}/${triple}/${RELEASE_DIR}/libzlibstatic.a	ZLIB_LIBRARY_RELEASE)
#	else()
#		dk_libDebug		(${ZLIB}/${triple}/${DEBUG_DIR}/libz.a				ZLIB_LIBRARY_DEBUG)
#		dk_libRelease	(${ZLIB}/${triple}/${RELEASE_DIR}/libz.a			ZLIB_LIBRARY_RELEASE)
#	endif()
#endif()

dk_set(ZLIB_DEBUG_DIR	${ZLIB}/${triple}/${DEBUG_DIR})
dk_set(ZLIB_RELEASE_DIR ${ZLIB}/${triple}/${RELEASE_DIR})
if(MSVC)
	WIN_dk_libDebug		(${ZLIB_DEBUG_DIR}/zlibstaticd.lib		ZLIB_LIBRARY_DEBUG)
	WIN_dk_libRelease	(${ZLIB_RELEASE_DIR}/zlibstatic.lib		ZLIB_LIBRARY_RELEASE)
else()
	if(MSYSTEM)
		dk_libDebug		(${ZLIB_DEBUG_DIR}/libzlibstatic.a		ZLIB_LIBRARY_DEBUG)
		dk_libRelease	(${ZLIB_RELEASE_DIR}/libzlibstatic.a	ZLIB_LIBRARY_RELEASE)
	else()
		dk_libDebug		(${ZLIB_DEBUG_DIR}/libz.a				ZLIB_LIBRARY_DEBUG)
		dk_libRelease	(${ZLIB_RELEASE_DIR}/libz.a				ZLIB_LIBRARY_RELEASE)
	endif()
endif()


## 3RDPARTY LINK ##
# https://cmake.org/cmake/help/latest/module/FindZLIB.html
if(MULTI_CONFIG)
	if(MSVC)
		dk_set(ZLIB_CMAKE 
		-DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR} 
		-DZLIB_LIBRARY_DEBUG=${ZLIB_LIBRARY_DEBUG} 
		-DZLIB_LIBRARY_RELEASE=${ZLIB_LIBRARY_RELEASE} 
		"-DCMAKE_C_FLAGS=/I${ZLIB_INCLUDE_DIR} /I${ZLIB_INCLUDE_DIR2}" 
		"-DCMAKE_CXX_FLAGS=/I${ZLIB_INCLUDE_DIR} /I${ZLIB_INCLUDE_DIR2}")
	else()
		dk_set(ZLIB_CMAKE 
		-DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR} 
		-DZLIB_LIBRARY_DEBUG=${ZLIB_LIBRARY_DEBUG} 
		-DZLIB_LIBRARY_RELEASE=${ZLIB_LIBRARY_RELEASE} 
		"-DCMAKE_C_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}" 
		"-DCMAKE_CXX_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}")
	endif()
else()
	DEBUG_dk_set(ZLIB_CMAKE
		-DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR}
		-DZLIB_LIBRARY_DEBUG=${ZLIB_LIBRARY_DEBUG}
		-DZLIB_LIBRARY=${ZLIB_LIBRARY_DEBUG}
		-DZLIB_LIBRARIES=${ZLIB_LIBRARY_DEBUG}
		"-DCMAKE_C_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}"
		"-DCMAKE_CXX_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}"
		"-DCMAKE_EXE_LINKER_FLAGS=${ZLIB_LIBRARY_DEBUG}")
		
	RELEASE_dk_set(ZLIB_CMAKE 
		-DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR} 
		-DZLIB_LIBRARY_RELEASE=${ZLIB_LIBRARY_RELEASE} 
		-DZLIB_LIBRARY=${ZLIB_LIBRARY_RELEASE} 
		-DZLIB_LIBRARIES=${ZLIB_LIBRARY_RELEASE} 
		"-DCMAKE_C_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}" 
		"-DCMAKE_CXX_FLAGS=-I${ZLIB_INCLUDE_DIR} -I${ZLIB_INCLUDE_DIR2}"
		"-DCMAKE_EXE_LINKER_FLAGS=${ZLIB_LIBRARY_RELEASE}")
endif()

#set(ENV{ZLIB_USE_STATIC_LIBS} 		ON)
#set(ENV{ZLIB_ROOT} 				${ZLIB})
#set(ENV{ZLIB_INCLUDE_DIR} 			${ZLIB_INCLUDE_DIR})
#set(ENV{ZLIB_INCLUDE_DIRS} 		${ZLIB_INCLUDE_DIR})
#if(DEBUG)
#	set(ENV{ZLIB_LIBRARIES} 		${ZLIB_LIBRARY_DEBUG})
#	set(ENV{ZLIB_LIBRARY} 			${ZLIB_LIBRARY_DEBUG})
#	set(ENV{ZLIB_LIBRARY_DEBUG} 	${ZLIB_LIBRARY_DEBUG})
#endif()
#if(RELEASE)
#	set(ENV{ZLIB_LIBRARIES} 		${ZLIB_LIBRARY_RELEASE})
#	set(ENV{ZLIB_LIBRARY} 			${ZLIB_LIBRARY_RELEASE})
#	set(ENV{ZLIB_LIBRARY_RELEASE} 	${ZLIB_LIBRARY_RELEASE})
#endif()
	

### GENERATE ###
dk_configure(${ZLIB} -DZLIB_BUILD_EXAMPLES=OFF)


### COMPILE ###
dk_build(${ZLIB} zlibstatic)
