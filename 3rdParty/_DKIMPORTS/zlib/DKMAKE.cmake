# http://www.zlib.net/
# https://github.com/madler/zlib
#
# https://www.zlib.net/fossils/zlib-1.2.11.tar.gz
# https://github.com/madler/zlib/archive/refs/tags/v1.2.11.zip


### VERSION ###
DKSET(ZLIB_VERSION 1.2.11)
DKSET(ZLIB_NAME zlib-${ZLIB_VERSION})
DKSET(ZLIB_DL https://www.zlib.net/fossils/${ZLIB_NAME}.tar.gz)
DKSET(ZLIB ${3RDPARTY}/${ZLIB_NAME})


### INSTALL ###
DKINSTALL(${ZLIB_DL} zlib ${ZLIB})


### DKPLUGINS LINK ###
DKINCLUDE(${ZLIB})
DKINCLUDE(${ZLIB}/${OS})
WIN_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG_DIR}/zlibstaticd.lib)
WIN_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE_DIR}/zlibstatic.lib)
UNIX_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG_DIR}/libz.a)
UNIX_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE_DIR}/libz.a)


## 3RDPARTY LINK ##
WIN_SET(ZLIB_CMAKE "-DCMAKE_C_FLAGS=/I${ZLIB}/${OS}" "-DCMAKE_CXX_FLAGS=/I${ZLIB}/${OS}" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE_DIR}/zlibstatic.lib -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG_DIR}/zlibstatic.lib -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE_DIR}/zlibstatic.lib)
APPLE_SET(ZLIB_CMAKE "-DCMAKE_C_FLAGS=-I${ZLIB}/${OS}" "-DCMAKE_CXX_FLAGS=-I${ZLIB}/${OS}" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG_DIR}/libz.a -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE_DIR}/libz.a)
LINUX_SET(ZLIB_CMAKE "-DCMAKE_C_FLAGS_DEBUG=-I${ZLIB}/${OS}/${DEBUG_DIR}" "-DCMAKE_CXX_FLAGS_DEBUG=-I${ZLIB}/${OS}/${DEBUG_DIR}" "-DCMAKE_C_FLAGS_RELEASE=-I${ZLIB}/${OS}/${RELEASE_DIR}" "-DCMAKE_CXX_FLAGS_RELEASE=-I${ZLIB}/${OS}/${RELEASE_DIR}" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG_DIR}/libz.a -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE_DIR}/libz.a)
RASPBERRY_SET(ZLIB_CMAKE "-DCMAKE_C_FLAGS_DEBUG=-I${ZLIB}/${OS}/${DEBUG_DIR}" "-DCMAKE_CXX_FLAGS_DEBUG=-I${ZLIB}/${OS}/${DEBUG_DIR}" "-DCMAKE_C_FLAGS_RELEASE=-I${ZLIB}/${OS}/${RELEASE_DIR}" "-DCMAKE_CXX_FLAGS_RELEASE=-I${ZLIB}/${OS}/${RELEASE_DIR}" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG_DIR}/libz.a -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE_DIR}/libz.a)
ANDROID_SET(ZLIB_CMAKE "-DCMAKE_C_FLAGS=-I${ZLIB}/${OS}" "-DCMAKE_CXX_FLAGS=-I${ZLIB}/${OS}" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG_DIR}/libz.a -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE_DIR}/libz.a)
#IOS_SET(ZLIB_CONFIGURE_DEBUG "CFLAGS= -I${ZLIB} -I${ZLIB}/${OS} -I${ZLIB}/${OS}/${DEBUG_DIR}/libz.a" "CPPFLAGS= -I${ZLIB} -I${ZLIB}/${OS} -I${ZLIB}/${OS}/${DEBUG_DIR}/libz.a")
#IOS_SET(ZLIB_CONFIGURE_RELEASE "CFLAGS= -I${ZLIB} -I${ZLIB}/${OS} -I${ZLIB}/${OS}/${RELEASE_DIR}/libz.a" "CPPFLAGS= -I${ZLIB} -I${ZLIB}/${OS} -I${ZLIB}/${OS}/${RELEASE_DIR}/libz.a")


### COMPILE ###
DKSETPATH(${ZLIB}/${BUILD_DIR})

DUMP(DKCMAKE_BUILD)

DKCOMMAND(${DKCMAKE_BUILD} ${ZLIB})

WIN_VS(${ZLIB_NAME} zlib.sln zlibstatic)
MAC_XCODE(${ZLIB_NAME} zlibstatic)
IOS_XCODE(${ZLIB_NAME} zlibstatic)
IOSSIM_XCODE(${ZLIB_NAME} zlibstatic)
LINUX_COMMAND(make zlibstatic)
RASPBERRY_COMMAND(make zlibstatic)
ANDROID_VS(${ZLIB_NAME} zlib.sln zlibstatic)


#DKCOMPILE(WIN          MSBUILD   zlib-1.2.11  zlib.sln   zlibstatic   zlibstatic.lib)
#DKCOMPILE(APPLE        XCODE     zlib-1.2.11             zlibstatic   libz.a)
#DKCOMPILE(LINUX        MAKE      zlib-1.2.11             zlibstatic   libz.a)
#DKCOMPILE(RASPBERRY    MAKE      zlib-1.2.11             zlibstatic   libz.a)
#DKCOMPILE(ANDROID      ANDROID   zlib-1.2.11  zlib.sln   zlibstatic   libz.a)
