### INSTALL ###
DKINSTALL(http://DigitalKnob.com/Download/Libs/SDL2_ttf-2.0.14.zip SDL2_ttf-2.0.14)
DKSET(SDLTTF ${3RDPARTY}/SDL2_ttf-2.0.14)


### LINK ###
DKINCLUDE(${SDLTTF})
WIN_DEBUG_LIB(${SDLTTF}/${OS}/lib/Debug/SDL_mixer.lib)
WIN_RELEASE_LIB(${SDLTTF}/${OS}/lib/Release/SDL_mixer.lib)
APPLE_DEBUG_LIB(${SDLTTF}/${OS}/lib/Debug/SDL_mixer.a)
APPLE_RELEASE_LIB(${SDLTTF}/${OS}/lib/Release/SDL_mixer.a)
LINUX_DEBUG_LIB(${SDLTTF}/linux64/Debug/lib/SDL_mixer.a)
LINUX_RELEASE_LIB(${SDLTTF}/linux64/Release/lib/SDL_mixer.a)
ANDROID_DEBUG_LIB(${SDLTTF}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libSDL2_mixer.a)
ANDROID_RELEASE_LIB(${SDLTTF}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libSDL2_mixer.a)


### COMPILE ###
DKSETPATH(${SDLTTF}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Release/SDL2.lib -DSMPEG_INCLUDE_DIR=${SMPEG2} -DWIN_32=ON ${SDLTTF})
WIN32_VS_DEBUG(SDL2_ttf-2.0.14 SDLTTF.sln SDLTTF)
WIN32_VS_RELEASE(SDL2_ttf-2.0.14 SDLTTF.sln SDLTTF)

DKSETPATH(${SDLTTF}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Release/SDL2.lib -DSMPEG_INCLUDE_DIR=${SMPEG2} -DWIN_64=ON ${SDLTTF})
WIN64_VS_DEBUG(SDL2_ttf-2.0.14 SDLTTF.sln SDLTTF)
WIN64_VS_RELEASE(SDL2_ttf-2.0.14 SDLTTF.sln SDLTTF)

DKSETPATH(${SDLTTF}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Release/libSDL2.a -DSMPEG_INCLUDE_DIR=${SMPEG2} -DMAC=ON ${SDLTTF})
MAC_XCODE_DEBUG(SDL2_ttf-2.0.14 SDLTTF)
MAC_XCODE_RELEASE(SDL2_ttf-2.0.14 SDLTTF)

DKSETPATH(${SDLTTF}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a -DSMPEG_INCLUDE_DIR=${SMPEG2} -DIOS_32=ON ${SDLTTF})
IOS_XCODE_DEBUG(SDL2_ttf-2.0.14 SDLTTF)
IOS_XCODE_RELEASE(SDL2_ttf-2.0.14 SDLTTF)

DKSETPATH(${SDLTTF}/${OS})
IOSSIM32_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a -DSMPEG_INCLUDE_DIR=${SMPEG2} -DIOSSIM_32=ON ${SDLTTF})
IOSSIM32_XCODE_DEBUG(SDL2_ttf-2.0.14 SDLTTF)
IOSSIM32_XCODE_RELEASE(SDL2_ttf-2.0.14 SDLTTF)

DKSETPATH(${SDLTTF}/${OS}/Debug)
LINUX64_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Debug/libSDL2.a -DSMPEG_INCLUDE_DIR=${SMPEG2} -DLINUX_64=ON ${SDLTTF})
LINUX64_DEBUG_COMMAND(make SDLTTF)

DKSETPATH(${SDLTTF}/${OS}/Release)
LINUX64_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Release/libSDL2.a -DSMPEG_INCLUDE_DIR=${SMPEG2} -DLINUX_64=ON ${SDLTTF})
LINUX64_RELEASE_COMMAND(make SDLTTF)

ANDROID_NDK_DEBUG(SDL2_ttf-2.0.14)
ANDROID_NDK_RELEASE(SDL2_ttf-2.0.14)