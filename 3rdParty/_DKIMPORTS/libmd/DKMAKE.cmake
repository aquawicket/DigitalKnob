# https://github.com/guillemj/libmd

if(NOT IOSSIM)
	return()
endif()


### DEPEND ###
DKDEPEND(autotools)


dk_import(https://github.com/guillemj/libmd)
#dk_set(LIBMD_VERSION 1.0.4)
#dk_set(LIBMD_NAME libmd-${LIBMD_VERSION})
#dk_set(LIBMD_DL https://github.com/guillemj/libmd/archive/refs/tags/1.0.4.zip)
#dk_set(LIBMD ${3RDPARTY}/${LIBMD_NAME})
#DKINSTALL(${LIBMD_DL} libmd ${LIBMD} NOPATCH)


### LINK ###
DKINCLUDE(${LIBMD}/include)
WIN_DEBUG_DKLIB(${LIBMD}/${OS}/${DEBUG_DIR}/libmdd.lib)
WIN_RELEASE_DKLIB(${LIBMD}/${OS}/${RELEASE_DIR}/libmd.lib)
APPLE_DEBUG_DKLIB(${LIBMD}/${OS}/${DEBUG_DIR}/liblibmdd.a)
APPLE_RELEASE_DKLIB(${LIBMD}/${OS}/${RELEASE_DIR}/liblibmd.a)
LINUX_DEBUG_DKLIB(${LIBMD}/${OS}/${DEBUG_DIR}/liblibmdd.a)
LINUX_RELEASE_DKLIB(${LIBMD}/${OS}/${RELEASE_DIR}/liblibmd.a)
RASPBERRY_DEBUG_DKLIB(${LIBMD}/${OS}/${DEBUG_DIR}/liblibmdd.a)
RASPBERRY_RELEASE_DKLIB(${LIBMD}/${OS}/${RELEASE_DIR}/liblibmd.a)
ANDROID_DEBUG_DKLIB(${LIBMD}/${OS}/${DEBUG_DIR}/liblibmdd.a)
ANDROID_RELEASE_DKLIB(${LIBMD}/${OS}/${RELEASE_DIR}/liblibmd.a)


### 3RDPARTY LINK ###
WIN_dk_set(LIBMD_CMAKE -DLIBMD_LIBRARY=${LIBMD}/${OS}/${DEBUG_DIR}/libmd.a)
APPLE_dk_set(LIBMD_CMAKE -DLIBMD_LIBRARY=${LIBMD}/${OS}/${DEBUG_DIR}/libmd.a)
LINUX_dk_set(LIBMD_CMAKE -DLIBMD_LIBRARY=${LIBMD}/${OS}/${DEBUG_DIR}/libmd.a)
RASPBERRY_dk_set(LIBMD_CMAKE -DLIBMD_LIBRARY=${LIBMD}/${OS}/${DEBUG_DIR}/libmd.a)
ANDROID_dk_set(LIBMD_CMAKE -DLIBMD_LIBRARY=${LIBMD}/${OS}/${DEBUG_DIR}/libmd.a)


### COMPILE ###
WIN32_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
WIN32_DEBUG_MSYS(${DKCONFIGURE_BUILD})
WIN32_DEBUG_MSYS(make)
WIN32_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
WIN32_RELEASE_MSYS(${DKCONFIGURE_BUILD})
WIN32_RELEASE_MSYS(make)


WIN64_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
WIN64_DEBUG_MSYS(${DKCONFIGURE_BUILD})
WIN64_DEBUG_MSYS(make)
WIN64_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
WIN64_RELEASE_MSYS(${DKCONFIGURE_BUILD})
WIN64_RELEASE_MSYS(make)


MAC_DEBUG_DKSETPATH(${LIBMD})
MAC_DEBUG_DKQCOMMAND(aclocal)
MAC_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
MAC_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
MAC_DEBUG_DKQCOMMAND(make)
MAC_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
MAC_RELEASE_DKQCOMMAND(${DKCONFIGURE_BUILD})
MAC_RELEASE_DKQCOMMAND(make)


IOS_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
IOS_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
IOS_DEBUG_DKQCOMMAND(make)
IOS_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
IOS_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
IOS_RELEASE_DKQCOMMAND(make)


IOSSIM_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
IOSSIM_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
IOSSIM_DEBUG_DKQCOMMAND(make)
IOSSIM_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
IOSSIM_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
IOSSIM_RELEASE_DKQCOMMAND(make)


LINUX_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
LINUX_DEBUG_DKQCOMMAND(make)
LINUX_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_DKQCOMMAND(${DKCONFIGURE_BUILD})
LINUX_RELEASE_DKQCOMMAND(make)


RASPBERRY_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_DEBUG_DKQCOMMAND(make)
RASPBERRY_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_DKQCOMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_RELEASE_DKQCOMMAND(make)


ANDROID_NDK(${LIBMD_NAME})
#ANDROID_DEBUG_DKSETPATH(${LIBMD}/${OS}/${DEBUG_DIR})
#ANDROID_DEBUG_MSYS(${DKCONFIGURE_BUILD})
#ANDROID_DEBUG_MSYS(make)
#ANDROID_RELEASE_DKSETPATH(${LIBMD}/${OS}/${RELEASE_DIR})
#ANDROID_RELEASE_MSYS(${DKCONFIGURE_BUILD})
#ANDROID_RELEASE_MSYS(make)
