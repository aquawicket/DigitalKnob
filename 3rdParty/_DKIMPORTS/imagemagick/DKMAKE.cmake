# https://imagemagick.org/index.php
# https://github.com/ImageMagick/ImageMagick
#
# https://github.com/ImageMagick/ImageMagick/archive/refs/tags/7.1.0-0.zip
# http://ftp.icm.edu.pl/packages/ImageMagick/binaries/ImageMagick-7.1.0-portable-Q16-x86.zip

### DEPENDS ###
#DKDEPEND(ghostscript)

### VERSION ###
if(WIN)
	DKSET(IMAGEMAGICK_VERSION 7.1.0-portable-Q16-x86)
else()
	DKSET(IMAGEMAGICK_VERSION 7.1.0-0)
endif()
DKSET(IMAGEMAGICK_NAME ImageMagick-${IMAGEMAGICK_VERSION})
WIN_DKSET(IMAGEMAGICK_DL http://ftp.icm.edu.pl/packages/ImageMagick/binaries/${IMAGEMAGICK_NAME}.zip)
LINUX_SET(IMAGEMAGICK_DL https://github.com/ImageMagick/ImageMagick/archive/refs/tags/${IMAGEMAGICK_VERSION}.zip)
MAC_SET(IMAGEMAGICK_DL https://github.com/ImageMagick/ImageMagick/archive/refs/tags/${IMAGEMAGICK_VERSION}.zip )
DKSET(IMAGEMAGICK ${3RDPARTY}/${IMAGEMAGICK_NAME})
WIN_DKSET(IMAGEMAGICK_CONVERT ${IMAGEMAGICK}/convert.exe)


### INSTALL ###
DKINSTALL(${IMAGEMAGICK_DL} imagemagick ${IMAGEMAGICK})


### LINK ###
#DKINCLUDE(${IMAGEMAGICK}/${OS})
#WIN_DEBUG_LIB(${IMAGEMAGICK}/${OS}/${DEBUG_DIR}/imagemagickd.lib)
#WIN_RELEASE_LIB(${IMAGEMAGICK}/${OS}/${RELEASE_DIR}/imagemagick.lib)
APPLE_DEBUG_LIB(${IMAGEMAGICK}/${OS}/${DEBUG_DIR}/libimagemagick.a)
APPLE_RELEASE_LIB(${IMAGEMAGICK}/${OS}/${RELEASE_DIR}/libimagemagick.a)
LINUX_DEBUG_LIB(${IMAGEMAGICK}/${OS}/${DEBUG_DIR}/libimagemagick.a)
LINUX_RELEASE_LIB(${IMAGEMAGICK}/${OS}/${RELEASE_DIR}/libimagemagick.a)
ANDROID_DEBUG_LIB(${IMAGEMAGICK}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libimagemagick.a)
ANDROID_RELEASE_LIB(${IMAGEMAGICK}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libimagemagick.a)


### COMPILE ###
WIN32_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
WIN32_DEBUG_MSYS(${DKCONFIGURE_BUILD})
WIN32_DEBUG_MSYS(make)
WIN32_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
WIN32_RELEASE_MSYS(${DKCONFIGURE_BUILD})
WIN32_RELEASE_MSYS(make)


WIN64_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
WIN64_DEBUG_MSYS(${DKCONFIGURE_BUILD})
WIN64_DEBUG_MSYS(make)
WIN64_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
WIN64_RELEASE_MSYS(${DKCONFIGURE_BUILD})
WIN64_RELEASE_MSYS(make)


MAC_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
MAC_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
MAC_DEBUG_COMMAND(make)
MAC_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
MAC_RELEASE_COMMAND(${DKCONFIGURE_BUILD})
MAC_RELEASE_COMMAND(make)


IOS_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
IOS_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
IOS_DEBUG_COMMAND(make)
IOS_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
IOS_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
IOS_RELEASE_COMMAND(make)


IOSSIM_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
IOSSIM_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
IOSSIM_DEBUG_COMMAND(make)
IOSSIM_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
IOSSIM_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
IOSSIM_RELEASE_COMMAND(make)


LINUX_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
LINUX_DEBUG_COMMAND(make)
LINUX_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${DKCONFIGURE_BUILD})
LINUX_RELEASE_COMMAND(make)


RASPBERRY_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_DEBUG_COMMAND(make)
RASPBERRY_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_RELEASE_COMMAND(make)


ANDROID_NDK(${IMAGEMAGICK_NAME})
#ANDROID_DEBUG_PATH(${IMAGEMAGICK}/${OS}/${DEBUG_DIR})
#ANDROID_DEBUG_COMMAND(${DKCONFIGURE_BUILD})
#ANDROID_DEBUG_COMMAND(make)
#ANDROID_RELEASE_PATH(${IMAGEMAGICK}/${OS}/${RELEASE_DIR})
#ANDROID_RELEASE_COMMAND(${DKCONFIGURE_BUILD})
#ANDROID_RELEASE_COMMAND(make)
