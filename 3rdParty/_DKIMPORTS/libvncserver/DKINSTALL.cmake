#!/usr/bin/cmake -P
if(NOT EXISTS "$ENV{DKCMAKE_FUNCTIONS_DIR_}")
	set(ENV{DKCMAKE_FUNCTIONS_DIR_} "../../../DKCMake/functions/")
endif()
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")


############ libvnc ############
# https://github.com/LibVNC/libvncserver.git

dk_load(dk_builder)

### DEPEND ###
if(Apple)
	dk_depend(gnutls)
endif()
dk_depend(libjpeg-turbo)
dk_depend(libpng)
dk_depend(libsystemd-dev)
dk_depend(openssl)
dk_depend(sdl)
dk_depend(zlib)

### IMPORT ###
dk_import(https://github.com/LibVNC/libvncserver/archive/f7735c48.zip)

### LINK ###
dk_include				(${LIBVNCSERVER})
dk_include				(${LIBVNCSERVER}/include)
dk_include				(${LIBVNCSERVER}/examples)
dk_include				(${LIBVNCSERVER}/${Target_Tuple})
dk_include				(${LIBVNCSERVER}/${Target_Tuple}/include)
Debug_dk_include		(${LIBVNCSERVER_DEBUG_DIR})
Release_dk_include		(${LIBVNCSERVER_RELEASE_DIR})
Debug_dk_include		(${LIBVNCSERVER_DEBUG_DIR}/include)
Release_dk_include		(${LIBVNCSERVER_RELEASE_DIR}/include)

# vncserver
if(MSVC)
	dk_libDebug		(${LIBVNCSERVER_DEBUG_DIR}/vncserver.lib)
	dk_libRelease	(${LIBVNCSERVER_RELEASE_DIR}/vncserver.lib)
else()
	dk_libDebug		(${LIBVNCSERVER_DEBUG_DIR}/libvncserver.a)
	dk_libRelease	(${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a)
endif()

# vncclient
if(MSVC)
	dk_libDebug		(${LIBVNCSERVER_DEBUG_DIR}/vncclient.lib)
	dk_libRelease	(${LIBVNCSERVER_RELEASE_DIR}/vncclient.lib)
else()
	dk_libDebug		(${LIBVNCSERVER_DEBUG_DIR}/libvncclient.a)
	dk_libRelease	(${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
endif()

### 3RDPARTY LINK ###
Android_Debug_dk_set		(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncclient.a)
Android_Release_dk_set		(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
Apple_dk_set				(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER}/${Target_Tuple}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER}/${Target_Tuple}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
Emscripten_Debug_dk_set		(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncclient.a)
Emscripten_Release_dk_set	(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
Linux_Debug_dk_set			(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncclient.a)
Linux_Release_dk_set		(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
Raspberry_Debug_dk_set		(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_DEBUG_DIR}/libvncclient.a)
Raspberry_Release_dk_set	(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" "-DCMAKE_CXX_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncserver.a -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/libvncclient.a)
if(MSVC)
	Windows_dk_set				(LIBVNCSERVER_CMAKE "/DCMAKE_C_FLAGS=/I${LIBVNCSERVER} /I${LIBVNCSERVER}/${Target_Tuple}" "/DCMAKE_CXX_FLAGS=/I${LIBVNCSERVER} /I${LIBVNCSERVER}/${Target_Tuple}" /DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} /DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/vncserver.lib /DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/vncclient.lib)
else()
	Windows_dk_set				(LIBVNCSERVER_CMAKE "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER}/${Target_Tuple}" "-DCMAKE_CXX_FLAGS==I${LIBVNCSERVER} =I${LIBVNCSERVER}/${Target_Tuple}" -DLIBVNCSERVER_INCLUDE_DIR=${LIBVNCSERVER} -DLIBVNCSERVER_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/vncserver.lib -DLIBVNCCLIENT_LIBRARY=${LIBVNCSERVER_RELEASE_DIR}/vncclient.lib)
endif()

### GENERATE ###
Android_Debug_dk_configure		(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Android_Release_dk_configure	(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Apple_dk_configure				(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON -DWITH_LZO=OFF)
Emscripten_Debug_dk_configure	(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Emscripten_Release_dk_configure	(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Linux_Debug_dk_configure		(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Linux_Release_dk_configure		(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Raspberry_Debug_dk_configure	(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_DEBUG_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
Raspberry_Release_dk_configure	(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER_RELEASE_DIR}" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)

if(MSVC)
	Windows_dk_configure			(${LIBVNCSERVER} "/DCMAKE_C_FLAGS=/I${LIBVNCSERVER} /I${LIBVNCSERVER}/${Target_Tuple}/include" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} /DWITH_JPEG=ON)
else()
	Windows_dk_configure			(${LIBVNCSERVER} "-DCMAKE_C_FLAGS=-I${LIBVNCSERVER} -I${LIBVNCSERVER}/${Target_Tuple}/include" ${LIBJPEG_TURBO_CMAKE} ${LIBPNG_CMAKE} ${OPENSSL_CMAKE} ${SDL_CMAKE} ${ZLIB_CMAKE} -DWITH_JPEG=ON)
endif()

### PATCH ###
if(Apple OR Emscripten)
	dk_fileReplace(${LIBVNCSERVER}/${CONFIG_PATH}/rfb/rfbconfig.h "\n#include <unistd.h>" "")
	dk_fileReplace(${LIBVNCSERVER}/${CONFIG_PATH}/rfb/rfbconfig.h "UNISTD_H  1" "UNISTD_H  1 \n#include <unistd.h>")
endif()

### COMPILE ###
dk_build(${LIBVNCSERVER} vncserver)
dk_build(${LIBVNCSERVER} vncclient)
