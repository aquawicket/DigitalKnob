### DEPENDS ###
IF(WIN)
	DKDEPEND(python)
	DKDEPEND(vc2019)
ENDIF()
IF(LINUX)
IF(NOT RASPBERRY)
	DKDEPEND(libboost-tools-dev)
ENDIF()
ENDIF()
IF(RASPBERRY)
	DKDEPEND(libboost-tools-dev)
ENDIF()
IF(ANDROID)
	IF(CMAKE_HOST_WIN32)
		DKDEPEND(vc2019)
		DKDEPEND(android-ndk-r21e)
		DKDEPEND(mingw32)
		DKDEPEND(msys)
	ENDIF()
ENDIF()


### INSTALL ###
DKINSTALL(https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.zip boost_1_74_0)
DKSET(BOOST ${3RDPARTY}/boost_1_74_0)


### LINK ###
DKINCLUDE(${BOOST})
#IF(WIN)
	DKLINKDIR(${BOOST}/${OS}/Debug/lib)
	DKLINKDIR(${BOOST}/${OS}/Release/lib)
#ENDIF()
#IF(MAC)
#	DKLINKDIR(${BOOST}/${OS}/lib)
#ENDIF()
#IF(LINUX)
#IF(NOT RASPBERRY)
#	DKLINKDIR(${BOOST}/${OS}/lib)
#ENDIF()
#ENDIF()
#IF(RASPBERRY)
#	DKLINKDIR(${BOOST}/${OS}/lib)
#ENDIF()
#IF(ANDROID)
#	DKLINKDIR(${BOOST}/${OS}/lib)
#ENDIF()

IF(STATIC)
IF(Boost_Atomic)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_atomic-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_atomic-clang-mt-a32-1_74.a)
ENDIF()

IF(Boost_Chrono)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_chrono-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_chrono-clang-mt-a32-1_74.a)
ENDIF()

IF(Boost_DateTime)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_date_time-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_date_time-clang-mt-a32-1_74.a)
ENDIF()

IF(Boost_Filesystem)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_filesystem-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_filesystem-clang-mt-a32-1_74.a)
ENDIF()

IF(Boost_Random)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_random-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_random-clang-mt-a32-1_74.a)
ENDIF()

IF(Boost_System)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_system-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_system-clang-mt-a32-1_74.a)
ENDIF() 
IF(Boost_Thread)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread-vc142-mt-sgd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread-vc142-mt-s-x32-1_74.lib)
	WIN64_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread-vc142-mt-sgd-x64-1_74.lib)
	WIN64_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread-vc142-mt-s-x64-1_74.lib)
	APPLE_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread.a)
	APPLE_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread.a)
	LINUX_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread.a)
	LINUX_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread.a)
	RASPBERRY_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread.a)
	RASPBERRY_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread.a)
	ANDROID_DEBUG_LIB(${BOOST}/${OS}/Debug/lib/libboost_thread-clang-mt-a32-1_74.a)
	ANDROID_RELEASE_LIB(${BOOST}/${OS}/Release/lib/libboost_thread-clang-mt-a32-1_74.a)
ENDIF()


### COMPILE ###
DKSETPATH(${BOOST})
WIN32_COMMAND(bootstrap.bat)
WIN32_COMMAND(b2 toolset=msvc link=static address-model=32 variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
WIN32_COMMAND(b2 toolset=msvc link=static address-model=32 variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

WIN64_COMMAND(call C:/Windows/System32/cmd.exe /E:ON /V:ON /T:0E /K "${WINDOWS_SDK_EXE}")
DKSETPATH(${BOOST})
WIN64_COMMAND(bootstrap.bat)
WIN64_COMMAND(b2 toolset=msvc link=static address-model=64 variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Debug)
WIN64_COMMAND(b2 toolset=msvc link=static address-model=64 variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

DKSETPATH(${BOOST})
MAC32_COMMAND(sudo ./bootstrap.sh)
MAC32_COMMAND(sudo ./b2 --toolset=darwin address-model=32 link=static variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
MAC32_COMMAND(sudo ./b2 --toolset=darwin address-model=32 link=static variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

DKSETPATH(${BOOST})
MAC64_COMMAND(sudo ./bootstrap.sh)
MAC64_COMMAND(sudo ./b2 --toolset=darwin address-model=64 link=static variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
MAC64_COMMAND(sudo ./b2 --toolset=darwin address-model=64 link=static variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

DKSETPATH(${BOOST})
LINUX_COMMAND(sudo ./bootstrap.sh)
LINUX_DEBUG_COMMAND(b2 toolset=gcc link=static variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
LINUX_RELEASE_COMMAND(b2 toolset=gcc link=static variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

DKSETPATH(${BOOST})
RASPBERRY_DEBUG_COMMAND(b2 toolset=gcc link=static variant=debug runtime-debugging=on runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
RASPBERRY_RELEASE_COMMAND(b2 toolset=gcc link=static variant=release runtime-debugging=off runtime-link=static --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release)

DKSETPATH(${BOOST})
IF(ANDROID_32)
	ANDROID_BASH("#!/bin/bash
		cd ${BOOST}
		export PATH=/${MINGW32}/bin:$PATH\;
		export PATH=/${MSYS}/bin:$PATH\;
		./SetupAndroid.sh")
	DKCOPY(${BOOST}/user-config.jam ${BOOST}/tools/build/src/user-config.jam TRUE)
	ANDROID_DEBUG_COMMAND(set ANDROIDNDKROOT=${ANDROID_NDK} && set NDKVER=r21e && set CLANGPATH=%ANDROIDNDKROOT%/toolchains/llvm/prebuilt/windows-x86_64/bin && b2 architecture=arm variant=debug --ignore-site-config -j4 target-os=android toolset=clang-armeabiv7a link=static threading=multi --layout=versioned --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
	ANDROID_RELEASE_COMMAND("set ANDROIDNDKROOT=${ANDROID_NDK} && set NDKVER=r21e && set CLANGPATH=%ANDROIDNDKROOT%/toolchains/llvm/prebuilt/windows-x86_64/bin && b2 architecture=arm variant=release --ignore-site-config -j4 target-os=android toolset=clang-armeabiv7a link=static threading=multi --layout=versioned --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release")
ENDIF()
ENDIF(STATIC)


IF(SHARED)
IF(Boost_Filesystem)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/lib/boost_filesystem-vc142-mt-gd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/lib/boost_filesystem-vc142-mt-x32-1_74.lib)
ENDIF()

IF(Boost_System)
	WIN32_DEBUG_LIB(${BOOST}/${OS}/lib/boost_system-vc142-mt-gd-x32-1_74.lib)
	WIN32_RELEASE_LIB(${BOOST}/${OS}/lib/boost_system-vc142-mt-x32-1_74.lib)
ENDIF()

##IF(WIN_32)
##	DKSETPATH(${BOOSTBUILD})
##ENDIF()
	##WIN32_COMMAND(b2 install toolset=msvc-14.0 --prefix=${BOOSTBUILD})
	##DKSETPATH(${BOOST})
	WIN32_COMMAND(b2 toolset=msvc-14.0 link=shared variant=debug runtime-debugging=on runtime-link=shared --threading=multi --build-dir=${BOOST}/${OS}/Debug --stagedir=${BOOST}/${OS}/Debug)
	WIN32_COMMAND(b2 toolset=msvc-14.0 link=shared variant=release runtime-debugging=off runtime-link=shared --threading=multi --build-dir=${BOOST}/${OS}/Release --stagedir=${BOOST}/${OS}/Release/)
ENDIF(SHARED)
