# https://github.com/freetype/freetype
# https://www.freetype.org/

DKDEPEND(bzip2)
DKDEPEND(zlib)
DKDEPEND(libpng)

if(NOT MAC)
	#DKIMPORT(https://github.com/freetype/freetype)
    DKIMPORT(https://github.com/freetype/freetype/archive/20ec99be7ecfd1a07e1ff7a7ef3e510203ea33bd.zip)
else()	
	DKSET(FREETYPE_VERSION 2.5.5)
	DKSET(FREETYPE_NAME freetype-${FREETYPE_VERSION})
	DKSET(FREETYPE_DL https://sourceforge.net/projects/freetype/files/freetype2/2.5.5/freetype-2.5.5.tar.gz)
	DKSET(FREETYPE ${3RDPARTY}/${FREETYPE_NAME})
	DKINSTALL(${FREETYPE_DL} freetype ${FREETYPE})
endif()


### DKPLUGINS LINK ###
DKINCLUDE(${FREETYPE}/include)
DKINCLUDE(${FREETYPE}/${OS}/include/freetype2)

WIN_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/freetyped.lib)
WIN_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/freetype.lib)
MAC_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetype.a)
MAC_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
IOS_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetyped.a)
IOS_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
IOSSIM_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetyped.a)
IOSSIM_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
LINUX_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetyped.a)
LINUX_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
RASPBERRY_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetyped.a)
RASPBERRY_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
ANDROID_DEBUG_DKLIB(${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetyped.a)
ANDROID_RELEASE_DKLIB(${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)



### 3RDPARTY LINK ###
WIN_DKSET(FREETYPE_CMAKE -DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/${OS}/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/freetype.lib -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/freetype.lib)
APPLE_DKSET(FREETYPE_CMAKE -DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/${OS}/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetype.a -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
LINUX_DKSET(FREETYPE_CMAKE -DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/${OS}/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetype.a -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
RASPBERRY_DKSET(FREETYPE_CMAKE -DFREETYPE_DIR=${FREETYPE} -DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/${OS}/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetype.a -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)
ANDROID_DKSET(FREETYPE_CMAKE -DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include -DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/${OS}/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include -DFREETYPE_LIBRARY=${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a -DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/${DEBUG_DIR}/libfreetype.a -DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/${RELEASE_DIR}/libfreetype.a)

	
if(HAVE_bzip2)
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_REQUIRE_BZIP2=1 ${BZIP2_CMAKE}")
else()
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_DISABLE_ZLIB=1")
endif()

if(HAVE_zlib)
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_REQUIRE_ZLIB=1 ${ZLIB_CMAKE}")
else()
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_DISABLE_ZLIB=1")
endif()

if(HAVE_libpng)
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_REQUIRE_PNG=1 ${LIBPNG_CMAKE}")
else()
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_DISABLE_PNG=1")
endif()

if(HAVE_harfbuzz)
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_REQUIRE_HARFBUZZ=1 ${HARFBUZZ_CMAKE}")
else()
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_DISABLE_HARFBUZZ=1 -DCMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=TRUE")
endif()

if(HAVE_brotli)
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_REQUIRE_BROTLI=1 ${BROTLI_CMAKE}")
else()
	DKSET(FREETYPE_LIBS "${FREETYPE_LIBS} -DFT_DISABLE_BROTLI=1")
endif()
	
	
### COMPILE ###
DKSETPATH(${FREETYPE}/${BUILD_DIR})
DKQCOMMAND(${DKCMAKE_BUILD} ${FREETYPE_LIBS} ${FREETYPE})

WIN_VS(${FREETYPE_NAME} freetype.sln freetype)
MAC_XCODE(${FREETYPE_NAME} freetype)
IOS_XCODE(${FREETYPE_NAME} freetype)
IOSSIM_XCODE(${FREETYPE_NAME} freetype)
LINUX_DKQCOMMAND(make freetype)
RASPBERRY_DKQCOMMAND(make freetype)
ANDROID_VS(${FREETYPE_NAME} freetype.sln freetype)	