### VERSION ###
DKSET(FREETYPE_MAJOR_VERSION 2)
DKSET(FREETYPE_MINOR_VERSION 5)
DKSET(FREETYPE_BUILD_VERSION 5)
DKSET(FREETYPE_VERSION freetype-${FREETYPE_MAJOR_VERSION}.${FREETYPE_MINOR_VERSION}.${FREETYPE_BUILD_VERSION})

DKSET(FREETYPE ${3RDPARTY}/${FREETYPE_VERSION})
DKSET(FREETYPE_INCLUDE_DIR_freetype2 ${FREETYPE}/include)
DKSET(FREETYPE_INCLUDE_DIR_ft2build ${FREETYPE}/include)
DKSET(FREETYPE_LIBRARY ${FREETYPE}/${OS}/Release/freetype.lib) 
DKSET(FREETYPE_LIBRARY_DEBUG ${FREETYPE}/${OS}/Debug/freetype.lib) 
DKSET(DFREETYPE_LIBRARY_RELEASE ${FREETYPE}/${OS}/Release/freetype.lib)


### INSTALL ###
DKINSTALL(https://sourceforge.net/projects/freetype/files/freetype2/${FREETYPE_MAJOR_VERSION}.${FREETYPE_MINOR_VERSION}.${FREETYPE_BUILD_VERSION}/${FREETYPE_VERSION}.tar.gz freetype ${FREETYPE_VERSION})


### LINK ###
DKINCLUDE(${FREETYPE}/include)
DKINCLUDE(${FREETYPE}/${OS}/include/freetype2)
WIN_DEBUG_LIB(${FREETYPE}/${OS}/Debug/freetype.lib)
WIN_RELEASE_LIB(${FREETYPE}/${OS}/Release/freetype.lib)
MAC_DEBUG_LIB(${FREETYPE}/${OS}/${DEBUG}/libfreetype.a)
MAC_RELEASE_LIB(${FREETYPE}/${OS}/${RELEASE}/libfreetype.a)
IOSSIM_DEBUG_LIB(${FREETYPE}/${OS}/${DEBUG}/libfreetype.a)
IOSSIM_RELEASE_LIB(${FREETYPE}/${OS}/${RELEASE}/libfreetype.a)
LINUX_DEBUG_LIB(${FREETYPE}/${OS}/Debug/libfreetype.a)
LINUX_RELEASE_LIB(${FREETYPE}/${OS}/Release/libfreetype.a)
ANDROID_DEBUG_LIB(${FREETYPE}/${OS}/Debug/obj/local/armeabi-v7a/libft2.a)
ANDROID_RELEASE_LIB(${FREETYPE}/${OS}/Release/obj/local/armeabi-v7a/libft2.a)
RASPBERRY_DEBUG_LIB(${FREETYPE}/${OS}/Debug/libfreetype.a)
RASPBERRY_RELEASE_LIB(${FREETYPE}/${OS}/Release/libfreetype.a)


### COMPILE ###
DKSETPATH(${FREETYPE}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -C${DKCMAKE}/DKCache.cmake ${FREETYPE})
WIN32_VS_DEBUG(${FREETYPE_VERSION} freetype.sln freetype)
WIN32_VS_RELEASE(${FREETYPE_VERSION} freetype.sln freetype)

DKSETPATH(${FREETYPE}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${FREETYPE})
WIN64_VS_DEBUG(${FREETYPE_VERSION} freetype.sln freetype)
WIN64_VS_RELEASE(${FREETYPE_VERSION} freetype.sln freetype)

DKSETPATH(${FREETYPE}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${FREETYPE})
MAC_XCODE_DEBUG(${FREETYPE_VERSION} freetype)
MAC_XCODE_RELEASE(${FREETYPE_VERSION} freetype)

DKSETPATH(${FREETYPE}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${FREETYPE})
IOS_XCODE_DEBUG(${FREETYPE_VERSION} freetype)
IOS_XCODE_RELEASE(${FREETYPE_VERSION} freetype)

DKSETPATH(${FREETYPE}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 ${FREETYPE})
IOSSIM_XCODE_DEBUG(${FREETYPE_VERSION} freetype)
IOSSIM_XCODE_RELEASE(${FREETYPE_VERSION} freetype)

## DKSETPATH(${FREETYPE}/${OS}/${DEBUG})
## IOSSIM_DEBUG_COMMAND(../../configure --enable-static=yes --enable-shared=no --without-bzip2 "CFLAGS=-arch x86_64")
## IOSSIM_DEBUG_COMMAND(make)

## DKSETPATH(${FREETYPE}/${OS}/${RELEASE})
## IOSSIM_RELEASE_COMMAND(../../configure --enable-static=yes --enable-shared=no --without-bzip2 "CFLAGS=-arch x86_64")
## IOSSIM_RELEASE_COMMAND(make)

DKSETPATH(${FREETYPE}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${FREETYPE})
LINUX_DEBUG_COMMAND(make freetype)

DKSETPATH(${FREETYPE}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${FREETYPE})
LINUX_RELEASE_COMMAND(make freetype)

ANDROID_NDK_DEBUG(${FREETYPE_VERSION})
ANDROID_NDK_RELEASE(${FREETYPE_VERSION})

DKSETPATH(${FREETYPE}/${OS}/Debug)
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${FREETYPE})
RASPBERRY_DEBUG_COMMAND(make freetype)

DKSETPATH(${FREETYPE}/${OS}/Release)
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${FREETYPE})
RASPBERRY_RELEASE_COMMAND(make freetype)




### INJECT ###
DKSET(FREETYPE_WIN32 
	-DFREETYPE_INCLUDE_DIRS=${FREETYPE}/include
	-DFREETYPE_INCLUDE_DIR_freetype2=${FREETYPE}/include
	-DFREETYPE_INCLUDE_DIR_ft2build=${FREETYPE}/include
	-DFREETYPE_LIBRARY=${FREETYPE}/${OS}/Release/freetype.lib
	-DFREETYPE_LIBRARY_DEBUG=${FREETYPE}/${OS}/Debug/freetype.lib
	-DFREETYPE_LIBRARY_RELEASE=${FREETYPE}/${OS}/Release/freetype.lib)