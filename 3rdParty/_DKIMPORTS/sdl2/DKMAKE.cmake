# https://www.libsdl.org/
# https://github.com/libsdl-org/SDL
#
# https://stackoverflow.com/a/57734435/688352
#
# https://www.libsdl.org/release/SDL2-2.0.16.zip
# https://www.libsdl.org/release/SDL2-2.0.18.zip

### DEPENDS ###
if(WIN)
	DKDEPEND(opengl)
	DKDEPEND(winmm.lib)
	WIN_LIB(imm32.lib)
	WIN_LIB(version.lib)
	WIN_LIB(Setupapi.lib)
endif()	
if(MAC)
	DKDEPEND(appkit)
	DKDEPEND(audio_toolbox)
	DKDEPEND(audiounit)
	DKDEPEND(carbon)
	DKDEPEND(cocoa)
	DKDEPEND(core_audio)
	DKDEPEND(core_foundation)
	DKDEPEND(game_controller)
	DKDEPEND(core_haptics)
	DKDEPEND(core_video)
	DKDEPEND(force_feedback)
	DKDEPEND(iokit)
	DKDEPEND(libiconv)
	DKDEPEND(media_player)
	DKDEPEND(opengl)
	DKDEPEND(quartz_core)
	DKDEPEND(metal)
endif()
if(IOS OR IOSSIM)
	DKDEPEND(audio_toolbox)
	DKDEPEND(av_foundation)
	DKDEPEND(core_audio)
	DKDEPEND(core_graphics)
	DKDEPEND(core_haptics)
	DKDEPEND(core_motion)
	DKDEPEND(foundation)
	DKDEPEND(game_controller)
	DKDEPEND(quartz_core)
	DKDEPEND(uikit)
	DKDEPEND(opengles)
	DKDEPEND(metal)
	#DKDEFINE(SDL_VIDEO_RENDER_OGL)
endif()
if(LINUX)
	DKDEPEND(opengl)
	#DKDEFINE(SDL_VIDEO_RENDER_OGL)
endif()
if(RASPBERRY)
	DKDEPEND(opengl)
endif()
if(ANDROID)
	DKDEPEND(opengles)
	DKDEPEND(opensles)
endif()

### VERSION ###
#DKSET(SDL2_VERSION 2.0.18)
#DKSET(SDL2_NAME SDL2-${SDL2_VERSION})
#DKSET(SDL2_DL https://www.libsdl.org/release/${SDL2_NAME}.zip)

DKSET(SDL2_VERSION main)
DKSET(SDL2_NAME SDL2-${SDL2_VERSION})
DKSET(SDL2_DL https://github.com/libsdl-org/SDL/archive/refs/heads/main.zip)

DKSET(SDL2 ${3RDPARTY}/${SDL2_NAME})


### INSTALL ###
DKINSTALL(${SDL2_DL} sdl2 ${SDL2})


### DKPLUGINS LINK ###
DKINCLUDE(${SDL2}/include)
ANDROID_INCLUDE(${ANDROIDNDK}/sources/android/cpufeatures)
ANDROID_INCLUDE(${SDL2}/src)
RASPBERRY_INCLUDE(/opt/vc/lib)
LINUX_INCLUDE(${SDL2}/${OS}/${RELEASE_DIR}/include)

dk_addTarget(sdl2 SDL2-static)
dk_addTarget(sdl2 SDL2main)

if(sdl2_SDL2-static)
	WIN_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/SDL2d.lib)
	WIN_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib)
	MAC_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
	MAC_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	IOS_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
	IOS_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	IOSSIM_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
	IOSSIM_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	LINUX_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
	LINUX_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	RASPBERRY_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
	RASPBERRY_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	ANDROID_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a)
	ANDROID_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
endif()

#ANDROID_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libhidapi.a)
#ANDROID_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libhidapi.a)

if(sdl2_SDL2main)
	WIN_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/SDL2maind.lib)
	WIN_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib)
	MAC_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	MAC_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	IOS_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	IOS_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	IOSSIM_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	IOSSIM_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	LINUX_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	LINUX_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	RASPBERRY_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	RASPBERRY_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	ANDROID_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a)
	ANDROID_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
endif()


### 3RDPARTY LINK ###
DKSET(SDL2_WIN
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/SDL2d.lib
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib)
	
DKSET(SDL2_WIN_MAIN	
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/SDL2maind.lib
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib)
	
DKSET(SDL2_APPLE
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	
DKSET(SDL2_APPLE_MAIN	
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	
DKSET(SDL2_LINUX
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	
DKSET(SDL2_RASPBERRY
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	
DKSET(SDL2_ANDROID
	-DSDL2_DIR=${SDL2}/cmake
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
	

### COMPILE ###
DKSETPATH(${ZLIB}/${BUILD_DIR})

WIN_COMMAND(${DKCMAKE_BUILD} -DSDL_SHARED=OFF -DSDL_LIBC=ON ${SDL2})
if(SDL2-static)
	WIN_VS(${SDL2_NAME} SDL2.sln SDL2-static)
endif()
if(sdl2_SDL2main)
	WIN_VS(${SDL2_NAME} SDL2.sln SDL2main)
endif()


if(MAC)
	string(REPLACE "-std=c17 " " " DKCMAKE_MAC_SDL2 "${DKCMAKE_BUILD}")
endif()
MAC_COMMAND(${DKCMAKE_MAC_SDL2} -DSDL_SHARED=OFF -DSDL_OPENGL=ON -DSDL_METAL=ON -DHAVE_BUILTIN_ICONV=0 -DHAVE_LIBICONV=0 ${ICONV_APPLE} ${SDL2})
if(SDL2-static)
	MAC_XCODE(${SDL2_NAME} SDL2-static)
endif()
if(sdl2_SDL2main)
	MAC_XCODE(${SDL2_NAME} SDL2main)
endif()


IOS_COMMAND(${DKCMAKE_BUILD} -DSDL_SHARED=OFF -DSDL_OPENGLES=ON -DSDL_METAL=ON -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL2})
if(SDL2-static)
	IOS_XCODE(${SDL2_NAME} SDL2-static)
endif()
if(sdl2_SDL2main)
	IOS_XCODE(${SDL2_NAME} SDL2main)
endif()


IOSSIM_COMMAND(${DKCMAKE_BUILD} -DSDL_SHARED=OFF -DSDL_OPENGLES=ON -DSDL_METAL=ON -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL2})
if(SDL2-static)
	IOSSIM_XCODE(${SDL2_NAME} SDL2-static)
endif()
if(sdl2_SDL2main)
	IOSSIM_XCODE(${SDL2_NAME} SDL2main)
endif()


LINUX_COMMAND(${DKCMAKE_BUILD} -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DVIDEO_OPENGL=ON -DDIRECTX=OFF -DVIDEO_WAYLAND=OFF ${SDL2})
if(SDL2-static)
	LINUX_COMMAND(make SDL2-static)
endif()
if(sdl2_SDL2main)
	LINUX_COMMAND(make SDL2main)
endif()


RASPBERRY_COMMAND(${DKCMAKE_BUILD} -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON ${SDL2})
if(SDL2-static)
	RASPBERRY_RELEASE_COMMAND(make SDL2-static)
endif()
if(sdl2_SDL2main)
	RASPBERRY_RELEASE_COMMAND(make SDL2main)
endif()


ANDROID_COMMAND(${DKCMAKE_C_BUILD} -DLIBTYPE=STATIC -DSDL_SHARED=OFF ${SDL2})
if(SDL2-static)
	ANDROID_VS(${SDL2_NAME} SDL2.sln SDL2-static)
endif()
if(sdl2_SDL2main)
	ANDROID_VS(${SDL2_NAME} SDL2.sln SDL2main)
endif()