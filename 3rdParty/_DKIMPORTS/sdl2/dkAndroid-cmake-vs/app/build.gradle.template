def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 31
	ndkVersion "22.1.7171670"
	ndkPath 'C:/Users/Administrator/digitalknob/DK/3rdParty/android-sdk/ndk/22.1.7171670'
    defaultConfig {
        if (buildAsApplication) {
            applicationId "org.libsdl.app"
        }
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
				arguments "-DANDROID_APP_PLATFORM=android-26", "-DANDROID_STL=c++_static"
                abiFilters 'armeabi-v7a' //, 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        externalNativeBuild {
			cmake {
				path 'jni/src/CMakeLists.txt'
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
}
