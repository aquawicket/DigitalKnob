### VERSION ###
DKSET(SDL2_VERSION SDL2-2.0.14)
DKSET(SDL ${3RDPARTY}/${SDL2_VERSION})


### INSTALL ###
DKINSTALL(https://www.libsdl.org/release/${SDL2_VERSION}.zip SDL2 ${SDL2_VERSION})


### LINK ###
DKINCLUDE(${SDL}/include)
ANDROID_INCLUDE(${SDL}/src)
##LINUX_INCLUDE(/opt/vc/lib) ##For Raspberry Pi
LINUX_INCLUDE(${SDL}/${OS}/Release/include)
WIN_DEBUG_LIB(${SDL}/${OS}/Debug/SDL2d.lib)
WIN_RELEASE_LIB(${SDL}/${OS}/Release/SDL2.lib)
WIN_DEBUG_LIB(${SDL}/${OS}/Debug/SDL2maind.lib)
WIN_RELEASE_LIB(${SDL}/${OS}/Release/SDL2main.lib)
MAC_DEBUG_LIB(${SDL}/${OS}/${DEBUG}/libSDL2.a)
MAC_RELEASE_LIB(${SDL}/${OS}/${RELEASE}/libSDL2.a)
IOSSIM_DEBUG_LIB(${SDL}/Xcode-iOS/SDL/build/Debug-iphonesimulator/libSDL2.a)
IOSSIM_RELEASE_LIB(${SDL}/Xcode-iOS/SDL/build/Release-iphonesimulator/libSDL2.a) 
LINUX_DEBUG_LIB(${SDL}/${OS}/Debug/libSDL2d.a)
LINUX_RELEASE_LIB(${SDL}/${OS}/Release/libSDL2.a)
ANDROID_DEBUG_LIB(${SDL}/${OS}/Debug/obj/local/armeabi-v7a/libSDL2.so)
ANDROID_RELEASE_LIB(${SDL}/${OS}/Release/obj/local/armeabi-v7a/libSDL2.so)
RASPBERRY_DEBUG_LIB(${SDL}/${OS}/Debug/libSDL2d.a)
RASPBERRY_RELEASE_LIB(${SDL}/${OS}/Release/libSDL2.a)
LIST(APPEND WIN_LIBS winmm.lib)
LIST(APPEND WIN_LIBS imm32.lib)
LIST(APPEND WIN_LIBS version.lib)
LIST(APPEND WIN_LIBS Setupapi.lib)


### COMPILE ###
DKSETPATH(${SDL}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DLIBC=ON ${SDL})
WIN32_VS_DEBUG(${SDL2_VERSION} SDL2.sln SDL2-static)
WIN32_VS_RELEASE(${SDL2_VERSION} SDL2.sln SDL2-static)
WIN32_VS_DEBUG(${SDL2_VERSION} SDL2.sln SDL2main)
WIN32_VS_RELEASE(${SDL2_VERSION} SDL2.sln SDL2main)

DKSETPATH(${SDL}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DLIBC=ON ${SDL})
WIN64_VS_DEBUG(${SDL2_VERSION} SDL2.sln SDL2-static)
WIN64_VS_RELEASE(${SDL2_VERSION} SDL2.sln SDL2-static)
WIN32_VS_DEBUG(${SDL2_VERSION} SDL2.sln SDL2main)
WIN32_VS_RELEASE(${SDL2_VERSION} SDL2.sln SDL2main)

## DKSETPATH(${SDL}/${OS})
## MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
## MAC_XCODE_DEBUG(${SDL2_VERSION} SDL2-static)
## MAC_XCODE_RELEASE(${SDL2_VERSION} SDL2-static)

## DKSETPATH(${SDL}/${OS})
## IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL})
## IOS_XCODE_DEBUG(${SDL2_VERSION} SDL2-static)
## IOS_XCODE_RELEASE(${SDL2_VERSION} SDL2-static)

## DKSETPATH(${SDL}/${OS})
## IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL})
## IOSSIM_XCODE_DEBUG(${SDL2_VERSION} SDL2-static)
## IOSSIM_XCODE_RELEASE(${SDL2_VERSION} SDL2-static)

IF(IOSSIM)
	EXECUTE_PROCESS(COMMAND xcodebuild -configuration Debug build -arch i386 -sdk iphonesimulator6.1 WORKING_DIRECTORY ${SDL}/Xcode-iOS/SDL)
	EXECUTE_PROCESS(COMMAND xcodebuild -configuration Release build -arch i386 -sdk iphonesimulator6.1 WORKING_DIRECTORY ${SDL}/Xcode-iOS/SDL)
ENDIF()


DKSETPATH(${SDL}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DSDL_SHARED=OFF -DCMAKE_C_FLAGS=-fPIC -DDIRECTX=OFF -DVIDEO_WAYLAND=OFF ${SDL})
LINUX_DEBUG_COMMAND(make SDL2-static)

DKSETPATH(${SDL}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DSDL_SHARED=OFF -DCMAKE_C_FLAGS=-fPIC -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DVIDEO_WAYLAND=OFF ${SDL})
LINUX_RELEASE_COMMAND(make SDL2-static)

ANDROID_NDK_DEBUG(${SDL2_VERSION})
ANDROID_NDK_RELEASE(${SDL2_VERSION})

DKSETPATH(${SDL}/${OS}/Debug)
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON -DCMAKE_C_FLAGS=-fPIC ${SDL})
RASPBERRY_DEBUG_COMMAND(make SDL2-static)

DKSETPATH(${SDL}/${OS}/Release)
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON -DCMAKE_C_FLAGS=-fPIC ${SDL})
RASPBERRY_RELEASE_COMMAND(make SDL2-static)

