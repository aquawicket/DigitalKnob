## https://www.libsdl.org/

### VERSION ###
DKSET(SDL2_VERSION 2.0.14)
DKSET(SDL2 ${3RDPARTY}/SDL2-${SDL2_VERSION})


### INSTALL ###
## https://www.libsdl.org/release/SDL2-2.0.14.zip
DKINSTALL(https://www.libsdl.org/release/SDL2-${SDL2_VERSION}.zip SDL2 SDL2-${SDL2_VERSION})


### DKPLUGINS LINK ###
DKINCLUDE(${SDL2}/include)
ANDROID_INCLUDE(${SDL2}/src)
##LINUX_INCLUDE(/opt/vc/lib) ##For Raspberry Pi
LINUX_INCLUDE(${SDL2}/${OS}/${RELEASE_DIR}/include)
WIN_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/SDL2d.lib)
WIN_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib)
WIN_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/SDL2maind.lib)
WIN_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib)
MAC_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a)
MAC_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
IOSSIM_DEBUG_LIB(${SDL2}/Xcode-iOS/SDL/build/Debug-iphonesimulator/libSDL2.a)
IOSSIM_RELEASE_LIB(${SDL2}/Xcode-iOS/SDL/build/Release-iphonesimulator/libSDL2.a) 
LINUX_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
LINUX_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
RASPBERRY_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2d.a)
RASPBERRY_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
##ANDROID_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libSDL2.so)
##ANDROID_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libSDL2.so)
ANDROID_DEBUG_LIB(${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a)
ANDROID_RELEASE_LIB(${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a)
LIST(APPEND WIN_LIBS winmm.lib)
LIST(APPEND WIN_LIBS imm32.lib)
LIST(APPEND WIN_LIBS version.lib)
LIST(APPEND WIN_LIBS Setupapi.lib)


### 3RDPARTY LINK ###
DKSET(SDL2_WIN
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/SDL2d.lib
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/SDL2.lib
	-DSDL2MAIN_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib
	-DSDL2MAIN_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/SDL2maind.lib
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/SDL2main.lib)
	
DKSET(SDL2_LINUX
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2MAIN_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	
DKSET(SDL2_RASPBERRY
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2MAIN_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	
DKSET(SDL2_ANDROID
	-DSDL2_DIR=${SDL2}
	-DSDL2_INCLUDE_DIR=${SDL2}/include
	-DSDL2_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}libSDL2.a
	-DSDL2_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2.a
	-DSDL2MAIN_LIBRARY_TEMP=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a
	-DSDL2MAIN_LIBRARY_DEBUG=${SDL2}/${OS}/${DEBUG_DIR}/libSDL2maind.a
	-DSDL2MAIN_LIBRARY_RELEASE=${SDL2}/${OS}/${RELEASE_DIR}/libSDL2main.a)
	

### COMPILE ###
WIN_PATH(${SDL2}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DLIBC=ON ${SDL2})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DLIBC=ON ${SDL2})
WIN_VS(SDL2-${SDL2_VERSION} SDL2.sln SDL2-static)
WIN_VS(SDL2-${SDL2_VERSION} SDL2.sln SDL2main)


MAC_PATH(${SDL2}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL2})
MAC_XCODE_DEBUG(SDL2-${SDL2_VERSION} SDL2-static)
MAC_XCODE_RELEASE(SDL2-${SDL2_VERSION} SDL2-static)


IOS_PATH(${SDL2}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL2})
IOS_XCODE_DEBUG(SDL2-${SDL2_VERSION} SDL2-static)
IOS_XCODE_RELEASE(SDL2-${SDL2_VERSION} SDL2-static)


IOSSIM_PATH(${SDL2}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL2})
IOSSIM_XCODE_DEBUG(SDL2-${SDL2_VERSION} SDL2-static)
IOSSIM_XCODE_RELEASE(SDL2-${SDL2_VERSION} SDL2-static)
IOSSIM_COMMAND(xcodebuild -configuration Debug build -arch i386 -sdk iphonesimulator6.1 WORKING_DIRECTORY ${SDL2}/Xcode-iOS/SDL)
IOSSIM_COMMAND(xcodebuild -configuration Release build -arch i386 -sdk iphonesimulator6.1 WORKING_DIRECTORY ${SDL2}/Xcode-iOS/SDL)


LINUX_DEBUG_PATH(${SDL2}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DVIDEO_WAYLAND=OFF ${SDL2})
LINUX_DEBUG_COMMAND(make SDL2-static)

LINUX_RELEASE_PATH(${SDL2}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDL_SHARED=OFF -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF -DVIDEO_WAYLAND=OFF ${SDL2})
LINUX_RELEASE_COMMAND(make SDL2-static)


RASPBERRY_DEBUG_PATH(${SDL2}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON ${SDL2})
RASPBERRY_DEBUG_COMMAND(make SDL2-static)

RASPBERRY_RELEASE_PATH(${SDL2}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON ${SDL2})
RASPBERRY_RELEASE_COMMAND(make SDL2-static)


##ANDROID_NDK_DEBUG(SDL2-${SDL2_VERSION})
##ANDROID_NDK_RELEASE(SDL2-${SDL2_VERSION})

ANDROID_PATH(${SDL2}/${OS})
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON ${SDL2})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} -DSDL_SHARED=OFF -DVIDEO_OPENGLES=ON ${SDL2})
ANDROID_VS(SDL2-${SDL2_VERSION} SDL2.sln SDL2)
ANDROID_VS(SDL2-${SDL2_VERSION} SDL2.sln SDL2main)