### DEPENDS ###
DKDEPEND(zlib)
DKDEPEND(xz)
DKDEPEND(bzip2)


### VERSION ###
DKSET(ARCHIVE_VERSION 3.4.2)
DKSET(ARCHIVE ${3RDPARTY}/libarchive-${ARCHIVE_VERSION})



### INSTALL ###
DKINSTALL(https://www.libarchive.org/downloads/libarchive-${ARCHIVE_VERSION}.zip libarchive libarchive-${ARCHIVE_VERSION})



### DKPLUGINS LINK ###
DKDEFINE(LIBARCHIVE_STATIC)
DKINCLUDE(${ARCHIVE}/libarchive)
WIN_DEBUG_LIB(${ARCHIVE}/${OS}/libarchive/${DEBUG}/archive_static.lib)
WIN_RELEASE_LIB(${ARCHIVE}/${OS}/libarchive/${RELEASE}/archive_static.lib)
APPLE_DEBUG_LIB(${ARCHIVE}/${OS}/libarchive/${DEBUG}/libarchive.a)
APPLE_RELEASE_LIB(${ARCHIVE}/${OS}/libarchive/${RELEASE}/libarchive.a)
LINUX_DEBUG_LIB(${ARCHIVE}/${OS}/${DEBUG}/libarchive/libarchive.a)
LINUX_RELEASE_LIB(${ARCHIVE}/${OS}/${RELEASE}/libarchive/libarchive.a)
RASPBERRY_DEBUG_LIB(${ARCHIVE}/${OS}/${DEBUG}/libarchive/libarchive.a)
RASPBERRY_RELEASE_LIB(${ARCHIVE}/${OS}/${RELEASE}/libarchive/libarchive.a)
ANDROID_DEBUG_LIB(${ARCHIVE}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libarchive.a)
ANDROID_RELEASE_LIB(${ARCHIVE}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libarchive.a)



### COMPILE ###
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /wd4702" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DWINDOWS_VERSION=WIN10 -DUSE_BZIP2_DLL=OFF -ENABLE_BZIP2=OFF -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_EXPAT=OFF -DENABLE_ICONV=OFF -DENABLE_LIBXML2=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DENABLE_LibGCC=OFF -DENABLE_LIBB2=OFF -DENABLE_LZ4=OFF -DENABLE_PCREPOSIX=OFF -DENABLE_ZSTD=OFF ${XZ_WIN} ${BZIP2_WIN} ${ZLIB_WIN} -S ${ARCHIVE} -B ${ARCHIVE}/${OS})
WIN32_VS_DEBUG(libarchive-${ARCHIVE_VERSION} libarchive.sln archive_static)
WIN32_VS_RELEASE(libarchive-${ARCHIVE_VERSION} libarchive.sln archive_static)


WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /DLZMA_API_STATIC /wd4267 /wd4244" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_WIN} ${BZIP2_WIN} ${ZLIB_WIN} -S ${ARCHIVE} -B ${ARCHIVE}/${OS})
WIN64_VS_DEBUG(libarchive-${ARCHIVE_VERSION} libarchive.sln archive_static)
WIN64_VS_RELEASE(libarchive-${ARCHIVE_VERSION} libarchive.sln archive_static)


MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_APPLE} ${BZIP2_APPLE} ${ZLIB_APPLE} -S ${ARCHIVE} -B ${ARCHIVE}/${OS})
MAC_XCODE_DEBUG(libarchive-${ARCHIVE_VERSION} archive_static)
MAC_XCODE_RELEASE(libarchive-${ARCHIVE_VERSION} archive_static)


IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CAT=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=OFF -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_APPLE} ${BZIP2_APPLE} ${ZLIB_APPLE} -S ${ARCHIVE} -B ${ARCHIVE}/${OS})
IOS_XCODE_DEBUG(libarchive-${ARCHIVE_VERSION} archive_static)
IOS_XCODE_RELEASE(libarchive-${ARCHIVE_VERSION} archive_static)


IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CAT=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=OFF -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_APPLE} ${BZIP2_APPLE} ${ZLIB_APPLE} -S ${ARCHIVE} -B ${ARCHIVE}/${OS})
IOSSIM_XCODE_DEBUG(libarchive-${ARCHIVE_VERSION} archive_static)
IOSSIM_XCODE_RELEASE(libarchive-${ARCHIVE_VERSION} archive_static)


## FIXME: -DCMAKE_BUILD_TYPE=Debug broken
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_LINUX} ${BZIP2_LINUX} ${ZLIB_LINUX} -S ${ARCHIVE} -B ${ARCHIVE}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(make archive_static)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_LINUX} ${BZIP2_LINUX} ${ZLIB_LINUX} -S ${ARCHIVE} -B ${ARCHIVE}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(make archive_static)


## FIXME: -DCMAKE_BUILD_TYPE=Debug broken
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_RASPBERRY} ${BZIP2_RASPBERRY} ${ZLIB_RASPBERRY} -S ${ARCHIVE} -B ${ARCHIVE}/${OS}/${DEBUG})
RASPBERRY_DEBUG_COMMAND(make archive_static)
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF ${XZ_RASPBERRY} ${BZIP2_RASPBERRY} ${ZLIB_RASPBERRY} -S ${ARCHIVE} -B ${ARCHIVE}/${OS}/${RELEASE})
RASPBERRY_RELEASE_COMMAND(make archive_static)


ANDROID_NDK_DEBUG(libarchive-${ARCHIVE_VERSION})
ANDROID_NDK_RELEASE(libarchive-${ARCHIVE_VERSION})
