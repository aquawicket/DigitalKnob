IF(ANDROID)
	RETURN()
ENDIF()

### DEPENDS ###
DKDEPEND(msinttypes)
DKDEPEND(openal)


### VERSION ###
DKSET(FREEALUT_VERSION 1.1.0)
DKSET(FREEALUT ${3RDPARTY}/freealut-${FREEALUT_VERSION})   ## FORMERLY {STDINT}


### INSTALL ###
## http://distro.ibiblio.org/rootlinux/rootlinux-ports/more/freealut/freealut-${FREEALUT_VERSION}.tar.gz
DKINSTALL(http://distro.ibiblio.org/rootlinux/rootlinux-ports/more/freealut/freealut-${FREEALUT_VERSION}.tar.gz freealut freealut-${FREEALUT_VERSION})


### LINK ###
DKDEFINE(AL_LIBTYPE_STATIC)
DKINCLUDE(${FREEALUT}/include)
WIN_DEBUG_LIB(${FREEALUT}/${OS}/Debug/alut_static.lib)
WIN_RELEASE_LIB(${FREEALUT}/${OS}/Release/alut_static.lib)
APPLE_DEBUG_LIB(${FREEALUT}/${OS}/${DEBUG}/libalut_static.a)
APPLE_RELEASE_LIB(${FREEALUT}/${OS}/${RELEASE}/libalut_static.a)
LINUX_DEBUG_LIB(${FREEALUT}/${OS}/Debug/libalut_static.a)
LINUX_RELEASE_LIB(${FREEALUT}/${OS}/Release/libalut_static.a)


### COMPILE ###
DKSETPATH(${FREEALUT}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc /I${OPENAL}/include/AL /I${MSINTTYPES} /DAL_LIBTYPE_STATIC" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DOPENAL_INCLUDE_DIR=${OPENAL}/include -DOPENAL_LIB_DIR=${OPENAL}/${OS}/Release ${FREEALUT})
WIN32_VS_DEBUG(freealut-${FREEALUT_VERSION} Alut.sln alut_static)
WIN32_VS_RELEASE(freealut-${FREEALUT_VERSION} Alut.sln alut_static)

DKSETPATH(${FREEALUT}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc /I${OPENAL}/include/AL /I${MSINTTYPES} /DAL_LIBTYPE_STATIC" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DOPENAL_INCLUDE_DIR=${OPENAL}/include -DOPENAL_LIB_DIR=${OPENAL}/${OS}/Release ${FREEALUT})
WIN64_VS_DEBUG(freealut-${FREEALUT_VERSION} Alut.sln alut_static)
WIN64_VS_RELEASE(freealut-${FREEALUT_VERSION} Alut.sln alut_static)

DKSETPATH(${FREEALUT}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DOPENAL_INCLUDE_DIR=${OPENAL}/include -DOPENAL_LIB_DIR=${OPENAL}/${OS} ${FREEALUT})
MAC_XCODE_DEBUG(freealut-${FREEALUT_VERSION} alut_static)
MAC_XCODE_RELEASE(freealut-${FREEALUT_VERSION} alut_static)

DKSETPATH(${FREEALUT}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DOPENAL_INCLUDE_DIR=${OPENAL}/include -DOPENAL_LIB_DIR=${OPENAL}/${OS}/Debug ${FREEALUT})
LINUX_DEBUG_COMMAND(make alut_static)

DKSETPATH(${FREEALUT}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DOPENAL_INCLUDE_DIR=${OPENAL}/include -DOPENAL_LIB_DIR=${OPENAL}/${OS}/Release ${FREEALUT})
LINUX_RELEASE_COMMAND(make alut_static)