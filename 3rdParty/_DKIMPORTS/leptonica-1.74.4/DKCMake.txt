DKDEPEND(tiff-4.0.3)

### INSTALL ###
DKINSTALL(${DKONLINE}/Libs/leptonica-1.74.4.zip leptonica-1.74.4)
DKSET(LEPTONICA ${3RDPARTY}/leptonica-1.74.4)


### LINK ###
DKINCLUDE(${LEPTONICA})
DKINCLUDE(${LEPTONICA}/${OS}/src)
WIN_DEBUG_LIB(${LEPTONICA}/${OS}/src/Debug/leptonica-1.74.4d.lib)
WIN_RELEASE_LIB(${LEPTONICA}/${OS}/src/Release/leptonica-1.74.4.lib)
APPLE_DEBUG_LIB(${LEPTONICA}/${OS}/lib/${DEBUG}/leptonica-1.74.4.a)
APPLE_RELEASE_LIB(${LEPTONICA}/${OS}/lib/${RELEASE}/leptonica-1.74.4.a)
LINUX_DEBUG_LIB(${LEPTONICA}/${OS}/Debug/lib/leptonica-1.74.4.a)
LINUX_RELEASE_LIB(${LEPTONICA}/${OS}/Release/lib/leptonica-1.74.4.a)
ANDROID_DEBUG_LIB(${LEPTONICA}/${OS}/Debug/obj/local/armeabi-v7a/leptonica-1.74.4.a)
ANDROID_RELEASE_LIB(${LEPTONICA}/${OS}/Release/obj/local/armeabi-v7a/leptonica-1.74.4.a)


### COMPILE ###
DKSETPATH(${LEPTONICA}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB} /I${ZLIB}/win32 /I${TIFF}/libtiff /I${TIFF}/win32" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG}/zlibstaticd.lib -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE}/zlibstatic.lib -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/Debug/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib ${LEPTONICA})
WIN32_VS_DEBUG(leptonica-1.74.4 LEPTONICA.sln leptonica)
WIN32_VS_RELEASE(leptonica-1.74.4 LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_CXX_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo /I${ZLIB} /I${ZLIB}/win64 /I${TIFF}/libtiff /I${TIFF}/win64" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSTATIC=ON -DCMAKE_INSTALL_PREFIX=${LEPTONICA} -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY_DEBUG=${ZLIB}/${OS}/${DEBUG}/zlibstaticd.lib -DZLIB_LIBRARY_RELEASE=${ZLIB}/${OS}/${RELEASE}/zlibstatic.lib -DTIFF_INCLUDE_DIR=${TIFF}/libtiff -DTIFF_LIBRARY_DEBUG=${TIFF}/${OS}/Debug/tiff-static.lib -DTIFF_LIBRARY_RELEASE=${TIFF}/${OS}/Release/tiff-static.lib ${LEPTONICA})
WIN64_VS_DEBUG(leptonica-1.74.4 LEPTONICA.sln leptonica)
WIN64_VS_RELEASE(leptonica-1.74.4 LEPTONICA.sln leptonica)

DKSETPATH(${LEPTONICA}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DBUILD_SHARED_LIBS=OFF ${LEPTONICA})
MAC_XCODE_DEBUG(leptonica)
MAC_XCODE_RELEASE(leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DBUILD_SHARED_LIBS=OFF ${LEPTONICA})
IOS_XCODE_DEBUG(leptonica)
IOS_XCODE_RELEASE(leptonica)

DKSETPATH(${LEPTONICA}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DBUILD_SHARED_LIBS=OFF ${LEPTONICA})
IOSSIM_XCODE_DEBUG(leptonica)
IOSSIM_XCODE_RELEASE(leptonica)

DKSETPATH(${LEPTONICA}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=DEBUG ${LEPTONICA})
LINUX_DEBUG_COMMAND(make)

DKSETPATH(${LEPTONICA}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=RELEASE ${LEPTONICA})
LINUX_RELEASE_COMMAND(make)

ANDROID_NDK_DEBUG(leptonica)
ANDROID_NDK_RELEASE(leptonica)