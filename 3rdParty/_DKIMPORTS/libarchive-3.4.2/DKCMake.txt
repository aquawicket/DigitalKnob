IF(ANDROID)
	DKDEPEND(zlib-1.2.8)
ENDIF()
IF(NOT ANDROID)
	DKDEPEND(zlib-1.2.11)
ENDIF()

DKDEPEND(xz-5.2.0)
IF(NOT WIN_64)
	DKDEPEND(bzip2-1.0.6)
ENDIF()

### INSTALL ###
## https://www.libarchive.org/downloads/libarchive-3.4.2.zip
DKINSTALL(${DKWEB}/Download/Libs/libarchive-3.4.2.zip libarchive-3.4.2)
DKSET(ARCHIVE ${3RDPARTY}/libarchive-3.4.2)


### LINK ###
DKINCLUDE(${ARCHIVE}/libarchive)
DKDEFINE(LIBARCHIVE_STATIC)
WIN_DEBUG_LIB(${ARCHIVE}/${OS}/libarchive/Debug/archive_static.lib)
WIN_RELEASE_LIB(${ARCHIVE}/${OS}/libarchive/Release/archive_static.lib)
APPLE_DEBUG_LIB(${ARCHIVE}/${OS}/libarchive/${DEBUG}/libarchive.a)
APPLE_RELEASE_LIB(${ARCHIVE}/${OS}/libarchive/${RELEASE}/libarchive.a)
LINUX_DEBUG_LIB(${ARCHIVE}/${OS}/Debug/libarchive/libarchive.a)
LINUX_RELEASE_LIB(${ARCHIVE}/${OS}/Release/libarchive/libarchive.a)
ANDROID_DEBUG_LIB(${ARCHIVE}/${OS}/Debug/obj/local/armeabi-v7a/libarchive.a)
ANDROID_RELEASE_LIB(${ARCHIVE}/${OS}/Release/obj/local/armeabi-v7a/libarchive.a)


### COMPILE ###
DKSETPATH(${ARCHIVE}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS} /DLZMA_API_STATIC" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_EXPAT=OFF -DENABLE_ICONV=OFF -DENABLE_LIBXML2=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib -DLZMA_INCLUDE_DIR=${XZ}/src/liblzma/api -DLZMA_LIBRARY=${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.lib -DBZIP2_INCLUDE_DIR=${BZIP2} -DBZIP2_LIBRARY_DEBUG=${BZIP2}/${OS}/libbz2.lib -DBZIP2_LIBRARY_RELEASE=${BZIP2}/${OS}/libbz2.lib -DLIBGCC_LIBRARY=${BZIP2}/${OS}/libgcc.lib ${ARCHIVE})
WIN32_VS_DEBUG(libarchive-3.4.2 libarchive.sln archive_static)
WIN32_VS_RELEASE(libarchive-3.4.2 libarchive.sln archive_static)

DKSETPATH(${ARCHIVE}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS} /DLZMA_API_STATIC /wd4267 /wd4244" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib -DLZMA_INCLUDE_DIR=${XZ}/src/liblzma/api -DLZMA_LIBRARY=${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.lib -DBZIP2_INCLUDE_DIR=${BZIP2} -DBZIP2_LIBRARY_DEBUG=${BZIP2}/${OS}/libbz2.lib -DBZIP2_LIBRARY_RELEASE=${BZIP2}/${OS}/libbz2.lib -DLIBGCC_LIBRARY=${BZIP2}/${OS}/libgcc.lib ${ARCHIVE})
WIN64_VS_DEBUG(libarchive-3.4.2 libarchive.sln archive_static)
WIN64_VS_RELEASE(libarchive-3.4.2 libarchive.sln archive_static)

DKSETPATH(${ARCHIVE}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a -DLZMA_INCLUDE_DIR=${XZ}/src/liblzma/api -DLZMA_LIBRARY=${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.a -DBZIP2_INCLUDE_DIR=${BZIP2} -DBZIP2_LIBRARY_DEBUG=${BZIP2}/${OS}/libbz2.a -DBZIP2_LIBRARY_RELEASE=${BZIP2}/${OS}/libbz2.a ${ARCHIVE})
MAC_XCODE_DEBUG(libarchive-3.4.2 archive_static)
MAC_XCODE_RELEASE(libarchive-3.4.2 archive_static)

DKSETPATH(${ARCHIVE}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CAT=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=OFF -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a -DLZMA_INCLUDE_DIR=OFF -DLZMA_LIBRARY=OFF -DBZIP2_INCLUDE_DIR=OFF -DBZIP2_LIBRARY_DEBUG=OFF -DBZIP2_LIBRARY_RELEASE=OFF ${ARCHIVE})
IOS_XCODE_DEBUG(libarchive-3.4.2 archive_static)
IOS_XCODE_RELEASE(libarchive-3.4.2 archive_static)

DKSETPATH(${ARCHIVE}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DBUILD_TESTING=OFF -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CAT=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=OFF -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DLZO2_INCLUDE_DIR=OFF -DLZO2_LIBRARY=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a -DLZMA_INCLUDE_DIR=OFF -DLZMA_LIBRARY=OFF -DBZIP2_INCLUDE_DIR=OFF -DBZIP2_LIBRARY_DEBUG=OFF -DBZIP2_LIBRARY_RELEASE=OFF ${ARCHIVE})
IOSSIM_XCODE_DEBUG(libarchive-3.4.2 archive_static)
IOSSIM_XCODE_RELEASE(libarchive-3.4.2 archive_static)

## FIXME: -DCMAKE_BUILD_TYPE=Debug broken
DKSETPATH(${ARCHIVE}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a -DLZMA_INCLUDE_DIR=${XZ}/src/liblzma/api -DLZMA_LIBRARY=${XZ}/${OS}/Debug/src/liblzma/.libs/liblzma.a -DBZIP2_INCLUDE_DIR=${BZIP2} -DBZIP2_LIBRARY_DEBUG=${BZIP2}/${OS}/libbz2.a -DBZIP2_LIBRARY_RELEASE=${BZIP2}/${OS}/libbz2.a ${ARCHIVE})
LINUX_DEBUG_COMMAND(make archive_static)

DKSETPATH(${ARCHIVE}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -DENABLE_TEST=OFF -DENABLE_ACL=OFF -DENABLE_CPIO=OFF -DENABLE_CNG=OFF -DENABLE_ICONV=OFF -DENABLE_NETTLE=OFF -DENABLE_OPENSSL=OFF -DENABLE_TAR=ON -DENABLE_XATTR=OFF -DLIBXML2_INCLUDE_DIR=OFF -DLIBXML2_LIBRARIES=OFF -DLIBXML2_XMLLINT_EXECUTABLE=OFF -DEXPAT_INCLUDE_DIR=OFF -DEXPAT_LIBRARY=OFF -DICONV_INCLUDE_DIR=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a -DLZMA_INCLUDE_DIR=${XZ}/src/liblzma/api -DLZMA_LIBRARY=${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.a -DBZIP2_INCLUDE_DIR=${BZIP2} -DBZIP2_LIBRARY_DEBUG=${BZIP2}/${OS}/libbz2.a -DBZIP2_LIBRARY_RELEASE=${BZIP2}/${OS}/libbz2.a ${ARCHIVE})
LINUX_RELEASE_COMMAND(make archive_static)

ANDROID_NDK_DEBUG(libarchive-3.4.2)
ANDROID_NDK_RELEASE(libarchive-3.4.2)