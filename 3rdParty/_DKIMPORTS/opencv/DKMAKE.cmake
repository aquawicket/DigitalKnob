### DEPENDS ###
DKDEPEND(libjpeg-turbo)
DKDEPEND(tiff)
DKDEPEND(libpng)


### VERSION ###
DKSET(OPENCV_VERSION opencv-3.4.1)


### INSTALL ###
DKINSTALL(https://sourceforge.net/projects/opencvlibrary/files/opencv-unix/3.4.1/opencv-3.4.1.zip opencv ${OPENCV_VERSION})
DKSET(OPENCV ${3RDPARTY}/${OPENCV_VERSION})


### LINK ###
DKINCLUDE(${OPENCV})
DKINCLUDE(${OPENCV}/modules/core/include)
DKINCLUDE(${OPENCV}/modules/videoio/include)
DKINCLUDE(${OPENCV}/${OS})
DKINCLUDE(${OPENCV}/${OS}/${RELEASE_DIR})

WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/opencv_core341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/opencv_core341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/opencv_imgcodecs341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/opencv_imgcodecs341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/opencv_imgproc341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/opencv_imgproc341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/opencv_videoio341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/opencv_videoio341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libjasperd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libjasper.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/ippiwd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/ippiw.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libwebpd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libwebp.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/ittnotifyd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/ittnotify.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/IlmImfd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/IlmImf.lib)
WIN32_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/ia32/ippicvmt.lib)
WIN32_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/ia32/ippicvmt.lib)
WIN64_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/intel64/ippicvmt.lib)
WIN64_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/intel64/ippicvmt.lib)
LIST(APPEND WIN_LIBS vfw32.lib)

APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_mac/lib/intel64/libippicv.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_mac/lib/intel64/libippicv.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/liblibjasper.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/liblibjasper.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libippiw.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libippiw.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/liblibwebp.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/liblibwebp.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libittnotify.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libittnotify.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libIlmImf.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libIlmImf.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_core.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_core.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_imgproc.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_imgproc.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_imgcodecs.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_imgcodecs.a)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_videoio.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_videoio.a)

LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/ippicv/ippicv_lnx/lib/intel64/libippicv.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/ippicv/ippicv_lnx/lib/intel64/libippicv.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/liblibjasper.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/liblibjasper.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libippiw.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libippiw.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/liblibwebp.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/liblibwebp.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libittnotify.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libittnotify.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libIlmImf.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libIlmImf.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_core.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_core.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_imgproc.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_imgproc.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_imgcodecs.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_imgcodecs.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_videoio.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_videoio.a)


RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/ippicv/ippicv_lnx/lib/intel64/libippicv.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/ippicv/ippicv_lnx/lib/intel64/libippicv.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/liblibjasper.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/liblibjasper.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libippiw.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libippiw.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/liblibwebp.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/liblibwebp.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libittnotify.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libittnotify.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/3rdparty/lib/libIlmImf.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/3rdparty/lib/libIlmImf.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_core.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_core.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_imgproc.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_imgproc.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_imgcodecs.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_imgcodecs.a)
RASPBERRY_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG_DIR}/lib/libopencv_videoio.a)
RASPBERRY_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE_DIR}/lib/libopencv_videoio.a)


##ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/obj/local/armeabi-v7a/libopencv_core.a)
##ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/obj/local/armeabi-v7a/libopencv_core.a)

ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_mac/lib/intel64/libippicv.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_mac/lib/intel64/libippicv.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/liblibjasper.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/liblibjasper.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libippiw.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libippiw.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/liblibwebp.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/liblibwebp.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libittnotify.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libittnotify.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/${DEBUG_DIR}/libIlmImf.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/${RELEASE_DIR}/libIlmImf.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_core.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_core.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_imgproc.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_imgproc.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_imgcodecs.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_imgcodecs.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG_DIR}/libopencv_videoio.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE_DIR}/libopencv_videoio.a)


### COMPILE ###
WIN_PATH(${OPENCV}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF ${OPENCV})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF ${OPENCV})
WIN_VS(${OPENCV_VERSION} OpenCV.sln)


MAC_PATH(${OPENCV}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DBUILD_SHARED_LIBS=OFF "-DCMAKE_CXX_FLAGS=-stdlib=libc++" ${OPENCV})
MAC_XCODE_DEBUG(${OPENCV_VERSION} opencv_core)
MAC_XCODE_RELEASE(${OPENCV_VERSION} opencv_core)
MAC_XCODE_DEBUG(${OPENCV_VERSION} opencv_imgcodecs)
MAC_XCODE_RELEASE(${OPENCV_VERSION} opencv_imgcodecs)
MAC_XCODE_DEBUG(${OPENCV_VERSION} opencv_videoio)
MAC_XCODE_RELEASE(${OPENCV_VERSION} opencv_videoio)


IOS_PATH(${OPENCV}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DBUILD_SHARED_LIBS=OFF ${OPENCV})
IOS_XCODE_DEBUG(${OPENCV_VERSION} opencv_core)
IOS_XCODE_RELEASE(${OPENCV_VERSION} opencv_core)
IOS_XCODE_DEBUG(${OPENCV_VERSION} opencv_imgcodecs)
IOS_XCODE_RELEASE(${OPENCV_VERSION} opencv_imgcodecs)
IOS_XCODE_DEBUG(${OPENCV_VERSION} opencv_videoio)
IOS_XCODE_RELEASE(${OPENCV_VERSION} opencv_videoio)


IOSSIM_PATH(${OPENCV}/${OS})
IOSSIM64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DBUILD_SHARED_LIBS=OFF ${OPENCV})
IOSSIM_XCODE_DEBUG(${OPENCV_VERSION} opencv_core)
IOSSIM_XCODE_RELEASE(${OPENCV_VERSION} opencv_core)
IOSSIM_XCODE_DEBUG(${OPENCV_VERSION} opencv_imgcodecs)
IOSSIM_XCODE_RELEASE(${OPENCV_VERSION} opencv_imgcodecs)
IOSSIM_XCODE_DEBUG(${OPENCV_VERSION} opencv_videoio)
IOSSIM_XCODE_RELEASE(${OPENCV_VERSION} opencv_videoio)


LINUX_DEBUG_PATH(${OPENCV}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
LINUX_DEBUG_COMMAND(make opencv_core)
LINUX_DEBUG_COMMAND(make opencv_imgcodecs)
LINUX_DEBUG_COMMAND(make opencv_videoio)

LINUX_RELEASE_PATH(${OPENCV}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
LINUX_RELEASE_COMMAND(make opencv_core)
LINUX_RELEASE_COMMAND(make opencv_imgcodecs)
LINUX_RELEASE_COMMAND(make opencv_videoio)


RASPBERRY_DEBUG_PATH(${OPENCV}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
RASPBERRY_DEBUG_COMMAND(make opencv_core)
RASPBERRY_DEBUG_COMMAND(make opencv_imgcodecs)
RASPBERRY_DEBUG_COMMAND(make opencv_videoio)

RASPBERRY_RELEASE_PATH(${OPENCV}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
RASPBERRY_RELEASE_COMMAND(make opencv_core)
RASPBERRY_RELEASE_COMMAND(make opencv_imgcodecs)
RASPBERRY_RELEASE_COMMAND(make opencv_videoio)


##ANDROID_NDK_DEBUG(${OPENCV_VERSION})
##ANDROID_NDK_RELEASE(${OPENCV_VERSION})

ANDROID_PATH(${OPENCV}/${OS})
ANDROID_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A ARM -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake -DCMAKE_ANDROID_NDK=${ANDROID_NDK} -DANDROID_ABI=armeabi-v7a -DANDROID_NATIVE_API_LEVEL=29 "-DANDROID_COMPILER_FLAGS=-DANDROID32 -D_ANDROID" "-DANDROID_COMPILER_FLAGS_DEBUG=-DDEBUG -D_DEBUG" "-DANDROID_COMPILER_FLAGS_RELEASE=-DNDEBUG" -DBUILD_SHARED_LIBS=OFF ${OPENCV})
ANDROID_VS(${OPENCV_VERSION} OpenCV.sln)
