### INSTALL ###
DKINSTALL(http://digitalknob.com/Download/Libs/zlib128.zip zlib-1.2.8)
DKSET(ZLIB ${3RDPARTY}/zlib-1.2.8)


### LINK ###
DKINCLUDE(${ZLIB})
WIN32_INCLUDE(${ZLIB}/${OS})
WIN64_INCLUDE(${ZLIB}/${OS})
WIN_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG}/zlibstaticd.lib)
WIN_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE}/zlibstatic.lib)
APPLE_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG}/libz.a)
APPLE_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE}/libz.a)
LINUX_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG}/libz.a)
LINUX_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE}/libz.a)
ANDROID_DEBUG_LIB(${ZLIB}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libzlib.a)
ANDROID_RELEASE_LIB(${ZLIB}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libzlib.a)


### COMPILE ###
DKSETPATH(${ZLIB}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${ZLIB})
WIN32_VS_DEBUG(zlib-1.2.8 zlib.sln zlibstatic)
WIN32_VS_RELEASE(zlib-1.2.8 zlib.sln zlibstatic)

DKSETPATH(${ZLIB}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${ZLIB})
WIN64_VS_DEBUG(zlib-1.2.8 zlib.sln zlibstatic)
WIN64_VS_RELEASE(zlib-1.2.8 zlib.sln zlibstatic)

DKSETPATH(${ZLIB}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${ZLIB})
MAC64_XCODE_DEBUG(zlib-1.2.8 zlibstatic)
MAC64_XCODE_RELEASE(zlib-1.2.8 zlibstatic)

DKSETPATH(${ZLIB}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${ZLIB})
IOS_XCODE_DEBUG(zlib-1.2.8 zlibstatic)
IOS_XCODE_RELEASE(zlib-1.2.8 zlibstatic)

DKSETPATH(${ZLIB}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 ${ZLIB})
IOSSIM_XCODE_DEBUG(zlib-1.2.8 zlibstatic)
IOSSIM_XCODE_RELEASE(zlib-1.2.8 zlibstatic)

DKSETPATH(${ZLIB}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC ${ZLIB})
LINUX_DEBUG_COMMAND(make zlibstatic)

DKSETPATH(${ZLIB}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC ${ZLIB})
LINUX_RELEASE_COMMAND(make zlibstatic)

ANDROID_NDK_DEBUG(zlib-1.2.8)
ANDROID_NDK_RELEASE(zlib-1.2.8)