### INSTALL ###
## https://sourceforge.net/projects/libjpeg-turbo/files/1.5.3/libjpeg-turbo-1.5.3.tar.gz/download
DKINSTALL(${DKWEB}/Download/Libs/libjpeg-turbo-1.5.3.tar.gz libjpeg-turbo-1.5.3)
DKSET(JPEG ${3RDPARTY}/libjpeg-turbo-1.5.3)


### LINK ###
DKINCLUDE(${JPEG})
DKINCLUDE(${JPEG}/${OS})
ANDROID_INCLUDE(${JPEG}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${JPEG}/${OS}/Debug/turbojpeg-static.lib)
WIN_RELEASE_LIB(${JPEG}/${OS}/Release/turbojpeg-static.lib)
APPLE_DEBUG_LIB(${JPEG}/${OS}/${DEBUG}/libturbojpeg.a)
APPLE_RELEASE_LIB(${JPEG}/${OS}/${RELEASE}/libturbojpeg.a)
LINUX_DEBUG_LIB(${JPEG}/${OS}/Debug/libturbojpeg.a)
LINUX_RELEASE_LIB(${JPEG}/${OS}/Release/libturbojpeg.a)
ANDROID_DEBUG_LIB(${JPEG}/${OS}/Debug/obj/local/armeabi-v7a/libturbojpeg.a)
ANDROID_RELEASE_LIB(${JPEG}/${OS}/Release/obj/local/armeabi-v7a/libturbojpeg.a)


### COMPILE ###
DKSETPATH(${JPEG}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DWITH_SIMD=OFF ${JPEG})
WIN32_VS_DEBUG(libjpeg-turbo-1.5.3 libjpeg-turbo.sln turbojpeg-static)
WIN32_VS_RELEASE(libjpeg-turbo-1.5.3 libjpeg-turbo.sln turbojpeg-static)

DKSETPATH(${JPEG}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN64 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${JPEG})
WIN64_VS_DEBUG(libjpeg-turbo-1.5.3 libjpeg-turbo.sln turbojpeg-static)
WIN64_VS_RELEASE(libjpeg-turbo-1.5.3 libjpeg-turbo.sln turbojpeg-static)

DKSETPATH(${JPEG}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${JPEG})
MAC_XCODE_DEBUG(libjpeg-turbo-1.5.3 turbojpeg-static)
MAC_XCODE_RELEASE(libjpeg-turbo-1.5.3 turbojpeg-static)

DKSETPATH(${JPEG}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${JPEG})
IOS_XCODE_DEBUG(libjpeg-turbo-1.5.3 turbojpeg-static)
IOS_XCODE_RELEASE(libjpeg-turbo-1.5.3 turbojpeg-static)

DKSETPATH(${JPEG}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${JPEG})
IOSSIM_XCODE_DEBUG(libjpeg-turbo-1.5.3 turbojpeg-static)
IOSSIM_XCODE_RELEASE(libjpeg-turbo-1.5.3 turbojpeg-static)


DKSETPATH(${JPEG}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${JPEG})
LINUX_DEBUG_COMMAND(make turbojpeg-static)

DKSETPATH(${JPEG}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${JPEG})
LINUX_RELEASE_COMMAND(make turbojpeg-static)

ANDROID_NDK_DEBUG(libjpeg-turbo-1.5.3)
ANDROID_NDK_RELEASE(libjpeg-turbo-1.5.3)