# https://github.com/GNOME/libxml2
# http://xmlsoft.org/sources/libxml2-2.9.8.tar.gz
# https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.8.zip

### DEPENDS ###
dk_depend(libiconv)


#dk_import(https://github.com/GNOME/libxml2 PATCH)
dk_import(https://github.com/GNOME/libxml2/archive/f2ad86fa600885429a6083aaf6926c7e2e5b24d6.zip PATCH)
#dk_set(LIBXML2_VERSION 2.9.8)
#dk_set(LIBXML2_NAME libxml2-${LIBXML2_VERSION})
#dk_set(LIBXML2_DL https://github.com/GNOME/libxml2/archive/refs/tags/v${LIBXML2_VERSION}.zip)
#dk_set(LIBXML2 ${3RDPARTY}/${LIBXML2_NAME})
#dk_install(${LIBXML2_DL} libxml2 ${LIBXML2})


### LINK ###
dk_include(${LIBXML2})
dk_include(${LIBXML2}/include)
dk_include(${LIBXML2}/${OS})
WIN_DEBUG_DKLIB(${LIBXML2}/${OS}/${DEBUG_DIR}/xml2.lib)
WIN_RELEASE_DKLIB(${LIBXML2}/${OS}/${RELEASE_DIR}/xml2.lib)
APPLE_DEBUG_DKLIB(${LIBXML2}/${OS}/${DEBUG_DIR}/libxml2.a)
APPLE_RELEASE_DKLIB(${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
LINUX_DEBUG_DKLIB(${LIBXML2}/${OS}/${DEBUG_DIR}/libxml2.a)
LINUX_RELEASE_DKLIB(${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
RASPBERRY_DEBUG_DKLIB(${LIBXML2}/${OS}/${DEBUG_DIR}/libxml2.a)
RASPBERRY_RELEASE_DKLIB(${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
ANDROID_DEBUG_DKLIB(${LIBXML2}/${OS}/${DEBUG_DIR}/libxml2.a)
ANDROID_RELEASE_DKLIB(${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)

### 3RDPARTY LINK ###
WIN_dk_set(LIBXML2_CMAKE -DLIBXML2_INCLUDE_DIR=${LIBXML2}/include -DLIBXML2_LIBRARIES=${LIBXML2}/${OS}/${RELEASE_DIR}/xml2.lib)
APPLE_dk_set(LIBXML2_CMAKE -DLIBXML2_INCLUDE_DIR=${LIBXML2}/include -DLIBXML2_LIBRARIES=${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
LINUX_dk_set(LIBXML2_CMAKE -DLIBXML2_INCLUDE_DIR=${LIBXML2}/include -DLIBXML2_LIBRARIES=${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
RASPBERRY_dk_set(LIBXML2_CMAKE -DLIBXML2_INCLUDE_DIR=${LIBXML2}/include -DLIBXML2_LIBRARIES=${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)
ANDROID_dk_set(LIBXML2_CMAKE -DLIBXML2_INCLUDE_DIR=${LIBXML2}/include -DLIBXML2_LIBRARIES=${LIBXML2}/${OS}/${RELEASE_DIR}/libxml2.a)



### COMPILE ###
dk_setPath(${LIBXML2}/${BUILD_DIR})


WIN_DKQCOMMAND(${DKCMAKE_BUILD} ${LIBICONV_CMAKE} ${ZLIB_CMAKE} ${LIBXML2})
WIN_VS(${LIBXML2_NAME} xml2.sln xml2)

MAC_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${LIBXML2})
MAC_XCODE(${LIBXML2_NAME} xml2)

IOS_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${LIBXML2})
IOS_XCODE(${LIBXML2_NAME} xml2)

IOSSIM_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${LIBXML2})
IOSSIM_XCODE(${LIBXML2_NAME} xml2)

LINUX_DKQCOMMAND(${DKCONFIGURE_BUILD})
LINUX_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${LIBXML2}/${OS}/${DEBUG_DIR}" ${ZLIB_CMAKE} ${LIBXML2})
LINUX_DKQCOMMAND(make xml2)

RASPBERRY_DKQCOMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${LIBXML2}/${OS}/${RELEASE_DIR}" ${ZLIB_CMAKE} ${LIBXML2})
RASPBERRY_DKQCOMMAND(make xml2)

ANDROID_MSYS(${DKCONFIGURE_BUILD})
ANDROID_DKQCOMMAND(${DKCMAKE_BUILD} "-DANDROID_COMPILER_FLAGS=-I${LIBXML2}/${OS}" ${LIBICONV_CMAKE} ${ZLIB_CMAKE} ${LIBXML2})
ANDROID_VS(${LIBXML2_NAME} xml2.sln xml2)
