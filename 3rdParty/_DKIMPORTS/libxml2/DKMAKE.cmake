# http://xmlsoft.org/sources/libxml2-2.9.8.tar.gz
# https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.8.zip

### DEPENDS ###
DKDEPEND(libiconv)


### VERSION ###
DKSET(XML2_VERSION 2.9.8)
DKSET(XML2_NAME libxml2-${XML2_VERSION})
DKSET(XML2_DL https://github.com/GNOME/libxml2/archive/refs/tags/v${XML2_VERSION}.zip)
DKSET(XML2 ${3RDPARTY}/${XML2_NAME})


### INSTALL ###
DKINSTALL(${XML2_DL} libxml2 ${XML2})


### LINK ###
DKINCLUDE(${XML2})
DKINCLUDE(${XML2}/include)
DKINCLUDE(${XML2}/${OS})
WIN_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/xml2.lib)
WIN_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/xml2.lib)
APPLE_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
APPLE_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
LINUX_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
LINUX_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
RASPBERRY_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
RASPBERRY_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
ANDROID_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
ANDROID_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)

### 3RDPARTY LINK ###
DKSET(XML2_WIN -DLIBXML2_INCLUDE_DIR=${XML2}/include -DLIBXML2_LIBRARIES=${XML2}/${OS}/${RELEASE_DIR}/xml2.lib)
DKSET(XML2_APPLE -DLIBXML2_INCLUDE_DIR=${XML2}/include -DLIBXML2_LIBRARIES=${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
DKSET(XML2_LINUX -DLIBXML2_INCLUDE_DIR=${XML2}/include -DLIBXML2_LIBRARIES=${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
DKSET(XML2_RASPBERRY -DLIBXML2_INCLUDE_DIR=${XML2}/include -DLIBXML2_LIBRARIES=${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
DKSET(XML2_ANDROID -DLIBXML2_INCLUDE_DIR=${XML2}/include -DLIBXML2_LIBRARIES=${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)



### COMPILE ###
WIN_PATH(${XML2}/${OS})
WIN32_DKQCOMMAND(${DKCMAKE_BUILD} ${ICONV_WIN} ${ZLIB_CMAKE} ${XML2})
WIN64_DKQCOMMAND(${DKCMAKE_BUILD} ${ICONV_WIN} ${ZLIB_CMAKE} ${XML2})
WIN_VS(${XML2_NAME} xml2.sln xml2)


MAC_PATH(${XML2}/${OS})
MAC32_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
MAC64_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
MAC_XCODE(${XML2_NAME} xml2)


IOS_PATH(${XML2}/${OS})
IOS32_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
IOS64_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
IOS_XCODE(${XML2_NAME} xml2)


IOSSIM_PATH(${XML2}/${OS})
IOSSIM32_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
IOSSIM64_DKQCOMMAND(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${XML2})
IOSSIM_XCODE(${XML2_NAME} xml2)


LINUX_DEBUG_DKSETPATH(${XML2}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
LINUX_DEBUG_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${DEBUG_DIR}" ${ZLIB_CMAKE} ${XML2})
LINUX_DEBUG_DKQCOMMAND(make xml2)
LINUX_RELEASE_DKSETPATH(${XML2}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_DKQCOMMAND(${DKCONFIGURE_BUILD})
LINUX_RELEASE_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${RELEASE_DIR}" ${ZLIB_CMAKE} ${XML2})
LINUX_RELEASE_DKQCOMMAND(make xml2)


RASPBERRY_DEBUG_DKSETPATH(${XML2}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_DKQCOMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_DEBUG_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${DEBUG_DIR}" ${ZLIB_CMAKE} ${XML2})
RASPBERRY_DEBUG_DKQCOMMAND(make xml2)
RASPBERRY_RELEASE_DKSETPATH(${XML2}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_DKQCOMMAND(${DKCONFIGURE_BUILD})
RASPBERRY_RELEASE_DKQCOMMAND(${DKCMAKE_BUILD} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${RELEASE_DIR}" ${ZLIB_CMAKE} ${XML2})
RASPBERRY_RELEASE_DKQCOMMAND(make xml2)


ANDROID_PATH(${XML2}/${OS})
ANDROID32_MSYS(${DKCONFIGURE_BUILD})
ANDROID32_DKQCOMMAND(${DKCMAKE_BUILD} "-DANDROID_COMPILER_FLAGS=-DANDROID32 -D_ANDROID -I${XML2}/${OS}" ${ICONV_ANDROID} ${ZLIB_CMAKE} ${XML2})
ANDROID64_MSYS(${DKCONFIGURE_BUILD})
ANDROID364_DKQCOMMAND(${DKCMAKE_BUILD} "-DANDROID_COMPILER_FLAGS=-DANDROID64 -D_ANDROID -I${XML2}/${OS}" ${ICONV_ANDROID} ${ZLIB_CMAKE} ${XML2})
ANDROID_VS(${XML2_NAME} xml2.sln xml2)
