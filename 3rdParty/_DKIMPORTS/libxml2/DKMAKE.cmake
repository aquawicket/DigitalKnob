# http://xmlsoft.org/sources/libxml2-2.9.8.tar.gz
# https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.8.zip

### DEPENDS ###
DKDEPEND(libiconv)


### VERSION ###
DKSET(XML2_VERSION 2.9.8)
DKSET(XML2_NAME libxml2-${XML2_VERSION})
#DKSET(XML2_DL http://xmlsoft.org/sources/${XML2_VERSION}.tar.gz)
DKSET(XML2_DL https://github.com/GNOME/libxml2/archive/refs/tags/v${XML2_VERSION}.zip)
DKSET(XML2 ${3RDPARTY}/${XML2_NAME})



### INSTALL ###
DKINSTALL(${XML2_DL} libxml2 ${XML2})



### LINK ###
DKINCLUDE(${XML2})
DKINCLUDE(${XML2}/include)
DKINCLUDE(${XML2}/${OS})
WIN_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/xml2.lib)
WIN_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/xml2.lib)
APPLE_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
APPLE_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
LINUX_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
LINUX_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
RASPBERRY_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
RASPBERRY_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)
##ANDROID_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libxml2.a)
##ANDROID_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libxml2.a)
ANDROID_DEBUG_LIB(${XML2}/${OS}/${DEBUG_DIR}/libxml2.a)
ANDROID_RELEASE_LIB(${XML2}/${OS}/${RELEASE_DIR}/libxml2.a)



### COMPILE ###
WIN_PATH(${XML2}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include ${ZLIB_WIN} ${XML2})
WIN64_COMMAND(${DKCMAKE_WIN64} -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include ${ZLIB_WIN} ${XML2})
WIN_VS(${XML2_NAME} xml2.sln xml2)


MAC_PATH(${XML2}/${OS})
MAC64_COMMAND(${DKCMAKE_MAC64} ${ZLIB_APPLE} ${XML2})
MAC_XCODE(${XML2_NAME} xml2)


IOS_PATH(${XML2}/${OS})
IOS64_COMMAND(${DKCMAKE_IOS64} ${ZLIB_APPLE} ${XML2})
IOS_XCODE(${XML2_NAME} xml2)


IOSSIM_PATH(${XML2}/${OS})
IOSSIM64_COMMAND(${DKCMAKE_IOSSIM64} ${ZLIB_APPLE} ${XML2})
IOSSIM_XCODE(${XML2_NAME} xml2)


LINUX_DEBUG_PATH(${XML2}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
LINUX_DEBUG_COMMAND(${DKCMAKE_LINUX_DEBUG} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${DEBUG_DIR}" ${ZLIB_LINUX} ${XML2})
LINUX_DEBUG_COMMAND(make xml2)

LINUX_RELEASE_PATH(${XML2}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
LINUX_RELEASE_COMMAND(${DKCMAKE_LINUX_RELEASE} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${RELEASE_DIR}" ${ZLIB_LINUX} ${XML2})
LINUX_RELEASE_COMMAND(make xml2)


RASPBERRY_DEBUG_PATH(${XML2}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
RASPBERRY_DEBUG_COMMAND(${DKCMAKE_RASPBERRY_DEBUG} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${DEBUG_DIR}" ${ZLIB_RASPBERRY} ${XML2})
RASPBERRY_DEBUG_COMMAND(make xml2)

RASPBERRY_RELEASE_PATH(${XML2}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
RASPBERRY_RELEASE_COMMAND(${DKCMAKE_RASPBERRY_RELEASE} "-DCMAKE_C_FLAGS=-DLIBXML_THREAD_ENABLED -DHAVE_ERRNO_H -I${XML2}/${OS}/${RELEASE_DIR}" ${ZLIB_RASPBERRY} ${XML2})
RASPBERRY_RELEASE_COMMAND(make xml2)


##ANDROID_NDK(${XML2_VERSION})
ANDROID_PATH(${XML2}/${OS})
ANDROID32_BASH("#!/bin/bash 
cd /${XML2}/${OS}
export PATH=/${MINGW32}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../configure --disable-shared --enable-static
exit \n")
ANDROID64_BASH("#!/bin/bash 
cd /${XML2}/${OS}
export PATH=/${MINGW64}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../configure --disable-shared --enable-static
exit \n")
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} "-DANDROID_COMPILER_FLAGS=-DANDROID32 -D_ANDROID -I${XML2}/${OS}" ${ICONV_ANDROID} ${ZLIB_ANDROID} ${XML2})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} "-DANDROID_COMPILER_FLAGS=-DANDROID64 -D_ANDROID -I${XML2}/${OS}" ${ICONV_ANDROID} ${ZLIB_ANDROID} ${XML2})
ANDROID_VS(${XML2_NAME} xml2.sln xml2)