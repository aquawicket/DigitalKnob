### INSTALL ###
DKINSTALL(${DKONLINE}/Libs/libjpeg-turbo-1.5.1.tar libjpeg-turbo-1.5.1)
DKSET(JPEGTURBO ${3RDPARTY}/libjpeg-turbo-1.5.1)


### LINK ###
DKINCLUDE(${JPEGTURBO})
DKINCLUDE(${JPEGTURBO}/${OS})
ANDROID_INCLUDE(${JPEGTURBO}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${JPEGTURBO}/${OS}/Debug/jpeg-static.lib)
WIN_RELEASE_LIB(${JPEGTURBO}/${OS}/Release/jpeg-static.lib)
APPLE_DEBUG_LIB(${JPEGTURBO}/${OS}/${DEBUG}/libjpeg-static.a)
APPLE_RELEASE_LIB(${JPEGTURBO}/${OS}/${RELEASE}/libjpeg-static.a)
LINUX_DEBUG_LIB(${JPEGTURBO}/${OS}/Debug/libjpeg-static.a)
LINUX_RELEASE_LIB(${JPEGTURBO}/${OS}/Release/libjpeg-static.a)
ANDROID_DEBUG_LIB(${JPEGTURBO}/${OS}/Debug/obj/local/armeabi-v7a/libjpeg.a)
ANDROID_RELEASE_LIB(${JPEGTURBO}/${OS}/Release/obj/local/armeabi-v7a/libjpeg.a)


### COMPILE ###
DKSETPATH(${JPEGTURBO}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${JPEGTURBO})
WIN32_VS_DEBUG(libjpeg-turbo-1.5.1 libjpeg-turbo.sln jpeg-static)
WIN32_VS_RELEASE(libjpeg-turbo-1.5.1 libjpeg-turbo.sln jpeg-static)

DKSETPATH(${JPEGTURBO}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${JPEGTURBO})
WIN64_VS_DEBUG(jpeg-6b libjpeg-turbo.sln jpeg-static)
WIN64_VS_RELEASE(jpeg-6b libjpeg-turbo.sln jpeg-static)

DKSETPATH(${JPEGTURBO}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${JPEGTURBO})
MAC_XCODE_DEBUG(jpeg-6b jpeg-static)
MAC_XCODE_RELEASE(jpeg-6b jpeg-static)

DKSETPATH(${JPEGTURBO}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${JPEGTURBO})
IOS_XCODE_DEBUG(jpeg-6b jpeg-static)
IOS_XCODE_RELEASE(jpeg-6b jpeg-static)

DKSETPATH(${JPEGTURBO}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${JPEGTURBO})
IOSSIM_XCODE_DEBUG(jpeg-6b jpeg-static)
IOSSIM_XCODE_RELEASE(jpeg-6b jpeg-static)


DKSETPATH(${JPEGTURBO}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${JPEGTURBO})
LINUX_DEBUG_COMMAND(make jpeg-static)

DKSETPATH(${JPEGTURBO}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${JPEGTURBO})
LINUX_RELEASE_COMMAND(make jpeg-static)

ANDROID_NDK_DEBUG(jpeg-6b)
ANDROID_NDK_RELEASE(jpeg-6b)