### INSTALL ###
DKINSTALL(http://digitalknob.com/Download/Libs/libpng-1.7.0beta34.tar.gz libpng-1.7.0beta34)
DKSET(PNG ${3RDPARTY}/libpng-1.7.0beta34)


### LINK ###
DKINCLUDE(${PNG})
DKINCLUDE(${PNG}/${OS})
ANDROID_INCLUDE(${PNG}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${PNG}/${OS}/Debug/libpng17_staticd.lib)
WIN_RELEASE_LIB(${PNG}/${OS}/Release/libpng17_static.lib)
APPLE_DEBUG_LIB(${PNG}/${OS}/${DEBUG}/libpng17d.a)
APPLE_RELEASE_LIB(${PNG}/${OS}/${RELEASE}/libpng17.a)
LINUX_DEBUG_LIB(${PNG}/${OS}/Debug/libpng17d.a)
LINUX_RELEASE_LIB(${PNG}/${OS}/Release/libpng17.a)
ANDROID_DEBUG_LIB(${PNG}/${OS}/Debug/obj/local/armeabi-v7a/libpng.a)
ANDROID_RELEASE_LIB(${PNG}/${OS}/Release/obj/local/armeabi-v7a/libpng.a)


### COMPILE ###
DKSETPATH(${PNG}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${PNG})
WIN32_VS_DEBUG(libpng-1.7.0beta34 libpng.sln png17_static)
WIN32_VS_RELEASE(libpng-1.7.0beta34 libpng.sln png17_static)

DKSETPATH(${PNG}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${PNG})
WIN64_VS_DEBUG(libpng-1.7.0beta34 libpng.sln png17_static)
WIN64_VS_RELEASE(libpng-1.7.0beta34 libpng.sln png17_static)

DKSETPATH(${PNG}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${PNG})
MAC_XCODE_DEBUG(libpng-1.7.0beta34 png17_static)
MAC_XCODE_RELEASE(libpng-1.7.0beta34 png17_static)

DKSETPATH(${PNG}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${PNG})
IOS_XCODE_DEBUG(libpng-1.7.0beta34 png17_static)
IOS_XCODE_RELEASE(libpng-1.7.0beta34 png17_static)

DKSETPATH(${PNG}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${PNG})
IOSSIM_XCODE_DEBUG(libpng-1.7.0beta34 png17_static)
IOSSIM_XCODE_RELEASE(libpng-1.7.0beta34 png17_static)


DKSETPATH(${PNG}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a ${PNG})
LINUX_DEBUG_COMMAND(make png17_static)

DKSETPATH(${PNG}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${PNG})
LINUX_RELEASE_COMMAND(make png17_static)


ANDROID_NDK_DEBUG(libpng-1.7.0beta34)
ANDROID_NDK_RELEASE(libpng-1.7.0beta34)