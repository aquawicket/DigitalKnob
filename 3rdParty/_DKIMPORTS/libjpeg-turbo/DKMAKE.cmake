include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
# https://github.com/libjpeg-turbo/libjpeg-turbo
# https://libjpeg-turbo.org/
# For ANDROID - https://github.com/DeviceFarmer/android-libjpeg-turbo
# https://sourceforge.net/projects/libjpeg-turbo/files/2.1.1/libjpeg-turbo-2.1.1.tar.gz/download


### IMPORT ###
#dk_import(https://github.com/libjpeg-turbo/libjpeg-turbo.git BRANCH main)
dk_import(https://github.com/libjpeg-turbo/libjpeg-turbo/archive/refs/heads/main.zip)
dk_assert(LIBJPEG_TURBO)


### LINK ###
dk_include					(${LIBJPEG_TURBO}													LIBJPEG_TURBO_INCLUDE_DIR)
ANDROID_dk_include			(${LIBJPEG_TURBO}/${triple}/$(BUILD_TYPE)/jni)
dk_validate(MULTI_CONFIG "dk_getMULTI_CONFIG()")
if(MULTI_CONFIG)
	dk_include				(${LIBJPEG_TURBO}/${triple}											LIBJPEG_TURBO_INCLUDE_DIR2)
else()
	DEBUG_dk_include		(${LIBJPEG_TURBO}/${triple}/${DEBUG_DIR}							LIBJPEG_TURBO_INCLUDE_DIR2)
	RELEASE_dk_include		(${LIBJPEG_TURBO}/${triple}/${RELEASE_DIR}							LIBJPEG_TURBO_INCLUDE_DIR2)
endif()
dk_assert(LIBJPEG_TURBO_INCLUDE_DIR2)

if(MSVC)
	WIN_dk_libDebug			(${LIBJPEG_TURBO}/${triple}/${DEBUG_DIR}/turbojpeg-static.lib		LIBJPEG_TURBO_LIBRARY_DEBUG)
	WIN_dk_libRelease		(${LIBJPEG_TURBO}/${triple}/${RELEASE_DIR}/turbojpeg-static.lib		LIBJPEG_TURBO_LIBRARY_RELEASE)
	ANDROID_dk_libDebug		(${LIBJPEG_TURBO}/${triple}/${DEBUG_DIR}/libturbojpeg.a				LIBJPEG_TURBO_LIBRARY_DEBUG)
	ANDROID_dk_libRelease	(${LIBJPEG_TURBO}/${triple}/${RELEASE_DIR}/libturbojpeg.a			LIBJPEG_TURBO_LIBRARY_RELEASE)
else()
	dk_libDebug				(${LIBJPEG_TURBO}/${triple}/${DEBUG_DIR}/libturbojpeg.a				LIBJPEG_TURBO_LIBRARY_DEBUG)
	dk_libRelease			(${LIBJPEG_TURBO}/${triple}/${RELEASE_DIR}/libturbojpeg.a			LIBJPEG_TURBO_LIBRARY_RELEASE)
endif()



### 3RDPARTY LINK ###
if(MSVC)
	WIN_dk_set		(LIBJPEG_TURBO_CMAKE -DJPEG_INCLUDE_DIR=${LIBJPEG_TURBO_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${LIBJPEG_TURBO_INCLUDE_DIR2} -DJPEG_LIBRARY_DEBUG=${LIBJPEG_TURBO_LIBRARY_DEBUG} -DJPEG_LIBRARY_RELEASE=${LIBJPEG_TURBO_LIBRARY_RELEASE} "-DCMAKE_C_FLAGS=/I${LIBJPEG_TURBO_INCLUDE_DIR}" "-DCMAKE_CXX_FLAGS=/I${LIBJPEG_TURBO_INCLUDE_DIR}")
elseif(ANDROID)
	ANDROID_dk_set	(LIBJPEG_TURBO_CMAKE -DJPEG_INCLUDE_DIR=${LIBJPEG_TURBO_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${LIBJPEG_TURBO_INCLUDE_DIR2} -DJPEG_LIBRARY=${LIBJPEG_TURBO_LIBRARY_RELEASE} -DLIBJPEG_INCLUDE_DIR=${LIBJPEG_TURBO} -DLIBJPEG_LIBRARY=${LIBJPEG_TURBO_LIBRARY_RELEASE} "-DCMAKE_C_FLAGS=-I${LIBJPEG_TURBO}/${triple}" "-DCMAKE_CXX_FLAGS=-I${LIBJPEG_TURBO}/${triple}")
elseif(APPLE)
	APPLE_dk_set	(LIBJPEG_TURBO_CMAKE -DJPEG_INCLUDE_DIR=${LIBJPEG_TURBO_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${LIBJPEG_TURBO_INCLUDE_DIR2} -DJPEG_LIBRARY_RELEASE=${LIBJPEG_TURBO_LIBRARY_RELEASE} -DLIBJPEG_INCLUDE_DIR=${LIBJPEG_TURBO} -DLIBJPEG_LIBRARY=${LIBJPEG_TURBO_LIBRARY_RELEASE} "-DCMAKE_C_FLAGS=-I${LIBJPEG_TURBO}/${triple}" "-DCMAKE_CXX_FLAGS=-I${LIBJPEG_TURBO}/${triple}")
else()
	DEBUG_dk_set	(LIBJPEG_TURBO_CMAKE
		-DENABLE_SHARED=0
		-DJPEG_INCLUDE_DIR=${LIBJPEG_TURBO_INCLUDE_DIR};${LIBJPEG_TURBO_INCLUDE_DIR2}
		-DJPEG_LIBRARY=${LIBJPEG_TURBO_LIBRARY_DEBUG}
		"-DCMAKE_EXE_LINKER_FLAGS=${LIBJPEG_TURBO_LIBRARY_DEBUG}")
		
	RELEASE_dk_set	(LIBJPEG_TURBO_CMAKE
		-DENABLE_SHARED=0
		-DJPEG_INCLUDE_DIR=${LIBJPEG_TURBO_INCLUDE_DIR}
		-DJPEG_LIBRARY=${LIBJPEG_TURBO_LIBRARY_RELEASE}
		"-DCMAKE_EXE_LINKER_FLAGS=${LIBJPEG_TURBO_LIBRARY_RELEASE}")
endif()





### GENERATE ##
dk_configure(${LIBJPEG_TURBO} -DWITH_SIMD=OFF "-DCMAKE_C_FLAGS=-I${LIBJPEG_TURBO_INCLUDE_DIR2} -I${LIBJPEG_TURBO_INCLUDE_DIR2}")


if(EXISTS "${LIBJPEG_TURBO_INCLUDE_DIR2}/jconfig.h")
	dk_copy("${LIBJPEG_TURBO_INCLUDE_DIR2}/jconfig.h" "${LIBJPEG_TURBO}/jconfig.h" OVERWRITE)
endif()

### COMPILE ###
dk_build(${LIBJPEG_TURBO} turbojpeg-static)



