### DEPENDS ###
IF(WIN_32)
	DKDEPEND(mingw32)
ENDIF()
IF(WIN_64)
	DKDEPEND(mingw64)
ENDIF()
IF(WIN)
	DKDEPEND(msys)
ENDIF()


### INSTALL ###
DKINSTALL(https://astuteinternet.dl.sourceforge.net/project/lzmautils/xz-5.2.0.tar.gz xz-5.2.0)
## DKINSTALL(${DKWEB}/Download/xz-5.2.0.tar.gz xz-5.2.0)
DKSET(XZ ${3RDPARTY}/xz-5.2.0)


### LINK ###
DKINCLUDE(${XZ}/src/liblzma/api)
DKDEFINE(LZMA_API_STATIC)
WIN_DEBUG_LIB(${XZ}/${OS}/Debug/src/liblzma/.libs/liblzma.lib)
WIN_RELEASE_LIB(${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.lib)
MAC_DEBUG_LIB(${XZ}/${OS}/${DEBUG}/src/liblzma/.libs/liblzma.a)
MAC_RELEASE_LIB(${XZ}/${OS}/${RELEASE}/src/liblzma/.libs/liblzma.a)
LINUX_DEBUG_LIB(${XZ}/${OS}/Debug/src/liblzma/.libs/liblzma.a)
LINUX_RELEASE_LIB(${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.a)
## ANDROID_DEBUG_LIB(${XZ}/${OS}/obj/local/armeabi-v7a/liblzma.a)
## ANDROID_RELEASE_LIB(${XZ}/${OS}/obj/local/armeabi-v7a/liblzma.a)
RASPBERRY_DEBUG_LIB(${XZ}/${OS}/Debug/src/liblzma/.libs/liblzma.a)
RASPBERRY_RELEASE_LIB(${XZ}/${OS}/Release/src/liblzma/.libs/liblzma.a)


### COMPILE ###
DKSETPATH(${XZ}/win32/Debug)
WIN32_BASH("#!/bin/bash\;
cd ${XZ}/win32/Debug\;
export PATH=/${MINGW32}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../../configure --disable-shared --enable-static\;
make\;
exit\;")
DKRENAME(${XZ}/win32/Debug/src/liblzma/.libs/liblzma.a ${XZ}/win32/Debug/src/liblzma/.libs/liblzma.lib)

DKSETPATH(${XZ}/win32/Release)
WIN32_BASH("#!/bin/bash\;
cd ${XZ}/win32/Release\;
export PATH=/${MINGW32}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../../configure --disable-shared --enable-static\;
make\;
exit\;")
DKRENAME(${XZ}/win32/Release/src/liblzma/.libs/liblzma.a ${XZ}/win32/Release/src/liblzma/.libs/liblzma.lib)


DKSETPATH(${XZ}/win64/Debug)
WIN64_BASH("#!/bin/bash\;
cd ${XZ}/win64/Debug\;
export PATH=/${MINGW64}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../../configure --disable-shared --enable-static --build=x86_64-w64-mingw32\;
make\;
exit\;")
DKRENAME(${XZ}/win64/Debug/src/liblzma/.libs/liblzma.a ${XZ}/win64/Debug/src/liblzma/.libs/liblzma.lib)

DKSETPATH(${XZ}/win64/Release)
WIN64_BASH("#!/bin/bash\;
cd ${XZ}/win64/Release\;
export PATH=/${MINGW64}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
../../configure --disable-shared --enable-static --build=x86_64-w64-mingw32\;
make\;
exit\;")
DKRENAME(${XZ}/win64/Release/src/liblzma/.libs/liblzma.a ${XZ}/win64/Release/src/liblzma/.libs/liblzma.lib)

DKSETPATH(${XZ}/${OS}/Debug)
MAC_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
MAC_DEBUG_COMMAND(make "CXXFLAGS=-arch x86_64" "CFLAGS=-arch x86_64" "LDFLAGS=-arch x86_64")

DKSETPATH(${XZ}/${OS}/Release)
MAC_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
MAC_RELEASE_COMMAND(make "CXXFLAGS=-arch x86_64" "CFLAGS=-arch x86_64" "LDFLAGS=-arch x86_64")


## DKSETPATH(${XZ}/${OS}/Debug)
## IOSSIM_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
## IOSSIM_DEBUG_COMMAND(make)

## DKSETPATH(${XZ}/${OS}/Release)
## IOSSIM_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
## IOSSIM_RELEASE_COMMAND(make)


DKSETPATH(${XZ}/${OS}/Debug)
LINUX_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
LINUX_DEBUG_COMMAND(make)

DKSETPATH(${XZ}/${OS}/Release)
LINUX_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
LINUX_RELEASE_COMMAND(make)


## ANDROID_NDK_DEBUG(xz-5.2.0)
## ANDROID_NDK_RELEASE(xz-5.2.0)


DKSETPATH(${XZ}/${OS}/Debug)
RASPBERRY_DEBUG_COMMAND(../../configure --disable-shared --enable-static)
RASPBERRY_DEBUG_COMMAND(make)

DKSETPATH(${XZ}/${OS}/Release)
RASPBERRY_RELEASE_COMMAND(../../configure --disable-shared --enable-static)
RASPBERRY_RELEASE_COMMAND(make)