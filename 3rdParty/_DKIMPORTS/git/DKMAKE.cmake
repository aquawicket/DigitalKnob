# https://git-scm.com
# https://github.com/git-for-windows/git/releases/download/v2.31.1.windows.1/Git-2.31.1-32-bit.exe

### DOWNLOAD ###
WIN_HOST_dk_set(GIT_DL https://github.com/git-for-windows/git/releases/download/v2.31.1.windows.1/Git-2.31.1-32-bit.exe)
WIN_HOST_dk_set(GIT_FILE Git-2.31.1-32-bit.exe)


if(EXISTS /usr/bin/git)
	dk_set(GIT /usr/bin)
	dk_set(GIT_EXE /usr/bin/git)
elseif(EXISTS /usr/local/bin/git)
	dk_set(GIT /usr/local/bin)
	dk_set(GIT_EXE /usr/local/bin/git)
elseif(EXISTS /data/data/com.termux/files/urs/bin/git)
	dk_set(GIT /data/data/com.termux/files/urs/bin)
	dk_set(GIT_EXE /data/data/com.termux/files/urs/bin/git)
elseif(EXISTS "C:/Progra~1/Git/bin/git.exe")
	dk_set(GIT "C:/Progra~1/Git/bin")
	dk_set(GIT_EXE "C:/Progra~1/Git/bin/git.exe")
elseif(EXISTS "C:/Progra~2/Git/bin/git.exe")
	dk_set(GIT "C:/Progra~2/Git/bin")
	dk_set(GIT_EXE "C:/Progra~2/Git/bin/git.exe")
elseif(EXISTS "C:/Program Files/Git/bin/git.exe")
	dk_set(GIT "C:/Program Files/Git/bin")
	dk_set(GIT_EXE "C:/Program Files/Git/bin/git.exe")
elseif(EXISTS "C:/Program Files (x86)/Git/bin/git.exe")
	dk_set(GIT "C:/Program Files (x86)/Git/bin")
	dk_set(GIT_EXE "C:/Program Files (x86)/Git/bin/git.exe")
else()
	### INSTALL ###
	dk_info("Installing Git . . .")
	WIN_HOST_dk_download(${GIT_DL} ${DKDOWNLOAD})
	WIN_HOST_dk_command(${DKDOWNLOAD}/${GIT_FILE})
	MAC_HOST_dk_command(brew install git)
	if("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Android")
		dk_set(APT "apt")
	else()
		dk_set(APT "apt-get")
	endif()
	LINUX_HOST_dk_command(sudo ${APT} -y install git)

endif()

if(EXISTS /usr/bin/git)
	dk_set(GIT /usr/bin)
	dk_set(GIT_EXE /usr/bin/git)
elseif(EXISTS /usr/local/bin/git)
	dk_set(GIT /usr/local/bin)
	dk_set(GIT_EXE /usr/local/bin/git)
elseif(EXISTS /data/data/com.termux/files/urs/bin/git)
	dk_set(GIT /data/data/com.termux/files/urs/bin)
	dk_set(GIT_EXE /data/data/com.termux/files/urs/bin/git)
elseif(EXISTS "C:/Progra~1/Git/bin/git.exe")
	dk_set(GIT "C:/Progra~1/Git/bin")
	dk_set(GIT_EXE "C:/Progra~1/Git/bin/git.exe")
elseif(EXISTS "C:/Progra~2/Git/bin/git.exe")
	dk_set(GIT "C:/Progra~2/Git/bin")
	dk_set(GIT_EXE "C:/Progra~2/Git/bin/git.exe")
elseif(EXISTS "C:/Program Files/Git/bin/git.exe")
	dk_set(GIT "C:/Program Files/Git/bin")
	dk_set(GIT_EXE "C:/Program Files/Git/bin/git.exe")
elseif(EXISTS "C:/Program Files (x86)/Git/bin/git.exe")
	dk_set(GIT "C:/Program Files (x86)/Git/bin")
	dk_set(GIT_EXE "C:/Program Files (x86)/Git/bin/git.exe")
else()
	dk_assert("GIT NOT FOUND!")
endif()

dk_command(${GIT_EXE} --version)
