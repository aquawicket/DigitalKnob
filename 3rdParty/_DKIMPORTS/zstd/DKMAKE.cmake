include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
# https://github.com/facebook/zstd.git


### IMPORT ###
#dk_import(https://github.com/facebook/zstd.git BRANCH release)
dk_import(https://github.com/facebook/zstd/archive/refs/heads/release.zip)



### LINK ###
dk_include					(${ZSTD}/lib										    ZSTD_INCLUDE_DIR)
if(MSVC)
	ANDROID_dk_libDebug		(${ZSTD}/${triple}/lib/${DEBUG_DIR}/libzstd.a			ZSTD_LIBRARY_DEBUG)
	ANDROID_dk_libRelease	(${ZSTD}/${triple}/lib/${RELEASE_DIR}/libzstd.a			ZSTD_LIBRARY_RELEASE)
	WIN_dk_libDebug			(${ZSTD}/${triple}/lib/${DEBUG_DIR}/zstd_static.lib		ZSTD_LIBRARY_DEBUG)
	WIN_dk_libRelease		(${ZSTD}/${triple}/lib/${RELEASE_DIR}/zstd_static.lib	ZSTD_LIBRARY_RELEASE)
elseif(APPLE)
	dk_libDebug				(${ZSTD}/${triple}/lib/${DEBUG_DIR}/libzstd.a			ZSTD_LIBRARY_DEBUG)
	dk_libRelease			(${ZSTD}/${triple}/lib/${RELEASE_DIR}/libzstd.a			ZSTD_LIBRARY_RELEASE)
else()
	dk_libDebug				(${ZSTD}/${triple}/${DEBUG_DIR}/lib/libzstd.a			ZSTD_LIBRARY_DEBUG)
	dk_libRelease			(${ZSTD}/${triple}/${RELEASE_DIR}/lib/libzstd.a			ZSTD_LIBRARY_RELEASE)
endif()
	


### 3RDPARTY LINK ###
if(MULTI_CONFIG)
	dk_set(ZSTD_CMAKE 
		-DZstd_INCLUDE_DIR=${ZSTD_INCLUDE_DIR} 
		-DZstd_LIBRARY_DEBUG=${ZSTD_LIBRARY_DEBUG} 
		-DZstd_LIBRARY_RELEASE=${ZSTD_LIBRARY_RELEASE} 
		-DZstd_LIBRARIES=${ZSTD_LIBRARY_DEBUG};${ZSTD_LIBRARY_RELEASE})
else()
	DEBUG_dk_set(ZSTD_CMAKE
		-DZSTD_INCLUDE_DIR=${ZSTD_INCLUDE_DIR}
		-DZSTD_LIBRARY=${ZSTD_LIBRARY_DEBUG}
		-DZstd_INCLUDE_DIR=${ZSTD_INCLUDE_DIR}
		-DZstd_LIBRARIES=${ZSTD_LIBRARY_DEBUG}
		-DZstd_LIBRARY=${ZSTD_LIBRARY_DEBUG}
		"-DCMAKE_EXE_LINKER_FLAGS=${ZSTD_LIBRARY_DEBUG}")
	RELEASE_dk_set(ZSTD_CMAKE 
		-DZSTD_INCLUDE_DIR=${ZSTD_INCLUDE_DIR} 
		-DZSTD_LIBRARY=${ZSTD_LIBRARY_RELEASE} 
		-DZstd_INCLUDE_DIR=${ZSTD_INCLUDE_DIR} 
		-DZstd_LIBRARIES=${ZSTD_LIBRARY_RELEASE}
		-DZstd_LIBRARY=${ZSTD_LIBRARY_RELEASE} 
		"-DCMAKE_EXE_LINKER_FLAGS=${ZSTD_LIBRARY_RELEASE}")
endif()


### GENERATE ###
dk_configure(${ZSTD}/build/cmake
	-DZSTD_BUILD_CONTRIB=OFF		# "BUILD CONTRIB" OFF
	-DZSTD_BUILD_PROGRAMS=OFF		# "BUILD PROGRAMS" ON
	-DZSTD_BUILD_SHARED=OFF			# "BUILD SHARED LIBRARIES" ON
	-DZSTD_BUILD_STATIC=ON			# "BUILD STATIC LIBRARIES" ON
	-DZSTD_BUILD_TESTS=OFF			# "BUILD TESTS" ${ZSTD_BUILD_TESTS_default}
	-DZSTD_LEGACY_SUPPORT=OFF		# "LEGACY SUPPORT" OFF
	-DZSTD_MULTITHREAD_SUPPORT=ON	# "MULTITHREADING SUPPORT" ON
	-DZSTD_PROGRAMS_LINK_SHARED=OFF # "PROGRAMS LINK SHARED" OFF
	-DZSTD_USE_STATIC_RUNTIME=ON)	# "LINK TO STATIC RUN-TIME LIBRARIES" OFF


### COMPILE ###
dk_build(${ZSTD})
