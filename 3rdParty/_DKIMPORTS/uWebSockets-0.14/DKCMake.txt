DKDEPEND(libuv-v1.37.0)


### INSTALL ###
DKINSTALL(https://github.com/uNetworking/uWebSockets/archive/v0.14.zip uWebSockets-0.14)
DKRENAME(${DKDOWNLOAD}/v0.14.zip ${DKDOWNLOAD}/uWebSockets-0.14.zip)
## DKINSTALL(${DKWEB}/Download/uWebSockets-0.14.zip uWebSockets-0.14)
DKSET(UWEBSOCKETS ${3RDPARTY}/uWebSockets-0.14)


### LINK ###
DKINCLUDE(${UWEBSOCKETS})
DKINCLUDE(${UWEBSOCKETS}/${OS})
WIN_DEBUG_LIB(${UWEBSOCKETS}/${OS}/Debug/uWS.lib)
WIN_RELEASE_LIB(${UWEBSOCKETS}/${OS}/Release/uWS.lib)
MAC_DEBUG_LIB(${UWEBSOCKETS}/${OS}/lib/${DEBUG}/uWS.a)
MAC_RELEASE_LIB(${UWEBSOCKETS}/${OS}/lib/${RELEASE}/uWS.a)
IOSSIM_DEBUG_LIB(${UWEBSOCKETS}/${OS}/${DEBUG}/lib/.libs/uWS.a)
IOSSIM_RELEASE_LIB(${UWEBSOCKETS}/${OS}/${RELEASE}/lib/.libs/uWS.a)
LINUX_DEBUG_LIB(${UWEBSOCKETS}/${OS}/Debug/uWS.a)
LINUX_RELEASE_LIB(${UWEBSOCKETS}/${OS}/Release/uWS.a)
ANDROID_DEBUG_LIB(${UWEBSOCKETS}/${OS}/Debug/obj/local/armeabi-v7a/uWS.a)
ANDROID_RELEASE_LIB(${UWEBSOCKETS}/${OS}/Release/obj/local/armeabi-v7a/uWS.a)


### COMPILE ###
DKSETPATH(${UWEBSOCKETS}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/Release/uv_a.lib -DOPENSSL_ROOT_DIR=${OPENSSL} -DOPENSSL_INCLUDE_DIR=${OPENSSL}/include ${UWEBSOCKETS})
WIN32_VS_DEBUG(uWebSockets-0.14 µWebSockets.sln uWS)
WIN32_VS_RELEASE(uWebSockets-0.14 µWebSockets.sln uWS)

DKSETPATH(${UWEBSOCKETS}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib -DLIBUV_INCLUDE_DIR=${UV} -DLIBUV_LIBRARY=${UV}/${OS}/Release/uv_a.lib -DOPENSSL_ROOT_DIR=${OPENSSL} -DOPENSSL_INCLUDE_DIR=${OPENSSL}/include ${UWEBSOCKETS})
WIN64_VS_DEBUG(uWebSockets-0.14 µWebSockets.sln uWS)
WIN64_VS_RELEASE(uWebSockets-0.14 µWebSockets.sln uWS)

DKSETPATH(${UWEBSOCKETS}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${UWEBSOCKETS})
MAC64_XCODE_DEBUG(uWebSockets-0.14 libuWS)
MAC64_XCODE_RELEASE(uWebSockets-0.14 libuWS)

DKSETPATH(${UWEBSOCKETS}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${UWEBSOCKETS})
IOS_XCODE_DEBUG(uWebSockets-0.14 libuWS)
IOS_XCODE_RELEASE(uWebSockets-0.14 libuWS)

DKSETPATH(${UWEBSOCKETS}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${UWEBSOCKETS})
IOSSIM_XCODE_DEBUG(uWebSockets-0.14 libuWS)
IOSSIM_XCODE_RELEASE(uWebSockets-0.14 libuWS)

DKSETPATH(${UWEBSOCKETS}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC ${UWEBSOCKETS})
LINUX_DEBUG_COMMAND(make uWebSockets)

DKSETPATH(${UWEBSOCKETS}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC ${UWEBSOCKETS})
LINUX_RELEASE_COMMAND(make uWebSockets)

ANDROID_NDK_DEBUG(uWebSockets-0.14)
ANDROID_NDK_RELEASE(uWebSockets-0.14)