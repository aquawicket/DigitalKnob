### VERSION ###
DKSET(ICONV_VERSION 1.14)
DKSET(ICONV ${3RDPARTY}/libiconv-${ICONV_VERSION})


### INSTALL ###
DKINSTALL(https://ftp.gnu.org/gnu/libiconv/libiconv-${ICONV_VERSION}.tar.gz libiconv libiconv-${ICONV_VERSION})



### LINK ###
DKINCLUDE(${ICONV})
DKINCLUDE(${ICONV}/include)
DKINCLUDE(${ICONV}/${OS})
DKINCLUDE(${ICONV}/${OS}/${RELEASE_DIR})
ANDROID_INCLUDE(${ICONV}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/iconv.lib)
WIN_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/iconv.lib)
WIN_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/charset.lib)
WIN_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/charset.lib)
APPLE_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/libiconv.a)
APPLE_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/libiconv.a)
LINUX_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/libiconv.a)
LINUX_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/libiconv.a)
RASPBERRY_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/libiconv.a)
RASPBERRY_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/libiconv.a)
##ANDROID_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libiconv.a)
##ANDROID_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libiconv.a)
ANDROID_DEBUG_LIB(${ICONV}/${OS}/${DEBUG_DIR}/libiconv.a)
ANDROID_RELEASE_LIB(${ICONV}/${OS}/${RELEASE_DIR}/libiconv.a)


DKSET(ICONV_WIN -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include)
DKSET(ICONV_MAC -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include)
DKSET(ICONV_LINUX -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include)
DKSET(ICONV_ANDROID -DICONV_DIR=${ICONV} -DICONV_LIBRARIES=${ICONV}/${OS}/${RELEASE_DIR} -DICONV_INCLUDE_DIR=${ICONV}/include)


### COMPILE ###
WIN_PATH(${ICONV}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} ${ICONV})
WIN64_COMMAND(${DKCMAKE_WIN64} ${ICONV})
WIN_VS(libiconv-${ICONV_VERSION} libiconv.sln iconv)


MAC_PATH(${ICONV}/${OS})
MAC64_COMMAND(${DKCMAKE_MAC64} ${ICONV})
MAC_XCODE(libiconv-${ICONV_VERSION} iconv)


IOS_PATH(${ICONV}/${OS})
IOS64_COMMAND(${DKCMAKE_IOS64} ${ICONV})
IOS_XCODE(libiconv-${ICONV_VERSION} iconv)


IOSSIM_PATH(${ICONV}/${OS})
IOSSIM_COMMAND(${DKCMAKE_IOSSIM64} ${ICONV})
IOSSIM_XCODE(libiconv-${ICONV_VERSION} iconv)


LINUX_DEBUG_PATH(${ICONV}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${ICONV})
LINUX_DEBUG_COMMAND(make iconv)

LINUX_RELEASE_PATH(${ICONV}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${ICONV})
LINUX_RELEASE_COMMAND(make iconv)


RASPBERRY_DEBUG_PATH(${ICONV}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${ICONV})
RASPBERRY_DEBUG_COMMAND(make iconv)

RASPBERRY_RELEASE_PATH(${ICONV}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${ICONV})
RASPBERRY_RELEASE_COMMAND(make iconv)


##ANDROID_NDK(libiconv-${ICONV_VERSION})
ANDROID_PATH(${ICONV}/${OS})
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} ${ICONV})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} ${ICONV})
ANDROID_VS(libiconv-${ICONV_VERSION} libiconv.sln iconv)