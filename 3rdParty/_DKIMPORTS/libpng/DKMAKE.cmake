# https://github.com/glennrp/libpng
# http://www.libpng.org/pub/png/libpng.html


### DEPEND ###
EMSCRIPTEN_dk_depend(m)
dk_depend(zlib)


### IMPORT ###
if(MAC)
	dk_import(https://github.com/glennrp/libpng.git)
else()
	dk_import(https://github.com/glennrp/libpng/archive/refs/tags/v1.6.35.zip PATCH)
	dk_set(LIBPNG_MAJOR 1)
	dk_set(LIBPNG_MINOR 6)
	dk_set(LIBPNG_BUILD 35)
endif()


### LINK ###
dk_define					(PNG_STATIC)
dk_include					(${LIBPNG}  					PNG_INCLUDE_DIR)
dk_include					(${LIBPNG}/${OS})
dk_include					(${LIBPNG}/${OS}/${RELEASE_DIR})
ANDROID_dk_include			(${LIBPNG}/${OS}/$(BUILD_TYPE)/jni)
if(MSVC)
	ANDROID_dk_libDebug		(${LIBPNG}/${OS}/${DEBUG_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}d.a			PNG_LIBRARY_DEBUG)
	ANDROID_dk_libRelease	(${LIBPNG}/${OS}/${RELEASE_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}.a			PNG_LIBRARY_RELEASE)
	WIN_dk_libDebug			(${LIBPNG}/${OS}/${DEBUG_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}_staticd.lib	PNG_LIBRARY_DEBUG)
	WIN_dk_libRelease		(${LIBPNG}/${OS}/${RELEASE_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}_static.lib	PNG_LIBRARY_RELEASE)
elseif(APPLE)
	dk_libDebug				(${LIBPNG}/${OS}/${DEBUG_DIR}/libpng.a											PNG_LIBRARY_DEBUG)
	dk_libRelease			(${LIBPNG}/${OS}/${RELEASE_DIR}/libpng.a										PNG_LIBRARY_RELEASE)
else()
	ANDROID_dk_libDebug		(${LIBPNG}/${OS}/${DEBUG_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}.a			PNG_LIBRARY_DEBUG)
	if(NOT ANDROID)
		dk_libDebug			(${LIBPNG}/${OS}/${DEBUG_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}d.a			PNG_LIBRARY_DEBUG)
	endif()
	dk_libRelease			(${LIBPNG}/${OS}/${RELEASE_DIR}/libpng${LIBPNG_MAJOR}${LIBPNG_MINOR}.a			PNG_LIBRARY_RELEASE)
endif()


### 3RDPARTY LINK ###
if(MSVC)
	WIN_dk_set					(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=/I${LIBPNG} /I${LIBPNG}/${OS}" "-DCMAKE_CXX_FLAGS=/I${LIBPNG} /I${LIBPNG}/${OS}" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_PNG_INCLUDE_DIR=${LIBPNG}/${OS} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
	ANDROID_dk_set				(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_PNG_INCLUDE_DIR=${LIBPNG}/${OS} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
elseif(APPLE)
	APPLE_dk_set				(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
elseif(RASPBERRY)
	RASPBERRY_DEBUG_dk_set		(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Debug" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Debug" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
	RASPBERRY_RELEASE_dk_set	(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Release" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Release" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
else()
	DEBUG_dk_set				(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Debug" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Debug" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS}/${DEBUG_DIR} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
	RELEASE_dk_set				(LIBPNG_CMAKE "-DCMAKE_C_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Release" "-DCMAKE_CXX_FLAGS=-I${LIBPNG} -I${LIBPNG}/${OS}/Release" -DPNG_INCLUDE_DIR=${PNG_INCLUDE_DIR} -DPNG_INCLUDE_DIR2=${LIBPNG}/${OS}/${RELEASE_DIR} -DPNG_LIBRARY_DEBUG=${PNG_LIBRARY_DEBUG} -DPNG_LIBRARY_RELEASE=${PNG_LIBRARY_RELEASE})
endif()



### GENERATE ###
if(MSVC)
	dk_queueCommand(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${LIBPNG} -DPNG_STATIC=ON -DPNG_SHARED=OFF -DPNG_TESTS=OFF)
else()
	dk_queueCommand(${DKCMAKE_BUILD} ${ZLIB_CMAKE} ${LIBPNG} -DPNG_STATIC=ON -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DSKIP_INSTALL_LIBRARIES=ON -DSKIP_INSTALL_ALL=ON)
endif()


### COMPILE ###
dk_build(${LIBPNG} png_static)

