### VERSION ###
DKSET(PNG_MAJOR_VERSION 1)
DKSET(PNG_MINOR_VERSION 7)
DKSET(PNG_BUILD_VERSION 0beta34)
DKSET(PNG_VERSION libpng-${PNG_MAJOR_VERSION}.${PNG_MINOR_VERSION}.${PNG_BUILD_VERSION})


### INSTALL ###
DKINSTALL(https://sourceforge.net/projects/libpng/files/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}/${PNG_MAJOR_VERSION}.${PNG_MINOR_VERSION}.0-oldbetas/${PNG_VERSION}.tar.gz libpng ${PNG_VERSION})
DKSET(PNG ${3RDPARTY}/${PNG_VERSION})


### LINK ###
DKINCLUDE(${PNG})
DKINCLUDE(${PNG}/${OS})
DKINCLUDE(${PNG}/${OS}/${RELEASE})
ANDROID_INCLUDE(${PNG}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${PNG}/${OS}/Debug/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_staticd.lib)
WIN_RELEASE_LIB(${PNG}/${OS}/Release/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static.lib)
APPLE_DEBUG_LIB(${PNG}/${OS}/${DEBUG}/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}d.a)
APPLE_RELEASE_LIB(${PNG}/${OS}/${RELEASE}/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}.a)
LINUX_DEBUG_LIB(${PNG}/${OS}/Debug/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}d.a)
LINUX_RELEASE_LIB(${PNG}/${OS}/Release/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}.a)
ANDROID_DEBUG_LIB(${PNG}/${OS}/Debug/obj/local/armeabi-v7a/libpng.a)
ANDROID_RELEASE_LIB(${PNG}/${OS}/Release/obj/local/armeabi-v7a/libpng.a)
RASPBERRY_DEBUG_LIB(${PNG}/${OS}/Debug/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}d.a)
RASPBERRY_RELEASE_LIB(${PNG}/${OS}/Release/libpng${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}.a)

### COMPILE ###
DKSETPATH(${PNG}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${PNG})
WIN32_VS_DEBUG(${PNG_VERSION} libpng.sln png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)
WIN32_VS_RELEASE(${PNG_VERSION} libpng.sln png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)

DKSETPATH(${PNG}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /I${ZLIB}/${OS}" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/zlibstatic.lib ${PNG})
WIN64_VS_DEBUG(${PNG_VERSION} libpng.sln png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)
WIN64_VS_RELEASE(${PNG_VERSION} libpng.sln png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)

DKSETPATH(${PNG}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${PNG})
MAC_XCODE_DEBUG(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)
MAC_XCODE_RELEASE(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)

DKSETPATH(${PNG}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${PNG})
IOS_XCODE_DEBUG(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)
IOS_XCODE_RELEASE(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)

DKSETPATH(${PNG}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DCMAKE_C_FLAGS=-I${ZLIB}/${OS} -DPNG_SHARED=OFF -DPNG_TESTS=OFF -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/${RELEASE}/libz.a ${PNG})
IOSSIM_XCODE_DEBUG(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)
IOSSIM_XCODE_RELEASE(${PNG_VERSION} png${PNG_MAJOR_VERSION}${PNG_MINOR_VERSION}_static)


DKSETPATH(${PNG}/${OS}/Debug)
##-DPNG_SHARED=ON
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DPNG_SHARED=OFF -DPNG_TESTS=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a ${PNG})
LINUX_DEBUG_COMMAND(make all)

DKSETPATH(${PNG}/${OS}/Release)
##-DPNG_SHARED=ON
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -I${PNG}/${OS}/${RELEASE} -DPNG_SHARED=OFF -DPNG_TESTS=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${PNG})
LINUX_RELEASE_COMMAND(make all)


ANDROID_NDK_DEBUG(${PNG_VERSION})
ANDROID_NDK_RELEASE(${PNG_VERSION})


DKSETPATH(${PNG}/${OS}/Debug)
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Debug -DPNG_SHARED=ON -DPNG_TESTS=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Debug/libz.a ${PNG})
RASPBERRY_DEBUG_COMMAND(make all)

DKSETPATH(${PNG}/${OS}/Release)
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-I${ZLIB}/${OS}/Release -DPNG_SHARED=ON -DPNG_TESTS=ON -DZLIB_INCLUDE_DIR=${ZLIB} -DZLIB_LIBRARY=${ZLIB}/${OS}/Release/libz.a ${PNG})
RASPBERRY_RELEASE_COMMAND(make all)
