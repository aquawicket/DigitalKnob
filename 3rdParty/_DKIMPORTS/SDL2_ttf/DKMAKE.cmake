## https://www.libsdl.org/projects/SDL_ttf/

### DEPENDS ###
DKDEPEND(SDL2)
DKDEPEND(freetype)


### VERSION ###
DKSET(SDLTTF_VERSION 2.0.15)
DKSET(SDLTTF_NAME SDL2_ttf-${SDLTTF_VERSION})
DKSET(SDLTTF_ROOT ${3RDPARTY}/${SDLTTF_NAME})


### INSTALL ###
## https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.15.zip
DKINSTALL(https://www.libsdl.org/projects/SDL_ttf/release/${SDLTTF_NAME}.zip SDL2_ttf ${SDLTTF_NAME})



### LINK ###
DKINCLUDE(${SDLTTF_ROOT})
WIN_DEBUG_LIB(${SDLTTF_ROOT}/${OS}/lib/${DEBUG_DIR}/SDL_ttf.lib)
WIN_RELEASE_LIB(${SDLTTF_ROOT}/${OS}/lib/${RELEASE_DIR}/SDL_ttf.lib)
APPLE_DEBUG_LIB(${SDLTTF_ROOT}/${OS}/lib/${DEBUG_DIR}/SDL_ttf.a)
APPLE_RELEASE_LIB(${SDLTTF_ROOT}/${OS}/lib/${RELEASE_DIR}/SDL_ttf.a)
LINUX_DEBUG_LIB(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR}/lib/SDL_ttf.a)
LINUX_RELEASE_LIB(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR}/lib/SDL_ttf.a)
ANDROID_DEBUG_LIB(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libSDL2_ttf.a)
ANDROID_RELEASE_LIB(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libSDL2_ttf.a)
RASPBERRY_DEBUG_LIB(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR}/lib/SDL_ttf.a)
RASPBERRY_RELEASE_LIB(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR}/lib/SDL_ttf.a)



### COMPILE ###
DKSETPATH(${SDLTTF_ROOT}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_WIN} ${SDLTTF_ROOT})
WIN32_VS_DEBUG(${SDLTTF_NAME} SDLTTF.sln SDLTTF)
WIN32_VS_RELEASE(${SDLTTF_NAME} SDLTTF.sln SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_WIN} ${SDLTTF_ROOT})
WIN64_VS_DEBUG(${SDLTTF_NAME} SDLTTF.sln SDLTTF)
WIN64_VS_RELEASE(${SDLTTF_NAME} SDLTTF.sln SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_APPLE} ${SDLTTF_ROOT})
MAC64_XCODE_DEBUG(${SDLTTF_NAME} SDLTTF)
MAC64_XCODE_RELEASE(${SDLTTF_NAME} SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_APPLE} ${SDLTTF_ROOT})
IOS_XCODE_DEBUG(${SDLTTF_NAME} SDLTTF)
IOS_XCODE_RELEASE(${SDLTTF_NAME} SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_APPLE} ${SDLTTF_ROOT})
IOSSIM_XCODE_DEBUG(${SDLTTF_NAME} SDLTTF)
IOSSIM_XCODE_RELEASE(${SDLTTF_NAME} SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR})
LINUX32_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_LINUX} ${SDLTTF_ROOT})
LINUX32_DEBUG_COMMAND(make SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR})
LINUX32_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_LINUX} ${SDLTTF_ROOT})
LINUX32_RELEASE_COMMAND(make SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR})
LINUX64_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_LINUX} ${SDLTTF_ROOT})
LINUX64_DEBUG_COMMAND(make SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR})
LINUX64_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_LINUX} ${SDLTTF_ROOT})
LINUX64_RELEASE_COMMAND(make SDLTTF)

ANDROID_NDK_DEBUG(${SDLTTF_NAME})
ANDROID_NDK_RELEASE(${SDLTTF_NAME})

DKSETPATH(${SDLTTF_ROOT}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_RASPBERRY} ${SDLTTF_ROOT})
RASPBERRY_DEBUG_COMMAND(make SDLTTF)

DKSETPATH(${SDLTTF_ROOT}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDLTTF_SUPPORT_WEBP=OFF ${SDL2_RASPBERRY} ${SDLTTF_ROOT})
RASPBERRY_RELEASE_COMMAND(make SDLTTF)
