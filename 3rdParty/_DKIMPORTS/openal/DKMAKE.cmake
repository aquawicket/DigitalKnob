### VERSION ###
DKSET(OPENAL_VERSION 1.15.1)
DKSET(OPENAL ${3RDPARTY}/openal-${OPENAL_VERSION})


### INSTALL ###
## https://www.openal-soft.org/openal-releases/openal-soft-${OPENAL_VERSION}.tar.bz2
DKINSTALL(https://www.openal-soft.org/openal-releases/openal-soft-${OPENAL_VERSION}.tar.bz2 openal openal-${OPENAL_VERSION})


### LINK ###
IF(WIN)
	DKDEFINE(__WINDOWS_MM__)
	LIST(APPEND WIN_LIBS winmm.lib)
ENDIF()
DKINCLUDE(${OPENAL}/include)
DKINCLUDE(${OPENAL}/include/AL)
DKDEFINE(AL_LIBTYPE_STATIC)
FILE(REMOVE ${OPENAL}/include/AL/stdint.h)
FILE(REMOVE ${OPENAL}/include/AL/inttypes.h)
WIN_DEBUG_LIB(${OPENAL}/${OS}/Debug/OpenAL32.lib)
WIN_RELEASE_LIB(${OPENAL}/${OS}/Release/OpenAL32.lib)
APPLE_DEBUG_LIB(${OPENAL}/${OS}/${DEBUG}/libopenal.a)
APPLE_RELEASE_LIB(${OPENAL}/${OS}/${RELEASE}/libopenal.a)
LINUX_DEBUG_LIB(${OPENAL}/${OS}/Debug/libopenal.a)
LINUX_RELEASE_LIB(${OPENAL}/${OS}/Release/libopenal.a)


### COMPILE ###
DKSETPATH(${OPENAL}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /DAL_LIBTYPE_STATIC" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DLIBTYPE=STATIC -DEXAMPLES=OFF -DFORCE_STATIC_VCRT=ON ${OPENAL})
WIN32_VS_DEBUG(openal OpenAL.sln OpenAL32)
WIN32_VS_RELEASE(openal OpenAL.sln OpenAL32)

DKSETPATH(${OPENAL}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /DAL_LIBTYPE_STATIC" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DLIBTYPE=STATIC -DEXAMPLES=OFF -DFORCE_STATIC_VCRT=ON ${OPENAL})
WIN64_VS_DEBUG(openal OpenAL.sln OpenAL32)
WIN64_VS_RELEASE(openal OpenAL.sln OpenAL32)

DKSETPATH(${OPENAL}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DLIBTYPE=STATIC -DEXAMPLES=OFF -DFORCE_STATIC_VCRT=ON ${OPENAL})
MAC_XCODE_DEBUG(openal openal)
MAC_XCODE_RELEASE(openal openal)

DKSETPATH(${OPENAL}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DLIBTYPE=STATIC -DEXAMPLES=OFF -DFORCE_STATIC_VCRT=ON ${OPENAL})
LINUX_DEBUG_COMMAND(make)

DKSETPATH(${OPENAL}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DLIBTYPE=STATIC -DEXAMPLES=OFF -DFORCE_STATIC_VCRT=ON ${OPENAL})
LINUX_RELEASE_COMMAND(make)