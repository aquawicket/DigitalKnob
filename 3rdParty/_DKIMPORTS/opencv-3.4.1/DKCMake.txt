DKDEPEND(libjpeg-turbo-1.5.3)
DKDEPEND(tiff-4.0.3)
DKDEPEND(libpng-1.7.0beta34)

### INSTALL ###
DKINSTALL(http://digitalknob.com/Download/Libs/opencv-3.4.1.zip opencv-3.4.1)
DKSET(OPENCV ${3RDPARTY}/opencv-3.4.1)


### LINK ###
DKINCLUDE(${OPENCV})
DKINCLUDE(${OPENCV}/modules/core/include)
DKINCLUDE(${OPENCV}/modules/videoio/include)
DKINCLUDE(${OPENCV}/${OS})
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/opencv_core341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/opencv_core341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/opencv_imgcodecs341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/opencv_imgcodecs341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/opencv_imgproc341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/opencv_imgproc341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/opencv_videoio341d.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/opencv_videoio341.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/ia32/ippicvmt.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/ippicv/ippicv_win/lib/ia32/ippicvmt.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/Debug/libjasperd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/Release/libjasper.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/Debug/ippiwd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/Release/ippiw.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/Debug/libwebpd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/Release/libwebp.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/Debug/ittnotifyd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/Release/ittnotify.lib)
WIN_DEBUG_LIB(${OPENCV}/${OS}/3rdparty/lib/Debug/IlmImfd.lib)
WIN_RELEASE_LIB(${OPENCV}/${OS}/3rdparty/lib/Release/IlmImf.lib)
APPLE_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/libopencv_core.a)
APPLE_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/libopencv_core.a)
LINUX_DEBUG_LIB(${OPENCV}/${OS}/${DEBUG}/lib/libopencv_core.a)
LINUX_RELEASE_LIB(${OPENCV}/${OS}/${RELEASE}/lib/libopencv_core.a)
ANDROID_DEBUG_LIB(${OPENCV}/${OS}/lib/${DEBUG}/obj/local/armeabi-v7a/libopencv_core341d.a)
ANDROID_RELEASE_LIB(${OPENCV}/${OS}/lib/${RELEASE}/obj/local/armeabi-v7a/libopencv_core341.a)

LIST(APPEND WIN_LIBS vfw32.lib)

### COMPILE ###
DKSETPATH(${OPENCV}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} "-DCMAKE_C_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF ${OPENCV})
WIN32_VS_DEBUG(opencv-3.4.1 OpenCV.sln)
WIN32_VS_RELEASE(opencv-3.4.1 OpenCV.sln)

DKSETPATH(${OPENCV}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${X64GENERATOR} "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DBUILD_SHARED_LIBS=OFF ${OPENCV})
WIN64_VS_DEBUG(opencv-3.4.1 OpenCV.sln opencv_core)
WIN64_VS_RELEASE(opencv-3.4.1 OpenCV.sln opencv_core)

DKSETPATH(${OPENCV}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DBUILD_SHARED_LIBS=OFF ${OPENCV})
MAC64_XCODE_DEBUG(opencv-3.4.1 opencv_core)
MAC64_XCODE_RELEASE(opencv-3.4.1 opencv_core)

DKSETPATH(${OPENCV}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DBUILD_SHARED_LIBS=OFF ${OPENCV})
IOS_XCODE_DEBUG(opencv-3.4.1 opencv_core)
IOS_XCODE_RELEASE(opencv-3.4.1 opencv_core)

DKSETPATH(${OPENCV}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DBUILD_SHARED_LIBS=OFF ${OPENCV})
IOSSIM_XCODE_DEBUG(opencv-3.4.1 opencv_core)
IOSSIM_XCODE_RELEASE(opencv-3.4.1 opencv_core)

DKSETPATH(${OPENCV}/${OS}/${DEBUG})
LINUX32_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC -m32 ${OPENCV})
LINUX32_DEBUG_COMMAND(make opencv_core)

DKSETPATH(${OPENCV}/${OS}/${RELEASE})
LINUX32_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC -m32 ${OPENCV})
LINUX32_RELEASE_COMMAND(make opencv_core)

DKSETPATH(${OPENCV}/${OS}/${DEBUG})
LINUX64_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
LINUX64_DEBUG_COMMAND(make opencv_core)

DKSETPATH(${OPENCV}/${OS}/${RELEASE})
LINUX64_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=OFF -DCMAKE_C_FLAGS=-fPIC ${OPENCV})
LINUX64_RELEASE_COMMAND(make opencv_core)

ANDROID_NDK_DEBUG(opencv-3.4.1)
ANDROID_NDK_RELEASE(opencv-3.4.1)