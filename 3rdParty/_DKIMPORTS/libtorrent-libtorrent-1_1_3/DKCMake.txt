### DEPENDS ###
DKDEPEND(boost_1_57_0 Boost_System)
DKDEPEND(openssl-1.0.2h-vs2015)


### INSTALL ###
## DKINSTALL(www.internet.com/libtorrent-libtorrent-1_1_3.zip libtorrent-libtorrent-1_1_3) ## find an online link
## DKINSTALL(${DKWEB}/Download/libtorrent-libtorrent-1_1_3.zip libtorrent-libtorrent-1_1_3)
DKSET(TORRENT ${3RDPARTY}/libtorrent-libtorrent-1_1_3)


### LINK ###
DKINCLUDE(${TORRENT}/include)
WIN_DEBUG_LIB(${TORRENT}/${OS}/Debug/torrent-rasterbar.lib)
WIN_RELEASE_LIB(${TORRENT}/${OS}/Release/torrent-rasterbar.lib)
MAC_DEBUG_LIB(${TORRENT}/${OS}/lib/${DEBUG}/libtorrent.a)
MAC_RELEASE_LIB(${TORRENT}/${OS}/lib/${RELEASE}/libtorrent.a)
IOSSIM_DEBUG_LIB(${TORRENT}/${OS}/${DEBUG}/lib/.libs/libtorrent.a)
IOSSIM_RELEASE_LIB(${TORRENT}/${OS}/${RELEASE}/lib/.libs/libtorrent.a)
LINUX_DEBUG_LIB(${TORRENT}/${OS}/Debug/libtorrent.a)
LINUX_RELEASE_LIB(${TORRENT}/${OS}/Release/libtorrent.a)
ANDROID_DEBUG_LIB(${TORRENT}/${OS}/Debug/obj/local/armeabi-v7a/libtorrent.a)
ANDROID_RELEASE_LIB(${TORRENT}/${OS}/Release/obj/local/armeabi-v7a/libtorrent.a)


### COMPILE ###
DKSETPATH(${TORRENT}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DTEST /DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -Dshared=OFF -Dunicode=OFF -Dstatic_runtime=ON -DOPENSSL_ROOT_DIR=${OPENSSL} -DBOOST_ROOT=${BOOST} -DBOOST_LIBRARYDIR=${BOOST}/win32/lib ${TORRENT})
WIN32_VS_DEBUG(libtorrent-libtorrent-1_1_3 libtorrent.sln torrent-rasterbar)
WIN32_VS_RELEASE(libtorrent-libtorrent-1_1_3 libtorrent.sln torrent-rasterbar)

DKSETPATH(${TORRENT}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${TORRENT})
WIN64_VS_DEBUG(libtorrent-master libtorrent.sln torrent)
WIN64_VS_RELEASE(libtorrent-master libtorrent.sln torrent)

DKSETPATH(${TORRENT}/${OS})
MAC64_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 ${TORRENT})
MAC64_XCODE_DEBUG(libtorrent-master libtorrent)
MAC64_XCODE_RELEASE(libtorrent-master libtorrent)

DKSETPATH(${TORRENT}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS ${TORRENT})
IOS_XCODE_DEBUG(libtorrent-master libtorrent)
IOS_XCODE_RELEASE(libtorrent-master libtorrent)

DKSETPATH(${TORRENT}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR ${TORRENT})
IOSSIM_XCODE_DEBUG(libtorrent-master libtorrent)
IOSSIM_XCODE_RELEASE(libtorrent-master libtorrent)

DKSETPATH(${TORRENT}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC ${TORRENT})
LINUX_DEBUG_COMMAND(make torrent)

DKSETPATH(${TORRENT}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC ${TORRENT})
LINUX_RELEASE_COMMAND(make torrent)

ANDROID_NDK_DEBUG(libtorrent-master)
ANDROID_NDK_RELEASE(libtorrent-master)