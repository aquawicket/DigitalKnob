# http://%library_name%_website.com
#
# http://www.%library_name%.com/downloads/%library_name%-1.0.0.zip

### DEPENDS ###
#DKDEPEND(libname)


### VERSION ###
DKSET(%LIBRARY_NAME%_VERSION 1.0.0)
DKSET(%LIBRARY_NAME%_NAME %library_name%-${%LIBRARY_NAME%_VERSION})
DKSET(%LIBRARY_NAME%_DL http://www.%library_name%.com/downloads/${%LIBRARY_NAME%_NAME}.zip)
DKSET(%LIBRARY_NAME% ${3RDPARTY}/${%LIBRARY_NAME%_NAME})


### INSTALL ###
DKINSTALL(${%LIBRARY_NAME%_DL} %library_name% ${%LIBRARY_NAME%})


### LINK ###
DKINCLUDE(${%LIBRARY_NAME%}/include)
DKINCLUDE(${%LIBRARY_NAME%}/${OS})
WIN_DEBUG_LIB(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR}/%library_name%d.lib)
WIN_RELEASE_LIB(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR}/%library_name%.lib)
APPLE_DEBUG_LIB(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR}/lib%library_name%d.a)
APPLE_RELEASE_LIB(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR}/lib%library_name%.a)
LINUX_DEBUG_LIB(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR}/lib%library_name%d.a)
LINUX_RELEASE_LIB(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR}/lib%library_name%.a)
RASPBERRY_DEBUG_LIB(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR}/lib%library_name%d.a)
RASPBERRY_RELEASE_LIB(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR}/lib%library_name%.a)
ANDROID_DEBUG_LIB(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR}/lib%library_name%d.a)
ANDROID_RELEASE_LIB(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR}/lib%library_name%.a)


### COMPILE ###
WIN_PATH(${%LIBRARY_NAME%}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} ${%LIBRARY_NAME%})
WIN64_COMMAND(${DKCMAKE_WIN64} ${%LIBRARY_NAME%})
WIN_VS(${%LIBRARY_NAME%_NAME} %library_name%.sln %library_name%)


MAC_PATH(${%LIBRARY_NAME%}/${OS})
MAC32_COMMAND(${DKCMAKE_MAC32} ${%LIBRARY_NAME%})
MAC64_COMMAND(${DKCMAKE_MAC64} ${%LIBRARY_NAME%})
MAC_XCODE(${%LIBRARY_NAME%_NAME} %library_name%)


IOS_PATH(${%LIBRARY_NAME%}/${OS})
IOS32_COMMAND(${DKCMAKE_IOS32} ${%LIBRARY_NAME%})
IOS64_COMMAND(${DKCMAKE_IOS64} ${%LIBRARY_NAME%})
IOS_XCODE(${%LIBRARY_NAME%_NAME} %library_name%)


IOSSIM_PATH(${%LIBRARY_NAME%}/${OS})
IOSSIM32_COMMAND(${DKCMAKE_IOSSIM32} ${%LIBRARY_NAME%})
IOSSIM64_COMMAND(${DKCMAKE_IOSSIM64} ${%LIBRARY_NAME%})
IOSSIM_XCODE(${%LIBRARY_NAME%_NAME} %library_name%)


LINUX_DEBUG_PATH(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${DKCMAKE_LINUX_DEBUG} ${%LIBRARY_NAME%})
LINUX_DEBUG_COMMAND(make %library_name%)

LINUX_RELEASE_PATH(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${DKCMAKE_LINUX_RELEASE} ${%LIBRARY_NAME%})
LINUX_RELEASE_COMMAND(make %library_name%)


RASPBERRY_DEBUG_PATH(${%LIBRARY_NAME%}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${DKCMAKE_RASPBERRY_DEBUG} ${%LIBRARY_NAME%})
RASPBERRY_DEBUG_COMMAND(make %library_name%)

RASPBERRY_RELEASE_PATH(${%LIBRARY_NAME%}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${DKCMAKE_RASPBERRY_RELEASE} ${%LIBRARY_NAME%})
RASPBERRY_RELEASE_COMMAND(make %library_name%)


##ANDROID_NDK(${%LIBRARY_NAME%_NAME})
ANDROID_PATH(${%LIBRARY_NAME%}/${OS})
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} ${%LIBRARY_NAME%})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} ${%LIBRARY_NAME%})
ANDROID_VS(${%LIBRARY_NAME%_NAME} %library_name%.sln %library_name%)
