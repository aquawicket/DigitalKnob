#!/usr/bin/cmake -P
if(NOT EXISTS "$ENV{DKCMAKE_FUNCTIONS_DIR_}")
	set(ENV{DKCMAKE_FUNCTIONS_DIR_} "../../../DKCMake/functions/")
endif()
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")


dk_load(dk_builder)
# https://github.com/mccdo/osgbullet


### DEPEND ###
dk_depend(bullet3)
dk_depend(osgworks)


### IMPORT ###
#dk_import(https://github.com/mccdo/osgbullet.git)
dk_import(https://github.com/mccdo/osgbullet/archive/refs/heads/master.zip)


### LINK ###
dk_define(OSGBULLET_STATIC)
dk_include(${OSGBULLET}/include)

dk_enable(ALL_LIBS)
if(ALL_LIBS)
	dk_enable(osgbCollision)
	dk_enable(osgbDynamics)
	dk_enable(osgbInteraction)
	dk_enable(osgdb_osgbdynamics)
	dk_enable(osgdb_sgb)
endif()
if(osgbCollision)
	dk_define(OSGBCOLLISION_LIBRARY)	
	ANDROID_dk_libDebug(${OSGBULLET_DEBUG_DIR}/libosgbCollision.a)
	ANDROID_dk_libRelease(${OSGBULLET_RELEASE_DIR}/libosgbCollision.a)
	APPLE_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/libosgbCollision.a)
	APPLE_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/libosgbCollision.a)
	EMSCRIPTEN_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbCollision.a)
	EMSCRIPTEN_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbCollision.a)
	LINUX_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbCollision.a)
	LINUX_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbCollision.a)
	Windows_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgbCollisiond.lib)
	Windows_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgbCollision.lib)
endif()
if(osgbDynamics)
	dk_define(OSGBDYNAMICS_LIBRARY)
	ANDROID_dk_libDebug(${OSGBULLET_DEBUG_DIR}/libosgbDynamics.a)
	ANDROID_dk_libRelease(${OSGBULLET_RELEASE_DIR}/libosgbDynamics.a)
	APPLE_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/libosgbDynamics.a)
	APPLE_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/libosgbDynamics.a)
	EMSCRIPTEN_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbDynamics.a)
	EMSCRIPTEN_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbDynamics.a)
	LINUX_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbDynamics.a)
	LINUX_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbDynamics.a)
	Windows_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgbDynamicsd.lib)
	Windows_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgbDynamics.lib)
endif()
if(osgbInteraction)
	dk_define(OSGBINTERACTION_LIBRARY)
	ANDROID_dk_libDebug(${OSGBULLET_DEBUG_DIR}/libosgbInteraction.a)
	ANDROID_dk_libRelease(${OSGBULLET_RELEASE_DIR}/libosgbInteraction.a)
	APPLE_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/libosgbInteraction.a)
	APPLE_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/libosgbInteraction.a)
	EMSCRIPTEN_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbInteraction.a)
	EMSCRIPTEN_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbInteraction.a)
	LINUX_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/libosgbInteraction.a)
	LINUX_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/libosgbInteraction.a)
	Windows_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgbInteractiond.lib)
	Windows_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgbInteraction.lib)
endif()
if(osgdb_osgbdynamics)
	ANDROID_dk_libDebug(${OSGBULLET_DEBUG_DIR}/libosgdb_osgbdynamics.a)
	ANDROID_dk_libRelease(${OSGBULLET_RELEASE_DIR}/libosgdb_osgbdynamics.a)
	APPLE_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgdb_osgbdynamics.a)
	APPLE_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgdb_osgbdynamics.a)
	EMSCRIPTEN_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/osgdb_osgbdynamics.a)
	EMSCRIPTEN_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/osgdb_osgbdynamics.a)
	LINUX_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/osgdb_osgbdynamics.a)
	LINUX_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/osgdb_osgbdynamics.a)
	Windows_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgdb_osgbdynamicsd.lib)
	Windows_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgdb_osgbdynamics.lib)
endif()
if(osgdb_sgb)
	ANDROID_dk_libDebug(${OSGBULLET_DEBUG_DIR}/libosgdb_sgb.a)
	ANDROID_dk_libRelease(${OSGBULLET_RELEASE_DIR}/libosgdb_sgb.a)
	APPLE_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgdb_sgb.a)
	APPLE_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgdb_sgb.a)
	EMSCRIPTEN_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/osgdb_sgb.a)
	EMSCRIPTEN_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/osgdb_sgb.a)
	LINUX_dk_libDebug(${OSGBULLET_DEBUG_DIR}/lib/osgdb_sgb.a)
	LINUX_dk_libRelease(${OSGBULLET_RELEASE_DIR}/lib/osgdb_sgb.a)
	Windows_dk_libDebug(${OSGBULLET}/${Target_Tuple}/lib/${DEBUG_DIR}/osgdb_sgbd.lib)
	Windows_dk_libRelease(${OSGBULLET}/${Target_Tuple}/lib/${RELEASE_DIR}/osgdb_sgb.lib)
endif()


### GENERATE ###
ANDROID_dk_configure			(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3}/${Target_Tuple} ${BULLET3_CMAKE})
Emscripten_Debug_dk_configure	(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_DEBUG_DIR} ${BULLET3_CMAKE})
Emscripten_Release_dk_configure	(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_RELEASE_DIR} ${BULLET3_CMAKE})
IOSSIM_dk_configure				(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3}/ios-simulator ${BULLET3_CMAKE})
IOS_dk_configure				(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3}/ios ${BULLET3_CMAKE})
Linux_Debug_dk_configure		(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_DEBUG_DIR} ${BULLET3_CMAKE})
Linux_Release_dk_configure		(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_RELEASE_DIR} ${BULLET3_CMAKE})
MAC_dk_configure				(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3}/${Target_Tuple} ${BULLET3_CMAKE})
Raspberry_Debug_dk_configure	(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_DEBUG_DIR} ${BULLET3_CMAKE})
Raspberry_Release_dk_configure	(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3_RELEASE_DIR} ${BULLET3_CMAKE})
Windows_dk_configure				(${OSGBULLET} ${OPENSCENEGRAPH_CMAKE} ${OSGWORKS_CMAKE} -DOSGBULLET_BUILD_APPLICATIONS=OFF -DOSGBULLET_BUILD_EXAMPLES=OFF -DOSGBULLET_INSTALL_DATA=OFF "-DBulletInstallType=Source And Build Tree" -DBulletSourceRoot=${BULLET3} -DBulletBuildRoot=${BULLET3}/${Target_Tuple} ${BULLET3_CMAKE})


### COMPILE ###
dk_build(${OSGBULLET})
