##DKDEPEND(android-ndk-r10e)
DKDEPEND(android-ndk-r16b)

IF(NOT UNIX)
	DKDEPEND(mingw32)
	DKDEPEND(msys)
ENDIF()


### INSTALL ###
DKINSTALL(${DKONLINE}/Libs/Boost-for-Android-master.zip Boost-for-Android-master)
DKSET(BOOST ${3RDPARTY}/Boost-for-Android-master)

##FIXME: this get's overwritten
IF(EXISTS ${BOOST}/boost_1_66_0)
	###
ELSE()
	DKSETPATH(${BOOST})
	DKDOWNLOAD(${DKONLINE}/Libs/boost_1_66_0.tar.bz2)
ENDIF()

### LINK ###
#ANDROID_INCLUDE(${BOOST}/build/include/boost-1_66)

IF(NOT UNIX)
IF(Boost_Chrono)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_DateTime)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_Filesystem)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_System)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_Thread)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-mt-a32-1_66.a)
ENDIF()
ENDIF()

IF(UNIX)
IF(APPLE)
IF(Boost_Chrono)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-darwin-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-darwin-mt-a32-1_66.a)
ENDIF()

IF(Boost_DateTime)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-darwin-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-darwin-mt-a32-1_66.aa)
ENDIF()

IF(Boost_Filesystem)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-darwin-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-darwin-mt-a32-1_66.a)
ENDIF()

IF(Boost_System)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-darwin-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-darwin-mt-a32-1_66.a)
ENDIF()

IF(Boost_Thread)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-darwin-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-darwin-mt-a32-1_66.a)
ENDIF()
ENDIF()
ENDIF()

IF(UNIX)
IF(NOT APPLE)
IF(Boost_Chrono)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_chrono-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_DateTime)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_date_time-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_Filesystem)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_filesystem-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_System)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_system-clang-mt-a32-1_66.a)
ENDIF()

IF(Boost_Thread)
	ANDROID_DEBUG_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-mt-a32-1_66.a)
	ANDROID_RELEASE_LIB(${BOOST}/build/out/armeabi-v7a/lib/libboost_thread-clang-mt-a32-1_66.a)
ENDIF()
ENDIF()
ENDIF()


### COMPILE ###
IF(NOT UNIX)
ANDROID_BASH("#!/bin/bash
cd ${BOOST}
export PATH=/${MINGW32}/bin:$PATH\;
export PATH=/${MSYS}/bin:$PATH\;
./build-android.sh ${ANDROID_NDK}")
ENDIF()

IF(UNIX)
DKSETPATH(${BOOST})
SET(arg ./build-android.sh ${ANDROID_NDK})
SET(arg2 ${arg} ${ARGN}) # Merge them together
MESSAGE("COMMAND-> ${arg2}")
EXECUTE_PROCESS(COMMAND ${arg2} WORKING_DIRECTORY ${BOOST})
ENDIF()
