DKDEPEND(DKSDLWindow)

### INSTALL ###
IF(NOT EXISTS ${3RDPARTY}/SDL2_gif)
	DKSETPATH(${DIGITALKNOB}/Download)
	DKDOWNLOAD(${DKWEB}/Download/Libs/gif_2_lib.zip)
	DKEXTRACT(${DIGITALKNOB}/Download/gif_2_lib.zip ${3RDPARTY})
	DKRENAME(${3RDPARTY}/SDL2 ${3RDPARTY}/SDL2_gif)
	DKCOPY(${DKIMPORTS}/SDL2_gif ${3RDPARTY}/SDL2_gif TRUE)
ENDIF()
DKSET(SDLGIF ${3RDPARTY}/SDL2_gif)
DKDEFINE(USE_SDL2_gif)


### LINK ###
DKINCLUDE(${SDLGIF})
WIN_DEBUG_LIB(${SDLGIF}/${OS}/${DEBUG}/SDL2_gif.lib)
WIN_RELEASE_LIB(${SDLGIF}/${OS}/${RELEASE}/SDL2_gif.lib)
MAC_DEBUG_LIB(${SDLGIF}/${OS}/Debug/libSDL2_gif.a)
MAC_RELEASE_LIB(${SDLGIF}/${OS}/Release/libSDL2_gif.a)
IOSSIM_DEBUG_LIB(${SDLGIF}/${OS}/Debug-iphonesimulator/libSDL2_gif.a)
IOSSIM_RELEASE_LIB(${SDLGIF}/${OS}/Release-iphonesimulator/libSDL2_gif.a)
LINUX_DEBUG_LIB(${SDLGIF}/${OS}/${DEBUG}/libSDL2_gif.a)
LINUX_RELEASE_LIB(${SDLGIF}/${OS}/${RELEASE}/libSDL2_gif.a)
ANDROID_DEBUG_LIB(${SDLGIF}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libSDL2_gif.a)
ANDROID_RELEASE_LIB(${SDLGIF}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libSDL2_gif.a)


### COMPILE ###
DKSETPATH(${SDLGIF}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/SDL2.lib ${SDLGIF})
WIN32_VS_DEBUG(SDL2_gif SDL2_gif.sln SDL2_gif)
WIN32_VS_RELEASE(SDL2_gif SDL2_gif.sln SDL2_gif)

DKSETPATH(${SDLGIF}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/SDL2.lib ${SDLGIF})
WIN64_VS_DEBUG(SDL2_gif SDL2_gif.sln SDL2_gif)
WIN64_VS_RELEASE(SDL2_gif SDL2_gif.sln SDL2_gif)

DKSETPATH(${SDLGIF}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SDLGIF})
MAC_XCODE_DEBUG(SDL2_gif SDL2_gif)
MAC_XCODE_RELEASE(SDL2_gif SDL2_gif)

DKSETPATH(${SDLGIF}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SDLGIF})
IOSSIM_XCODE_DEBUG(SDL2_gif SDL2_gif)
IOSSIM_XCODE_RELEASE(SDL2_gif SDL2_gif)

DKSETPATH(${SDLGIF}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Debug/libSDL2.a ${SDLGIF})
LINUX_DEBUG_COMMAND(make)

DKSETPATH(${SDLGIF}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SDLGIF})
LINUX_RELEASE_COMMAND(make)

ANDROID_NDK_DEBUG(SDL2_gif)
ANDROID_NDK_RELEASE(SDL2_gif)