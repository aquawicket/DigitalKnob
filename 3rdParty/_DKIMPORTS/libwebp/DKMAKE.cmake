## http://www.libwebp.org/pub/webp/libwebp.html

### VERSION ###
DKSET(WEBP_MAJOR_VERSION 1)
DKSET(WEBP_MINOR_VERSION 0)
DKSET(WEBP_BUILD_VERSION 3)
DKSET(WEBP_VERSION ${WEBP_MAJOR_VERSION}.${WEBP_MINOR_VERSION}.${WEBP_BUILD_VERSION})
DKSET(WEBP_NAME libwebp-${WEBP_VERSION})
DKSET(WEBP ${3RDPARTY}/${WEBP_NAME})


### INSTALL ###
## https://github.com/webmproject/libwebp/archive/refs/tags/v1.0.3.zip
DKINSTALL(https://github.com/webmproject/libwebp/archive/refs/tags/v${WEBP_VERSION}.zip libwebp ${WEBP_NAME})


### DKPLUGINS LINK ###
DKINCLUDE(${WEBP})
DKINCLUDE(${WEBP}/${OS})
DKINCLUDE(${WEBP}/${OS}/${RELEASE_DIR})
ANDROID_INCLUDE(${WEBP}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${WEBP}/${OS}/${DEBUG_DIR}/libwebp.lib)
WIN_RELEASE_LIB(${WEBP}/${OS}/${RELEASE_DIR}/libwebp.lib)
APPLE_DEBUG_LIB(${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a)
APPLE_RELEASE_LIB(${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
LINUX_DEBUG_LIB(${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a)
LINUX_RELEASE_LIB(${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
RASPBERRY_DEBUG_LIB(${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a)
RASPBERRY_RELEASE_LIB(${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
ANDROID_DEBUG_LIB(${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a)
ANDROID_RELEASE_LIB(${WEBP}/${OS}/${RELEASE_DIR}/.a)


#TODO
### 3RDPARTY LINK ###
#DKSET(WEBP_WIN -DWEBP_INCLUDE_DIR=${WEBP} -DWEBP_LIBRARY_DEBUG=${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.lib -DWEBP_LIBRARY_RELEASE=${WEBP}/${OS}/${RELEASE_DIR}/libwebp.lib)
#DKSET(WEBP_APPLE -DWEBP_INCLUDE_DIR=${WEBP} -DWEBP_LIBRARY_DEBUG=${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a -DWEBP_LIBRARY_RELEASE=${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
#DKSET(WEBP_LINUX -DWEBP_INCLUDE_DIR=${WEBP} -DWEBP_LIBRARY_DEBUG=${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a -DWEBP_LIBRARY_RELEASE=${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
#DKSET(WEBP_RASPBERRY -DWEBP_INCLUDE_DIR=${WEBP} -DWEBP_LIBRARY_DEBUG=${WEBP}/${OS}/${DEBUG_DIR}/libwebpd.a -DWEBP_LIBRARY_RELEASE=${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
#DKSET(WEBP_ANDROID -DWEBP_INCLUDE_DIR=${WEBP} -DWEBP_LIBRARY_DEBUG=${WEBP}/${OS}/${DEBUG_DIR}/libwebp.a -DWEBP_LIBRARY_RELEASE=${WEBP}/${OS}/${RELEASE_DIR}/libwebp.a)
	

### COMPILE ###
WIN_PATH(${WEBP}/${OS})
WIN32_COMMAND(${DKCMAKE_WIN32} ${WEBP})
WIN64_COMMAND(${DKCMAKE_WIN64} ${WEBP})
WIN_VS(${WEBP_NAME} libwebp.sln webp)


MAC_PATH(${WEBP}/${OS})
MAC32_COMMAND(${DKCMAKE_MAC32} ${WEBP})
MAC64_COMMAND(${DKCMAKE_MAC64} ${WEBP})
MAC_XCODE(${WEBP_NAME} webp)


IOS_PATH(${WEBP}/${OS})
IOS32_COMMAND(${DKCMAKE_IOS32} ${WEBP})
IOS64_COMMAND(${DKCMAKE_IOS64} ${WEBP})
IOS_XCODE(${WEBP_NAME} webp)


IOSSIM_PATH(${WEBP}/${OS})
IOSSIM32_COMMAND(${DKCMAKE_IOSSIM32} ${WEBP})
IOSSIM64_COMMAND(${DKCMAKE_IOSSIM64} ${WEBP})
IOSSIM_XCODE(${WEBP_NAME} webp)


LINUX_DEBUG_PATH(${WEBP}/${OS}/${DEBUG_DIR})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${WEBP})
LINUX_DEBUG_COMMAND(make all)

LINUX_RELEASE_PATH(${WEBP}/${OS}/${RELEASE_DIR})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${WEBP})
LINUX_RELEASE_COMMAND(make all)


RASPBERRY_DEBUG_PATH(${WEBP}/${OS}/${DEBUG_DIR})
RASPBERRY_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG ${WEBP})
RASPBERRY_DEBUG_COMMAND(make all)

RASPBERRY_RELEASE_PATH(${WEBP}/${OS}/${RELEASE_DIR})
RASPBERRY_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE ${WEBP})
RASPBERRY_RELEASE_COMMAND(make all)


##ANDROID_NDK_DEBUG(${WEBP_NAME})
##ANDROID_NDK_RELEASE(${WEBP_NAME})

ANDROID_PATH(${WEBP}/${OS})
ANDROID32_COMMAND(${DKCMAKE_ANDROID32} ${WEBP})
ANDROID64_COMMAND(${DKCMAKE_ANDROID64} ${WEBP})
ANDROID_VS(${WEBP_NAME} libwebp.sln webp)