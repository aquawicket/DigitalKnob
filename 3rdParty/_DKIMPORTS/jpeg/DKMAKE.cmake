### VERSION ###
DKSET(JPEG_VERSION 6b)

### INSTALL ###
## https://www.sac.sk/download/graph/jpegsr6b.zip
DKINSTALL(https://www.sac.sk/download/graph/jpegsr${JPEG_VERSION}.zip jpeg jpeg-${JPEG_VERSION})
DKSET(JPEG ${3RDPARTY}/jpeg-${JPEG_VERSION})


### LINK ###
DKINCLUDE(${JPEG})
DKINCLUDE(${JPEG}/${OS})
DKINCLUDE(${JPEG}/${OS}/${RELEASE})
ANDROID_INCLUDE(${JPEG}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_LIB(${JPEG}/${OS}/${DEBUG}/jpeg-static.lib)
WIN_RELEASE_LIB(${JPEG}/${OS}/${RELEASE}/jpeg-static.lib)
APPLE_DEBUG_LIB(${JPEG}/${OS}/${DEBUG}/libjpeg-static.a)
APPLE_RELEASE_LIB(${JPEG}/${OS}/${RELEASE}/libjpeg-static.a)
LINUX_DEBUG_LIB(${JPEG}/${OS}/${DEBUG}/libjpeg-static.a)
LINUX_RELEASE_LIB(${JPEG}/${OS}/${RELEASE}/libjpeg-static.a)
ANDROID_DEBUG_LIB(${JPEG}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libjpeg.a)
ANDROID_RELEASE_LIB(${JPEG}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libjpeg.a)


### COMPILE ###
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -S ${JPEG} -B ${JPEG}/${OS})
WIN32_VS_DEBUG(jpeg-${JPEG_VERSION} jpeg.sln jpeg-static)
WIN32_VS_RELEASE(jpeg-${JPEG_VERSION} jpeg.sln jpeg-static)


WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /DWIN64 /D_WINDOWS /W3 /nologo" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -S ${JPEG} -B ${JPEG}/${OS})
WIN64_VS_DEBUG(jpeg-${JPEG_VERSION} jpeg.sln jpeg-static)
WIN64_VS_RELEASE(jpeg-${JPEG_VERSION} jpeg.sln jpeg-static)


MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -S ${JPEG} -B ${JPEG}/${OS})
MAC_XCODE_DEBUG(jpeg-${JPEG_VERSION} jpeg-static)
MAC_XCODE_RELEASE(jpeg-${JPEG_VERSION} jpeg-static)


IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -S ${JPEG} -B ${JPEG}/${OS})
IOS_XCODE_DEBUG(jpeg-${JPEG_VERSION} jpeg-static)
IOS_XCODE_RELEASE(jpeg-${JPEG_VERSION} jpeg-static)


IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -S ${JPEG} -B ${JPEG}/${OS})
IOSSIM_XCODE_DEBUG(jpeg-${JPEG_VERSION} jpeg-static)
IOSSIM_XCODE_RELEASE(jpeg-${JPEG_VERSION} jpeg-static)


LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -S ${JPEG} -B ${JPEG}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(make jpeg-static)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -S ${JPEG} -B ${JPEG}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(make jpeg-static)


ANDROID_NDK_DEBUG(jpeg-${JPEG_VERSION})
ANDROID_NDK_RELEASE(jpeg-${JPEG_VERSION})