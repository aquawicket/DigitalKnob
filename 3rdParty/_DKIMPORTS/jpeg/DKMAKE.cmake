#!/usr/bin/cmake -P
if(NOT DKCMAKE_FUNCTIONS_DIR_)
	set(DKCMAKE_FUNCTIONS_DIR_ ${CMAKE_SOURCE_DIR}/../../../DKCMake/functions/)
endif()
include(${DKCMAKE_FUNCTIONS_DIR_}DK.cmake)


dk_load(dk_builder)
# http://www.ijg.org/
# https://www.ijg.org/files/jpegsr9d.zip


### IMPORT ###
dk_import(https://www.ijg.org/files/jpegsr9d.zip)


### LINK ###
dk_include			(${JPEG}										JPEG_INCLUDE_DIR)
dk_include			(${JPEG}/${triple}									JPEG_INCLUDE_DIR2)
dk_include			(${JPEG}/${triple}/${RELEASE_DIR})
ANDROID_dk_include	(${JPEG}/${triple}/${BUILD_TYPE}/jni)
UNIX_dk_libDebug	(${JPEG}/${triple}/${DEBUG_DIR}/libjpeg-static.a	JPEG_LIBRARY_DEBUG)
UNIX_dk_libRelease	(${JPEG}/${triple}/${RELEASE_DIR}/libjpeg-static.a	JPEG_LIBRARY_RELEASE)
WIN_dk_libDebug		(${JPEG}/${triple}/${DEBUG_DIR}/jpeg-static.lib		JPEG_LIBRARY_DEBUG)
WIN_dk_libRelease	(${JPEG}/${triple}/${RELEASE_DIR}/jpeg-static.lib	JPEG_LIBRARY_RELEASE)


### 3RDPARTY LINK ###
ANDROID_dk_set		(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY_DEBUG=${JPEG_LIBRARY_DEBUG} -DJPEG_LIBRARY_RELEASE=${JPEG_LIBRARY_RELEASE})
APPLE_dk_set		(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY=${JPEG_LIBRARY_RELEASE})
EMSCRIPTEN_dk_set	(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY=${JPEG_LIBRARY_RELEASE})
LINUX_dk_set		(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY=${JPEG_LIBRARY_RELEASE})
RASPBERRY_dk_set	(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY=${JPEG_LIBRARY_RELEASE})
WIN_dk_set			(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG_INCLUDE_DIR} -DJPEG_INCLUDE_DIR2=${JPEG_INCLUDE_DIR2} -DJPEG_LIBRARY_DEBUG=${JPEG_LIBRARY_DEBUG} -DJPEG_LIBRARY_RELEASE=${JPEG_LIBRARY_RELEASE})


### GENERATE ###
dk_configure		(${JPEG_DIR})


### COMPILE ###
dk_build			(${JPEG_DIR} jpeg-static)
