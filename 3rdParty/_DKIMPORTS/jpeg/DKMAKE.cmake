# http://www.ijg.org/
#
# https://www.ijg.org/files/jpegsr9d.zip


### VERSION ###
DKSET(JPEG_VERSION 9d)
DKSET(JPEG_NAME jpeg-${JPEG_VERSION})
DKSET(JPEG_DL http://www.ijg.org/files/jpegsr${JPEG_VERSION}.zip)
DKSET(JPEG ${3RDPARTY}/${JPEG_NAME})



### INSTALL ###
DKINSTALL(${JPEG_DL} jpeg ${JPEG})



### LINK ###
DKINCLUDE(${JPEG})
DKINCLUDE(${JPEG}/${OS})
DKINCLUDE(${JPEG}/${OS}/${RELEASE_DIR})
ANDROID_DKINCLUDE(${JPEG}/${OS}/$(BUILD_TYPE)/jni)
WIN_DEBUG_DKLIB(${JPEG}/${OS}/${DEBUG_DIR}/jpeg-static.lib)
WIN_RELEASE_DKLIB(${JPEG}/${OS}/${RELEASE_DIR}/jpeg-static.lib)
APPLE_DEBUG_DKLIB(${JPEG}/${OS}/${DEBUG_DIR}/libjpeg-static.a)
APPLE_RELEASE_DKLIB(${JPEG}/${OS}/${RELEASE_DIR}/libjpeg-static.a)
LINUX_DEBUG_DKLIB(${JPEG}/${OS}/${DEBUG_DIR}/libjpeg-static.a)
LINUX_RELEASE_DKLIB(${JPEG}/${OS}/${RELEASE_DIR}/libjpeg-static.a)
ANDROID_DEBUG_DKLIB(${JPEG}/${OS}/${DEBUG_DIR}/obj/local/armeabi-v7a/libjpeg.a)
ANDROID_RELEASE_DKLIB(${JPEG}/${OS}/${RELEASE_DIR}/obj/local/armeabi-v7a/libjpeg.a)



### 3RDPARTY LINK ###
WIN_DKSET(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY_DEBUG=${JPEG}/${OS}/${DEBUG_DIR}/jpeg-static.lib -DJPEG_LIBRARY_RELEASE=${JPEG}/${OS}/${RELEASE_DIR}/jpeg-static.lib)
APPLE_DKSET(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE_DIR}/libjpeg-static.a)
LINUX_DKSET(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE_DIR}/libjpeg-static.a)
RASPBERRY_DKSET(JPEG_CMAKE -DJPEG_INCLUDE_DIR=${JPEG} -DJPEG_INCLUDE_DIR2=${JPEG}/${OS} -DJPEG_LIBRARY=${JPEG}/${OS}/${RELEASE_DIR}/libjpeg-static.a)



### COMPILE ###
DKSETPATH(${JPEG}/${BUILD_DIR})
DKQCOMMAND(${DKCMAKE_BUILD} ${JPEG})


WIN_VS(${JPEG_NAME} jpeg.sln jpeg-static)
MAC_XCODE(${JPEG_NAME} jpeg-static)
IOS_XCODE(${JPEG_NAME} jpeg-static)
IOSSIM_XCODE(${JPEG_NAME} jpeg-static)
LINUX_DKQCOMMAND(make jpeg-static)
ANDROID_VS(${JPEG_NAME} jpeg.sln jpeg-static)