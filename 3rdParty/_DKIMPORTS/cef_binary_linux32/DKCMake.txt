IF(NOT LINUX)
	RETURN()
ENDIF()

### VERSION ###
DKSET(CEF_VERSION cef_binary_81.3.3+g072a5f5+chromium-81.0.4044.138_linux32)

### INSTALL ###
DKINSTALL(https://cef-builds.spotifycdn.com/cef_binary_81.3.3%2Bg072a5f5%2Bchromium-81.0.4044.138_linux32.tar.bz2 ${CEF_VERSION})
## DKINSTALL(${DKWEB}/Download/${CEF_VERSION}.tar.bz2 ${CEF_VERSION})
DKSET(CEF ${3RDPARTY}/${CEF_VERSION})


### LINK ###
DKDEFINE(__STDC_CONSTANT_MACROS)
DKDEFINE(__STDC_FORMAT_MACROS)
DKDEFINE(PSAPI_VERSION=1)
DKDEFINE(NOMINMAX)
DKDEFINE(CEF_SANDBOX)
DKDEFINE(CEF_ATL)

LINUX_INCLUDE(${CEF})
LINUX_DEBUG_LIB(${CEF}/Debug/libcef.so)
LINUX_RELEASE_LIB(${CEF}/Release/libcef.so)
LINUX_DEBUG_LIB(${CEF}/${OS}/Debug/libcef_dll_wrapper/libcef_dll_wrapper.a)
LINUX_RELEASE_LIB(${CEF}/${OS}/Release/libcef_dll_wrapper/libcef_dll_wrapper.a)
## LINUX_DEBUG_LIB(${CEF}/Debug/cef_sandbox.a)
## LINUX_RELEASE_LIB(${CEF}/Release/cef_sandbox.a)


### COMPILE ###
DKSETPATH(${CEF}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS=-fPIC ${CEF})
LINUX_DEBUG_COMMAND(make libcef_dll_wrapper)

DKSETPATH(${CEF}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS=-fPIC ${CEF})
LINUX_RELEASE_COMMAND(make libcef_dll_wrapper)