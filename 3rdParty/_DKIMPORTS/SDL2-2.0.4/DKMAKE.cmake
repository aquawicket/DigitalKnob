## DEPRECATED - Using newr versions of SDL2.  Kept for reference
RETURN()

### INSTALL ###
## DKINSTALL(www.internet.com/SDL2-2.0.4.zip SDL2-2.0.4 SDL2-2.0.4)
DKSET(SDL ${3RDPARTY}/SDL2-2.0.4)


### LINK ###
DKINCLUDE(${SDL}/include)
ANDROID_INCLUDE(${SDL}/src)
LINUX_INCLUDE(${SDL}/${OS}/Release/include)
WIN_DEBUG_LIB(${SDL}/${OS}/${DEBUG}/SDL2.lib)
WIN_RELEASE_LIB(${SDL}/${OS}/Release/SDL2.lib)
APPLE_DEBUG_LIB(${SDL}/${OS}/${DEBUG}/libSDL2.a)
APPLE_RELEASE_LIB(${SDL}/${OS}/${RELEASE}/libSDL2.a)
LINUX_DEBUG_LIB(${SDL}/${OS}/${DEBUG}/libSDL2.a)
LINUX_RELEASE_LIB(${SDL}/${OS}/Release/libSDL2.a)
ANDROID_DEBUG_LIB(${SDL}/${OS}/${DEBUG}/obj/local/armeabi-v7a/libSDL2.so)
ANDROID_RELEASE_LIB(${SDL}/${OS}/Release/obj/local/armeabi-v7a/libSDL2.so)
LIST(APPEND WIN_LIBS winmm.lib)
LIST(APPEND WIN_LIBS imm32.lib)
LIST(APPEND WIN_LIBS version.lib)


### COMPILE ###
DKSETPATH(${SDL}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
WIN32_VS_DEBUG(SDL2-2.0.4 SDL2.sln SDL2-static)
WIN32_VS_RELEASE(SDL2-2.0.4 SDL2.sln SDL2-static)

DKSETPATH(${SDL}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_C_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /D__FLTUSED__" "-DCMAKE_C_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_C_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG /DHAVE_LIBC" -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
WIN64_VS_DEBUG(SDL2-2.0.4 SDL2.sln SDL2-static)
WIN64_VS_RELEASE(SDL2-2.0.4 SDL2.sln SDL2-static)

DKSETPATH(${SDL}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
MAC_XCODE_DEBUG(SDL2-2.0.4 SDL2-static)
MAC_XCODE_RELEASE(SDL2-2.0.4 SDL2-static)

DKSETPATH(${SDL}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL})
IOS_XCODE_DEBUG(SDL2-2.0.4 SDL2-static)
IOS_XCODE_RELEASE(SDL2-2.0.4 SDL2-static)

DKSETPATH(${SDL}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR -DIOS=ON -DDIRECTX=OFF -DSDL_JOYSTICK=OFF -DSDL_HAPTIC=OFF ${SDL})
IOSSIM_XCODE_DEBUG(SDL2-2.0.4 SDL2-static)
IOSSIM_XCODE_RELEASE(SDL2-2.0.4 SDL2-static)

DKSETPATH(${SDL}/${OS}/${DEBUG})
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_FLAGS=-fPIC -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
LINUX_DEBUG_COMMAND(make SDL2-static)

DKSETPATH(${SDL}/${OS}/Release)
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_FLAGS=-fPIC -DVIDEO_OPENGLES=OFF -DDIRECTX=OFF ${SDL})
LINUX_RELEASE_COMMAND(make SDL2-static)

ANDROID_NDK_DEBUG(SDL2-2.0.4)
ANDROID_NDK_RELEASE(SDL2-2.0.4)