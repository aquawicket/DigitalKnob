## https://www.libsdl.org/projects/smpeg/release/smpeg2-2.0.0.tar.gz

### DEPENDS ###
DKDEPEND(SDL2)

### VERSION ###
DKSET(SMPEG2_VERSION 2.0.0)

### INSTALL ###
DKINSTALL(https://www.libsdl.org/projects/smpeg/release/smpeg2-${SMPEG2_VERSION}.tar.gz smpeg2 smpeg2-${SMPEG2_VERSION})
DKSET(SMPEG2 ${3RDPARTY}/smpeg2-${SMPEG2_VERSION})


### DKPLUGINS LINK ###
DKINCLUDE(${SMPEG2}/src)
WIN_DEBUG_LIB(${SMPEG2}/${OS}/lib/Debug/libsmpeg2.lib)
WIN_RELEASE_LIB(${SMPEG2}/${OS}/lib/${RELEASE}/libsmpeg2.lib)
APPLE_DEBUG_LIB(${SMPEG2}/${OS}/lib/Debug/libsmpeg2.a)
APPLE_RELEASE_LIB(${SMPEG2}/${OS}/lib/${RELEASE}/libsmpeg2.a)
LINUX_DEBUG_LIB(${SMPEG2}/${OS}/Debug/lib/libsmpeg2.a)
LINUX_RELEASE_LIB(${SMPEG2}/${OS}/${RELEASE}/lib/libsmpeg2.a)
ANDROID_DEBUG_LIB(${SMPEG2}/${OS}/Debug/obj/local/armeabi-v7a/libSMPEG.a)
ANDROID_RELEASE_LIB(${SMPEG2}/${OS}/${RELEASE}/obj/local/armeabi-v7a/libSMPEG.a)


### 3RDPARTY LINK ###
DKSET(SMPEG2_WIN -DSMPEG_INCLUDE_DIR=${SMPEG2})
	
	
### COMPILE ###
DKSETPATH(${SMPEG2}/${OS})
WIN32_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A Win32 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo /GR /EHsc" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${SDL2_WIN} ${SMPEG2})
WIN32_VS_DEBUG(smpeg2-${SMPEG2_VERSION} SMPEG.sln SMPEG)
WIN32_VS_RELEASE(smpeg2-${SMPEG2_VERSION} SMPEG.sln SMPEG)

DKSETPATH(${SMPEG2}/${OS})
WIN64_COMMAND(${CMAKE_COMMAND} -G ${GENERATOR} -A x64 "-DCMAKE_CXX_FLAGS=/DWIN32 /D_WINDOWS /W3 /nologo" "-DCMAKE_CXX_FLAGS_DEBUG=/MTd /Od /Ob0 /Zi /RTC1 /DDEBUG /D_DEBUG" "-DCMAKE_CXX_FLAGS_RELEASE=/MT /O2 /Ob2 /DNDEBUG" ${SDL2_WIN} ${SMPEG2})
WIN64_VS_DEBUG(smpeg2-${SMPEG2_VERSION} SMPEG.sln SMPEG)
WIN64_VS_RELEASE(smpeg2-${SMPEG2_VERSION} SMPEG.sln SMPEG)

DKSETPATH(${SMPEG2}/${OS})
MAC_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SMPEG2})
MAC_XCODE_DEBUG(smpeg2-${SMPEG2_VERSION} SMPEG)
MAC_XCODE_RELEASE(smpeg2-${SMPEG2_VERSION} SMPEG)

DKSETPATH(${SMPEG2}/${OS})
IOS_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=OS -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SMPEG2})
IOS_XCODE_DEBUG(smpeg2-${SMPEG2_VERSION} SMPEG)
IOS_XCODE_RELEASE(smpeg2-${SMPEG2_VERSION} SMPEG)

DKSETPATH(${SMPEG2}/${OS})
IOSSIM_COMMAND(${CMAKE_COMMAND} -G "Xcode" -DCMAKE_TOOLCHAIN_FILE=${DKCMAKE}/iOS.cmake -DIOS_PLATFORM=SIMULATOR64 -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/${RELEASE}/libSDL2.a ${SMPEG2})
IOSSIM_XCODE_DEBUG(smpeg2-${SMPEG2_VERSION} SMPEG)
IOSSIM_XCODE_RELEASE(smpeg2-${SMPEG2_VERSION} SMPEG)

DKSETPATH(${SMPEG2}/${OS}/Debug)
LINUX_DEBUG_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_CXX_FLAGS=-Wno-narrowing -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Debug/libSDL2.a ${SMPEG2})
LINUX_DEBUG_COMMAND(make SMPEG)

DKSETPATH(${SMPEG2}/${OS}/${RELEASE})
LINUX_RELEASE_COMMAND(${CMAKE_COMMAND} -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_CXX_FLAGS=-Wno-narrowing -DSDL2_DIR=${SDL} -DSDL2_INCLUDE_DIR=${SDL}/include -DSDL2_LIBRARY=${SDL}/${OS}/Debug/libSDL2.a ${SMPEG2})
LINUX_RELEASE_COMMAND(make SMPEG)

ANDROID_NDK_DEBUG(smpeg2-${SMPEG2_VERSION})
ANDROID_NDK_RELEASE(smpeg2-${SMPEG2_VERSION})
