~! THE LIST !~    11/20/23

*******************
*** DIGITALKNOB ***
*******************

WE NEED TO BE ABLE TO BUILD DIFFERENT BRANCHES INDEPENDENTLY.    aka.   seperate directories per branch

There are currently 2 branches that implement the DOM.
1. Javascript DOM, (located in the main and Development branches)
2. C++/Javascript DOM, (located in the CPP_DOM branch)

We need to start bridging the gap between the 2 source versions.
We may need to follow the directory structure that CPP_DOM uses for each WebApi
We may want to create a new JS_DOM branch and rename CPP_DOM to CPP_JS_DOM as well

remove the hard coded need for imagemagick

Change javascript entry point file name from "/assets/app.js" to "/assets/main.js"

Move all github wiki into DK.Readme.md and remove all wiki
Remove github Wiki and create an example just like /DKPlugins/index.html
Create a fork of RmlUi with a javascript folder for the document object, then dom

Go over DKFile.js and alphabatize functions

Move all gui related javascript into DKGui.js
DK.js will have access to a C++ EventTarget
In fact, all C++ OOP structure will follow W3 javascript naming standards.

make a "raw key" to "w3 standard key translation"..    int 43 = "KeyY"    ;)
Translate all keycodes to internet w3 standards from raw code
 
*** DKNotepad ***
textarea steals key events from document
Get DKNotepad to listen for Ctrl + s
DKNotepadFile_Exit() breaks DK_Close()
Get Copy and Paste working
Remove save comfrimation and make a sparkle, or something
 

*** DKTUTORIAL ***
DK1:   DKCmake build system
DK2:   DK C++ w/ nothing
DK3:   DK C++ w/Javascript (DKDuktape)  =  OM  "Object Model" 
DK4:   DK C++ w/ javascript (DKDuktape) +  DKRml = DOM "Document Object Model"
* This is how DKTestApps should be named *

If you get DKDom as a seperate RmlUi Library, poeple might chip in.

Remodel DK/Events.cpp after javascript EventTarget by creating DK/EventTarget.h/cpp

*** Javascript ***
EventTarget is lower than Window. Use that for javascript without a document context.

ALL C++ Javascript functions now require a CPP_ prefix
Proper naming would be CPP_DKPlugin_Function

DK Javascript functions are just DKPlugin_Function 

*** DK.js ***
Make sure all function are prefixed with DK_
i.e.  DK_Function(var)

** Eliminate DKWidget
Let continue to strip down DKWidget.js because it's all moving to DK.js, then DKWidget will be completley removed.

*** Javascript ***
 replace all == with ===
 replace all != with !==

*** DKDomEvent ***
* add removeEventListener everywhere neccesary 
* Make EVERY event go through DKDomEventTarget.js event without a DOM
* keep track of events in DKDomEventTarget.js


###### Download Termux ######
https://github.com/termux/termux-app/releases/download/v0.118.0/termux-app_v0.118.0+github-debug_arm64-v8a.apk

###### Termux/Digitalknob setup ######
apt update
apt upgrade -y
apt install wget -y
wget https://raw.githubusercontent.com/aquawicket/DigitalKnob/Development/build.sh
chmod 777 build.sh
sed -i -e 's/\r$//' build.sh
./build.sh


###### Fix for Android aapt2 (Termux) #######
https://github.com/Hax4us/flutter_in_termux/issues/1#issuecomment-1245508442
cd ~/.gradle
cd caches/modules-2/files-2.1/com.android.tools.build/aapt2/7.0.3-7396180/942684a205d274f6b23f6d066cafcc12a17ce9ff
unzip aapt2-7.0.3-7396180-linux.jar
rm aapt2
cp /data/data/com.termux/files/home/digitalknob/Development/3rdParty/android-sdk/build-tools/30.0.3/aapt2 .
rm aapt2-7.0.3-7396180-linux.jar
zip aapt2-7.0.3-7396180-linux.jar *     #Zip everything back
rm -rf META-INF NOTICE aapt2