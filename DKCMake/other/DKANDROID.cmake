
function(generateAndroidMK)
	if(ANDROID_LIBMK)
		DKSET(CURRENT_DIR ${plugin_path}/${OS})
		dk_makeDirectory(${CURRENT_DIR})
		if(DEBUG)
			message(STATUS "Creating DEBUG Application.mk file for ${plugin}....")
			DKSET(CURRENT_DIR ${plugin_path}/${OS}/Debug)
			dk_makeDirectory(${CURRENT_DIR})
			dk_makeDirectory(${CURRENT_DIR}/jni)
			
			DKSET(APPMK_FILE "APP_PLATFORM := android-15 \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_ABI      := armeabi-v7a \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_STL      := gnustl_static \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_OPTIM    := debug \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_CPPFLAGS := -fexceptions -frtti\n")
			file(WRITE ${CURRENT_DIR}/jni/Application.mk ${APPMK_FILE})
			
			message(STATUS "Creating DEBUG Android.mk file for ${plugin}....")
           foreach(each_define ${DKDEFINES_LIST})
		        DKSET(ANDROID_LIBMK "${ANDROID_LIBMK} "LOCAL_LDFLAGS += ${each_define}\n")
	        endforeach()
			DKSET(ANDROID_LIBMK ${ANDROID_LIBMK} "LOCAL_C_INCLUDES += ${DKPLUGINS}\n")
			foreach(each_include ${DKINCLUDES_LIST})
				DKSET(ANDROID_LIBMK "${ANDROID_LIBMK} "LOCAL_C_INCLUDES += ${each_include}\n")
			endforeach()
			DKSET(ANDROID_LIBMK ${ANDROID_LIBMK} "include $(BUILD_STATIC_LIBRARY) \n\n")
			file(WRITE ${CURRENT_DIR}/jni/Android.mk ${ANDROID_LIBMK})
			if(WIN_HOST)
				EXECUTE_PROCESS(COMMAND ${ANDROIDNDK}/ndk-build.cmd NDK_DEBUG=1 WORKING_DIRECTORY ${CURRENT_DIR})
			endif()
			if(UNIX_HOST)
				EXECUTE_PROCESS(COMMAND ${ANDROIDNDK}/ndk-build NDK_DEBUG=1 WORKING_DIRECTORY ${CURRENT_DIR})
			endif()
		endif()
		if(RELEASE)
			message(STATUS "Creating RELEASE Application.mk file for ${plugin}....")
			DKSET(CURRENT_DIR ${plugin_path}/${OS}/Release)
			dk_makeDirectory(${CURRENT_DIR})
			dk_makeDirectory(${CURRENT_DIR}/jni)
			
			DKSET(APPMK_FILE "APP_PLATFORM := android-15 \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_ABI      := armeabi-v7a \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_STL      := gnustl_static \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_OPTIM    := release \n")
			DKSET(APPMK_FILE ${APPMK_FILE} "APP_CPPFLAGS := -fexceptions -frtti\n")
			file(WRITE ${CURRENT_DIR}/jni/Application.mk ${APPMK_FILE})
			
			message(STATUS "Creating RELEASE Android.mk file for ${plugin}....")
           foreach(each_define ${DKDEFINES_LIST})
		        DKSET(ANDROID_LIBMK "${ANDROID_LIBMK} "LOCAL_LDFLAGS += ${each_define}\n")
	        endforeach()
			DKSET(ANDROID_LIBMK ${ANDROID_LIBMK} "LOCAL_C_INCLUDES += ${DKPLUGINS}\n")
			foreach(each_include ${DKINCLUDES_LIST})
				DKSET(ANDROID_LIBMK "${ANDROID_LIBMK} "LOCAL_C_INCLUDES += ${each_include}\n")
			endforeach()
			DKSET(ANDROID_LIBMK ${ANDROID_LIBMK} "include $(BUILD_STATIC_LIBRARY) \n\n")
			file(WRITE ${CURRENT_DIR}/jni/Android.mk ${ANDROID_LIBMK})
			if(WIN_HOST)
				EXECUTE_PROCESS(COMMAND ${ANDROIDNDK}/ndk-build.cmd NDK_DEBUG=0 WORKING_DIRECTORY ${CURRENT_DIR})
			endif()
			if(UNIX_HOST)
				EXECUTE_PROCESS(COMMAND ${ANDROIDNDK}/ndk-build NDK_DEBUG=0 WORKING_DIRECTORY ${CURRENT_DIR})
			endif()
		endif()
	endif(ANDROID_LIBMK)