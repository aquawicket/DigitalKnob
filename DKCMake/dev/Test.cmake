function(get_arg_count RESULT)
	math(EXPR ARGC "${ARGC}-1")
	set(${RESULT} ${ARGC} PARENT_SCOPE)
endfunction()

function(is_list RESULT)
	math(EXPR ARGC "${ARGC}-1")  
	message("")
	message("\${ARGV} = "${ARGN})
	message("\${ARGC} = "${ARGC})
	message("\${\${ARGV}} = "${${ARGN}})
	message("\"\${ARGV}\" = ${ARGN}")
	message("\"\${ARGC}\" = ${ARGC}")
	message("\"\${\${ARGV}}\" = ${${ARGN}}")

	if(NOT "${${ARGN}}" STREQUAL "")
		get_arg_count(count ${${ARGN}})
		message("count = ${count}")
		if(${count} GREATER 1)
			message("${ARGN} is a LIST variable")
			set(${RESULT} TRUE PARENT_SCOPE)
		elseif(${count} GREATER 0)
			message("${ARGN} is a STRING variable")
			set(${RESULT} FALSE PARENT_SCOPE)
		else()
			message("${ARGN} is INVALID!")
			set(${RESULT} FALSE PARENT_SCOPE)
		endif()
		return()
	endif()

	if(NOT "${ARGN}" STREQUAL "")
		get_arg_count(count ${ARGN})
		message("count = ${count}")
		if(${count} GREATER 1)
			message("${ARGN} is a LIST value")
			set(${RESULT} TRUE PARENT_SCOPE)
		elseif(${count} GREATER 0)
			message("${ARGN} is a STRING value")
			set(${RESULT} FALSE PARENT_SCOPE)
		else()
			message("${ARGN} is INVALID!")
			set(${RESULT} FALSE PARENT_SCOPE)
		endif()
		return()
	else()
		message("${ARGN} is invalid")
		set(${RESULT} FALSE PARENT_SCOPE)
	endif()
endfunction()

set(MY_LIST 	"A;list")
set(MY_STRING 	"This is a string")
set(This 		"This is a string")

message(STATUS ${MY_LIST})
message(STATUS "${MY_LIST}")
message(STATUS ${MY_STRING})
message(STATUS "${MY_STRING}")

is_list("MY_STRING" 		MY_STRING)
is_list("\"MY_STRING\"" 	"MY_STRING")
is_list("\${MY_STRING}" 	${MY_STRING})
is_list("\"\${MY_STRING}\"" "${MY_STRING}")
is_list("MY_LIST" 			MY_LIST)
is_list("\"MY_LIST\"" 		"MY_LIST")
is_list("\${MY_LIST}" 		${MY_LIST})
is_list("\"\${MY_LIST}\"" 	"${MY_LIST}")
is_list("NO_VAR"			NO_VAR)
is_list("\"NO_VAR\"" 		"NO_VAR")
is_list("\${NO_VAR}" 		${NO_VAR})
is_list("\"\${NO_VAR}\"" 	"${NO_VAR}")




