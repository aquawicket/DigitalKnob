include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
#include_guard()

##############################################################################
# dk_pickUpdate()
# 
#	Pause execution and wait for keypress to continue
#
function(dk_pickUpdate) 
	dk_debugFunc(${ARGV})
	if(NOT ${ARGC} EQUAL 0)
		dk_error("${CMAKE_CURRENT_FUNCTION}(${ARGV}): incorrect number of arguments")
	endif()

	dk_readCache()
	
	dk_echo()
	dk_checkGitRemote()
	dk_echo()
	
	#dk_printVar(_APP_)
	#dk_printVar(_TARGET_OS_) 
	#dk_printVar(_TYPE_)
	
	dk_assert(behind)
	if(${behind} LESS 1)
		if(_APP_ AND _TARGET_OS_ AND _TYPE_)
			dk_echo(" 0) Repeat cache [${_APP_} - ${_TARGET_OS_} - ${_TYPE_}]")
		endif()
		dk_echo(" 1) Git Update") 
		dk_echo(" 2) Git Commit")
		dk_echo(" 3) Push assets")
		dk_echo(" 4) Pull assets")
		dk_echo(" 5) Reset All")
		dk_echo(" 6) Remove All")
		dk_echo(" 7) Clear Screen")
		dk_echo(" 8) Clear cmake cache and .tmp files")
		dk_echo(" 9) Reload")
		dk_echo("10) Exit")
		dk_echo()
		dk_echo(" Press Enter To Skip")
	else()
		dk_warning("Your local repository is behind, please git update")
		dk_echo()
		dk_echo("${red}") 
		if(_APP_ AND  _TARGET_OS_ AND _TYPE_)
			dk_echo(" 0) Repeat cache [${_APP_} - ${_TARGET_OS_} - ${_TYPE_}]")
		endif()
		dk_echo("${green}")
		dk_echo(" 1) Git Update")
		dk_echo("${red}")
		dk_echo(" 2) Git Commit")
		dk_echo(" 3) Push assets")
		dk_echo(" 4) Pull assets")
		dk_echo(" 5) Reset All")
		dk_echo(" 6) Remove All")
		dk_echo(" 7) Clear Screen")
		dk_echo(" 8) Clear cmake cache and .tmp files")
		dk_echo(" 9) Reload")
		dk_echo("10) Exit")
		dk_echo()
		dk_echo("Press Enter To Skip")
		dk_echo("${clr}")
	endif()
	
	#read input
	if(${input} EQUAL 0)
		dk_echo("repeating last selection")
		dk_set(APP ${_APP_})
		dk_set(TARGET_OS ${_TARGET_OS_})
		dk_set(TYPE ${_TYPE_})
		dk_set(UPDATE 1)
	elseif(${input} EQUAL 1)
		dk_gitUpdate()
	elseif(${input} EQUAL 2)
		dk_gitCommit()
	elseif(${input} EQUAL 3)
		dk_pushAssets()
	elseif(${input} EQUAL 4)
		dk_pullAssets()
	elseif(${input} EQUAL 5)
		dk_resetAll()
	elseif(${input} EQUAL 6)
		dk_removeAll()
	elseif(${input} EQUAL 7)
		dk_clearScreen()
	elseif(${input} EQUAL 8)
		dk_clearCmakeCache()
		dk_deleteTempFiles()
	elseif(${input} EQUAL 9)
		dk_reload()
	elseif(${input} EQUAL 10)
		dk_exit(0)	
	elseif(${input} EQUAL "")
		dk_set(UPDATE 1)
	else()
		dk_warning("invalid selection")
	endif()
endfunction()



function(DKTEST) ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
	dk_debugFunc(${ARGV})
	
	dk_pickUpdate()
endfunction()