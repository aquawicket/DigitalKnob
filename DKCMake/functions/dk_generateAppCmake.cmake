#!/usr/bin/cmake -P
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")
include_guard()

###############################################################################
# dk_generateAppCmake(DK_Project_Dir) + DEPENDENCIES
#
#
function(dk_generateAppCmake DK_Project_Dir)
	dk_debugFunc()
	set(DK_Project_Dir ${ARGV0})
	set(DK_DEPENDENCIES ${ARGN})
	
	if(DK_Project_Dir MATCHES "DKCMake")
		return()
	endif()
	dk_load(dk_builder)
	
	dk_basename(${DK_Project_Dir} APP_NAME)
	
	dk_fileWrite(${DK_Project_Dir}/CMakeLists.txt
####################################################
################## CMakeLists.txt ##################

"### This file is generated by DKCMake. Any Changes here, will be overwritten. ###
#include_guard()
message(\"\${ESC}[46m \${ESC}[30m ***\${CMAKE_CURRENT_LIST_FILE}*** \${ESC}[0m\")
cmake_minimum_required(VERSION 3.10)
include(\$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake)
	
###### DEPENDENCIES ######
foreach(dependency ${DK_DEPENDENCIES})
	message(\"added dependency \${dependency}\")
	dk_depend(\${dependency})
endforeach()
##########################
set(CMAKE_SYSTEM_NAME Generic)

project(${APP_NAME}_PROJECT)

dk_set(APP_NAME	${APP_NAME})
dk_configureApp(${DK_Project_Dir})

###################################################
###################################################
\n")

endfunction()





###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc()
	
	dk_validate(DKCPP_APPS_DIR "dk_DKBRANCH_DIR()")
	dk_generateAppCmake("${DKCPP_APPS_DIR}/DKCore")
endfunction()