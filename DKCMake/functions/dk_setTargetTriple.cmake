#!/usr/bin/cmake -P
include(${DKCMAKE_FUNCTIONS_DIR_}DK.cmake)
#include_guard()

###############################################################################
# dk_setTargetTriple()
#
#
function(dk_setTargetTriple)
	dk_debugFunc("\${ARGV}")

	if(CMAKE_SCRIPT_MODE_FILE)
		dk_validate(HOST_TRIPLE "dk_HOST_TRIPLE()")
		
		dk_echo()
		dk_echo(" 1) ${host_triple}")
		dk_echo()
		dk_echo(" 2) Android arm32")
		dk_echo(" 3) Android arm64")
		dk_echo(" 4) Android x86")
		dk_echo(" 5) Android x86_64")
		dk_echo(" 6) Emscripten")
		dk_echo(" 7) Ios arm32")
		dk_echo(" 8) Ios arm64")
		dk_echo(" 9) Ios x86")
		dk_echo("10) Ios x86_64")
		dk_echo("11) Iossim arm32")
		dk_echo("12) Iossim arm64")
		dk_echo("13) Iossim x86")
		dk_echo("14) Iossim x86_64")
		dk_echo("15) Linux arm32")
		dk_echo("16) Linux arm64")
		dk_echo("17) Linux x86")
		dk_echo("18) Linux x86_64")
		dk_echo("19) Mac arm32")
		dk_echo("20) Mac arm64")
		dk_echo("21) Mac x86")
		dk_echo("22) Mac x86_64")
		dk_echo("23) Raspberry arm32")
		dk_echo("24) Raspberry arm64")
		dk_echo("25) Raspberry x86")
		dk_echo("26) Raspberry x86_64")
		dk_echo("27) Windows arm32")
		dk_echo("28) Windows arm64 (clang)")
		dk_echo("29) Windows x86 (gcc)")
		dk_echo("30) Windows x86 (clang)")
		dk_echo("31) Windows x86 (msvc)")
		dk_echo("32) Windows x86_64 (gcc)")
		dk_echo("33) Windows x86_64 (clang)")
		dk_echo("34) Windows x86_64 (ucrt)")
		dk_echo("35) Windows x86_64 (msvc)")
		dk_echo("38) Exit")
		dk_echo()
		
		dk_keyboardInput(input)
		if("${input}" STREQUAL "0")
			#dk_echo("repeating last selection")
			#dk_set(app 	${_app_})
			#dk_set(os 		${_os_})
			#dk_set(type 	${_type_})
		elseif("${input}" STREQUAL "1")
			dk_set(triple 	"${host_triple}")
			dk_set(os     	"${host_os}")
			dk_set(arch  	"${host_arch}")
			if(host_env)
				dk_set(env  "${host_env}")
			endif()
		elseif("${input}" STREQUAL "2")
			dk_set(os "android")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "3")
			dk_set(os "android")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "4")
			dk_set(os "android")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "5")
			dk_set(os "android")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "6")
			dk_set(os "emscripten")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "7")
			dk_set(os "ios")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "8")
			dk_set(os "ios")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "9")
			dk_set(os "ios")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "10")
			dk_set(os "ios")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "11")
			dk_set(os "iossim")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "12")
			dk_set(os "iossim")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "13")
			dk_set(os "iossim")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "14")
			dk_set(os "iossim")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "15")
			dk_set(os "linux")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "16")
			dk_set(os "linux")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "17")
			dk_set(os "linux")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "18")
			dk_set(os "linux")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "19")
			dk_set(os "mac")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "20")
			dk_set(os "mac")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "21")
			dk_set(os "mac")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "22")
			dk_set(os "mac")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "23")
			dk_set(os "raspberry")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "24")
			dk_set(os "raspberry")
			dk_set(arch "arm64")
		elseif("${input}" STREQUAL "25")
			dk_set(os "raspberry")
			dk_set(arch "x86")
		elseif("${input}" STREQUAL "26")
			dk_set(os "raspberry")
			dk_set(arch "x86_64")
		elseif("${input}" STREQUAL "27")
			dk_set(os "win")
			dk_set(arch "arm32")
		elseif("${input}" STREQUAL "28")
			dk_set(os "win")
			dk_set(arch "arm64")
			dk_set(env "clang")
		elseif("${input}" STREQUAL "29")
			dk_set(os "win")
			dk_set(arch "x86")
			dk_set(env "mingw")
		elseif("${input}" STREQUAL "30")
			dk_set(os "win")
			dk_set(arch "x86")
			dk_set(env "clang")
		elseif("${input}" STREQUAL "31")
			dk_set(os "win")
			dk_set(arch "x86")
			dk_set(env "msvc")
		elseif("${input}" STREQUAL "32")
			dk_set(os "win")
			dk_set(arch "x86_64")
			dk_set(env "mingw")
		elseif("${input}" STREQUAL "33")
			dk_set(os "win")
			dk_set(arch "x86_64")
			dk_set(env "clang")
		elseif("${input}" STREQUAL "34")
			dk_set(os "win")
			dk_set(arch "x86_64")
			dk_set(env "ucrt")
		elseif("${input}" STREQUAL "35")
			dk_set(os "win")
			dk_set(arch "x86_64")
			dk_set(env "msvc")
		elseif("${input}" STREQUAL "38")
			dk_exit(0)
		else()
			dk_warning("invalid selection")
		endif()
		
		dk_assert(os)
		dk_toUpper(${os} OS)
		dk_set(OS ${OS})
		dk_set(${os} 1)
		dk_set(${OS} 1)
		dk_assert(OS)
		dk_printVar(os)
		dk_printVar(OS)
		dk_printVar(${os})
		dk_printVar(${OS})

		dk_assert(arch)
		dk_toUpper(${arch} ARCH)
		dk_set(ARCH ${ARCH})
		dk_set(${arch} 1)
		dk_set(${ARCH} 1)
		dk_assert(ARCH)
		dk_printVar(arch)
		dk_printVar(ARCH)
		dk_printVar(${arch})
		dk_printVar(${ARCH})
		
		if(env)
			dk_toUpper(${env} ENV)
			dk_set(ENV ${ENV})
			dk_set(${env} 1)
			dk_set(${ENV} 1)
			dk_printVar(env)
			dk_printVar(ENV)
			dk_printVar(${env})
			dk_printVar(${ENV})
		endif()
		
		if(env)
			dk_set(triple "${os}_${arch}_${env}")
			dk_set(TRIPLE "${OS}_${ARCH}_${ENV}")
		else()
			dk_set(triple "${os}_${arch}")
			dk_set(TRIPLE "${OS}_${ARCH}")
		endif()
		dk_assert(triple)
		dk_assert(TRIPLE)
		dk_set(${triple} 1)	
		dk_set(${TRIPLE} 1)	
		dk_printVar(triple)
		dk_printVar(TRIPLE)
		dk_printVar(${triple})
		dk_printVar(${TRIPLE})	
		
		### Set DEBUG_DIR and RELEASE_DIR variables
		if(IOS)
			dk_set(DEBUG_DIR Debug-iphoneos)
			dk_set(RELEASE_DIR Release-iphoneos)
		elseif(IOSSIM)
			dk_set(DEBUG_DIR Debug-iphonesimulator)
			dk_set(RELEASE_DIR Release-iphonesimulator)
		else()
			dk_set(DEBUG_DIR Debug)
			dk_set(RELEASE_DIR Release)
		endif()
		dk_assert(DEBUG_DIR)
		dk_assert(RELEASE_DIR)
		dk_printVar(DEBUG_DIR)
		dk_printVar(RELEASE_DIR)
		
		
		
	#else()
	#	dk_TARGET_TRIPLE()
	endif()
endfunction()






###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc("\${ARGV}")
	
	dk_setTargetTriple()
endfunction()
