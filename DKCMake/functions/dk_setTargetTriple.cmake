include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
#include_guard()

###############################################################################
# dk_setTargetTriple()
#
#
function(dk_setTargetTriple)
	dk_debugFunc(${ARGV})

	if(CMAKE_SCRIPT_MODE_FILE)
		dk_validate(HOST_TRIPLE "dk_getHostTriple()")
		dk_assert(HOST_TRIPLE)
		
		dk_echo()
		dk_echo(" 1) ${HOST_TRIPLE}")
		dk_echo()
		dk_echo(" 2) Android arm32")
		dk_echo(" 3) Android arm64")
		dk_echo(" 4) Android x86")
		dk_echo(" 5) Android x86_64")
		dk_echo(" 6) Emscripten")
		dk_echo(" 7) Ios arm32")
		dk_echo(" 8) Ios arm64")
		dk_echo(" 9) Ios x86")
		dk_echo("10) Ios x86_64")
		dk_echo("11) Iossim arm32")
		dk_echo("12) Iossim arm64")
		dk_echo("13) Iossim x86")
		dk_echo("14) Iossim x86_64")
		dk_echo("15) Linux arm32")
		dk_echo("16) Linux arm64")
		dk_echo("17) Linux x86")
		dk_echo("18) Linux x86_64")
		dk_echo("19) Mac arm32")
		dk_echo("20) Mac arm64")
		dk_echo("21) Mac x86")
		dk_echo("22) Mac x86_64")
		dk_echo("23) Raspberry arm32")
		dk_echo("24) Raspberry arm64")
		dk_echo("25) Raspberry x86")
		dk_echo("26) Raspberry x86_64")
		dk_echo("27) Windows arm32")
		dk_echo("28) Windows arm64 (clang)")
		dk_echo("29) Windows x86 (gcc)")
		dk_echo("30) Windows x86 (clang)")
		dk_echo("31) Windows x86 (msvc)")
		dk_echo("32) Windows x86_64 (gcc)")
		dk_echo("33) Windows x86_64 (clang)")
		dk_echo("34) Windows x86_64 (ucrt)")
		dk_echo("35) Windows x86_64 (msvc)")
		dk_echo("38) Exit")
		dk_echo()
		
		dk_keyboardInput(input)
		if("${input}" STREQUAL "0")
			#dk_echo("repeating last selection")
			#dk_set(APP ${_APP_})
			#dk_set(TARGET_OS ${_TARGET_OS_})
			#dk_set(TYPE ${_TYPE_})
		elseif("${input}" STREQUAL "1")
			dk_set(TARGET_TRIPLE 	"${HOST_TRIPLE}")
			dk_set(TARGET_OS     	"${HOST_OS}")
			dk_set(TARGET_ARCH  	"${HOST_ARCH}")
			if(HOST_ENV)
				dk_set(TARGET_ENV    "${HOST_ENV}")
			endif()
		elseif("${input}" STREQUAL "2")
			dk_set(TARGET_OS "android")
			dk_set(TARGET_ARCH "arm32")
			dk_set(ANDROID_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "3")
			dk_set(TARGET_OS "android")
			dk_set(TARGET_ARCH "arm64")
			dk_set(ARM64_TARGET 1)
			dk_set(ANDROID_TARGET 1)
		elseif("${input}" STREQUAL "4")
			dk_set(TARGET_OS "android")
			dk_set(TARGET_ARCH "x86")
			dk_set(ANDROID_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "5")
			dk_set(TARGET_OS "android")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(ANDROID_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "6")
			dk_set(TARGET_OS "emscripten")
			dk_set(TARGET_ARCH "x86")
			dk_set(EMSCRIPTEN_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "7")
			dk_set(TARGET_OS "ios")
			dk_set(TARGET_ARCH "arm32")
			dk_set(IOS_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "8")
			dk_set(TARGET_OS "ios")
			dk_set(TARGET_ARCH "arm64")
			dk_set(IOS_TARGET 1)
			dk_set(ARM64_TARGET 1)
		elseif("${input}" STREQUAL "9")
			dk_set(TARGET_OS "ios")
			dk_set(TARGET_ARCH "x86")
			dk_set(IOS_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "10")
			dk_set(TARGET_OS "ios")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(IOS_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "11")
			dk_set(TARGET_OS "iossim")
			dk_set(TARGET_ARCH "arm32")
			dk_set(IOSSIM_TARGET 1
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "12")
			dk_set(TARGET_OS "iossim")
			dk_set(TARGET_ARCH "arm64")
			dk_set(IOSSIM_TARGET 1)
			dk_set(ARM64_TARGET 1)
		elseif("${input}" STREQUAL "13")
			dk_set(TARGET_OS "iossim")
			dk_set(TARGET_ARCH "x86")
			dk_set(IOSSIM_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "14")
			dk_set(TARGET_OS "iossim")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(IOSSIM_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "15")
			dk_set(TARGET_OS "linux")
			dk_set(TARGET_ARCH "arm32")
			dk_set(LINUX_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "16")
			dk_set(TARGET_OS "linux")
			dk_set(TARGET_ARCH "arm64")
			dk_set(LINUX_TARGET 1)
			dk_set(ARM64_TARGET 1)
		elseif("${input}" STREQUAL "17")
			dk_set(TARGET_OS "linux")
			dk_set(TARGET_ARCH "x86")
			dk_set(LINUX_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "18")
			dk_set(TARGET_OS "linux")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(LINUX_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "19")
			dk_set(TARGET_OS "mac")
			dk_set(TARGET_ARCH "arm32")
			dk_set(MAC_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "20")
			dk_set(TARGET_OS "mac")
			dk_set(TARGET_ARCH "arm64")
			dk_set(MAC_TARGET 1)
			dk_set(ARM64_TARGET 1)
		elseif("${input}" STREQUAL "21")
			dk_set(TARGET_OS "mac")
			dk_set(TARGET_ARCH "x86")
			dk_set(MAC_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "22")
			dk_set(TARGET_OS "mac")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(MAC_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "23")
			dk_set(TARGET_OS "raspberry")
			dk_set(TARGET_ARCH "arm32")
			dk_set(RASPBERRY_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "24")
			dk_set(TARGET_OS "raspberry")
			dk_set(TARGET_ARCH "arm64")
			dk_set(RASPBERRY_TARGET 1)
			dk_set(ARM64_TARGET 1)
		elseif("${input}" STREQUAL "25")
			dk_set(TARGET_OS "raspberry")
			dk_set(TARGET_ARCH "x86")
			dk_set(RASPBERRY_TARGET 1)
			dk_set(X86_TARGET 1)
		elseif("${input}" STREQUAL "26")
			dk_set(TARGET_OS "raspberry")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(RASPBERRY_TARGET 1)
			dk_set(X86_64_TARGET 1)
		elseif("${input}" STREQUAL "27")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "arm32")
			dk_set(WIN_TARGET 1)
			dk_set(ARM32_TARGET 1)
		elseif("${input}" STREQUAL "28")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "arm64")
			dk_set(TARGET_ENV "clang")
			dk_set(WIN_TARGET 1)
			dk_set(ARM64_TARGET 1)
			dk_set(CLANGARM64_TARGET 1)
		elseif("${input}" STREQUAL "29")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86")
			dk_set(TARGET_ENV "mingw")
			dk_set(WIN_TARGET 1)
			dk_set(X86_TARGET 1)
			dk_set(MINGW32_TARGET 1)
		elseif("${input}" STREQUAL "30")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86")
			dk_set(TARGET_ENV "clang")
			dk_set(WIN_TARGET 1)
			dk_set(X86_TARGET 1)
			dk_set(CLANG32_TARGET 1)
		elseif("${input}" STREQUAL "31")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86")
			dk_set(TARGET_ENV "msvc")
			dk_set(WIN_TARGET 1)
			dk_set(X86_TARGET 1)
			dk_set(MSVC_TARGET 1)
		elseif("${input}" STREQUAL "32")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(TARGET_ENV "mingw")
			dk_set(WIN_TARGET 1)
			dk_set(X86_64_TARGET 1)
			dk_set(MINGW64_TARGET 1)
		elseif("${input}" STREQUAL "33")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(TARGET_ENV "clang")
			dk_set(WIN_TARGET 1)
			dk_set(X86_64_TARGET 1)
			dk_set(CLANG64_TARGET 1)
		elseif("${input}" STREQUAL "34")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(TARGET_ENV "ucrt")
			dk_set(WIN_TARGET 1)
			dk_set(X86_64_TARGET 1)
			dk_set(UCRT64_TARGET 1)
		elseif("${input}" STREQUAL "35")
			dk_set(TARGET_OS "win")
			dk_set(TARGET_ARCH "x86_64")
			dk_set(TARGET_ENV "msvc")
			dk_set(X86_64_TARGET 1)
			dk_set(WIN_TARGET 1)
			dk_set(MSVC_TARGET 1)
		elseif("${input}" STREQUAL "38")
			dk_exit(0)
		else()
			dk_warning("invalid selection")
		endif()
		
		
		if(TARGET_ENV)
			dk_set(TARGET_TRIPLE "${TARGET_OS}_${TARGET_ARCH}_${TARGET_ENV}")
		else()
			dk_set(TARGET_TRIPLE "${TARGET_OS}_${TARGET_ARCH}")
		endif()
		dk_set(${TARGET_TRIPLE} TRUE)
		dk_set(OS ${TARGET_TRIPLE})
		
		
		### Set DEBUG_DIR and RELEASE_DIR variables
		if(${IOS_TARGET})
			dk_set(DEBUG_DIR Debug-iphoneos)
			dk_set(RELEASE_DIR Release-iphoneos)
		elseif(${IOSSIM_TARGET})
			dk_set(DEBUG_DIR Debug-iphonesimulator)
			dk_set(RELEASE_DIR Release-iphonesimulator)
		else()
			dk_set(DEBUG_DIR Debug)
			dk_set(RELEASE_DIR Release)
		endif()
		
		dk_assert(TARGET_OS)
		dk_assert(TARGET_ARCH)
		dk_assert(TARGET_TRIPLE)
	#else()
	#	dk_getTargetTriple()
	endif()
endfunction()






###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc(${ARGV})
	
	dk_setTargetTriple()
endfunction()
