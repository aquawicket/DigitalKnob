include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
#include_guard()

##################################################################################
# dk_color(on/off)
#
#	Enable / Disable console text and background coloring
#
#   on/off:  Default ON
#
#   https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
#   https://en.wikipedia.org/wiki/ANSI_escape_code#Colors
#
function(dk_color)
	dk_debugFunc(${ARGV})
	
	set(USE_COLOR 1)
	if(DEFINED ARGV0)
		if(${ARGV0})
		else()
			unset(USE_COLOR)
		endif()
	endif()
	
	if(USE_COLOR)
		string(ASCII 27 ESC)
		set(ESC          "${ESC}" CACHE INTERNAL "")      # escape character
		set(clr          "${ESC}[0m" CACHE INTERNAL "")   # reset color
		
		# Styles
		set(bold		 "${ESC}[1m" CACHE INTERNAL "")
		set(underline	 "${ESC}[4m" CACHE INTERNAL "")
		set(inverse		 "${ESC}[7m" CACHE INTERNAL "")

		# Foreground Colors
		set(black        "${ESC}[30m" CACHE INTERNAL "")
		set(red          "${ESC}[31m" CACHE INTERNAL "")
		set(green        "${ESC}[32m" CACHE INTERNAL "")
		set(yellow       "${ESC}[33m" CACHE INTERNAL "")
		set(blue         "${ESC}[34m" CACHE INTERNAL "")
		set(magenta      "${ESC}[35m" CACHE INTERNAL "")
		set(cyan         "${ESC}[36m" CACHE INTERNAL "") 
		set(white        "${ESC}[37m" CACHE INTERNAL "")
		
		# Background Colors
		set(bg_black     "${ESC}[40m" CACHE INTERNAL "")
		set(bg_red       "${ESC}[41m" CACHE INTERNAL "")
		set(bg_green     "${ESC}[42m" CACHE INTERNAL "")
		set(bg_yellow    "${ESC}[43m" CACHE INTERNAL "")
		set(bg_blue      "${ESC}[44m" CACHE INTERNAL "")
		set(bg_magenta   "${ESC}[45m" CACHE INTERNAL "")
		set(bg_cyan      "${ESC}[46m" CACHE INTERNAL "") 
		set(bg_white     "${ESC}[47m" CACHE INTERNAL "")
		
		# Foreground Colors (Bright)
		set(BLACK        "${ESC}[90m" CACHE INTERNAL "")
		set(RED          "${ESC}[91m" CACHE INTERNAL "")
		set(GREEN        "${ESC}[92m" CACHE INTERNAL "")
		set(YELLOW       "${ESC}[93m" CACHE INTERNAL "")
		set(BLUE         "${ESC}[94m" CACHE INTERNAL "")
		set(MAGENTA      "${ESC}[95m" CACHE INTERNAL "")
		set(CYAN    	 "${ESC}[96m" CACHE INTERNAL "")
		set(WHITE	     "${ESC}[97m" CACHE INTERNAL "")
		
		# Background Colors (Bright)
		set(BG_BLACK     "${ESC}[100m" CACHE INTERNAL "")
		set(BG_RED       "${ESC}[101m" CACHE INTERNAL "")
		set(BG_GREEN     "${ESC}[102m" CACHE INTERNAL "")
		set(BG_YELLOW    "${ESC}[103m" CACHE INTERNAL "")
		set(BG_BLUE      "${ESC}[104m" CACHE INTERNAL "")
		set(BG_MAGENTA   "${ESC}[105m" CACHE INTERNAL "")
		set(BG_CYAN      "${ESC}[106m" CACHE INTERNAL "")
		set(BG_WHITE     "${ESC}[107m" CACHE INTERNAL "")
		
		message("${blue}C${green}O${red}L${magenta}O${cyan}R ${blue}O${green}N${clr}")
	else()
		#unset(ESC)
		#unset(clr CACHE)
		
		# Styles
		unset(bold CACHE)
		unset(underline CACHE)
		unset(inverse CACHE)
		
		# Foreground Colors
		unset(black CACHE)
		unset(red CACHE)
		unset(green CACHE)
		unset(yellow CACHE)
		unset(blue CACHE)
		unset(magenta CACHE)
		unset(cyan CACHE)
		unset(white CACHE)
		
		# Background Colors
		unset(bg_black CACHE)
		unset(bg_red CACHE)
		unset(bg_green CACHE)
		unset(bg_yellow CACHE)
		unset(bg_blue CACHE)
		unset(bg_magenta CACHE)
		unset(bg_cyan CACHE)
		unset(bg_white CACHE)
		
		# Foreground Colors (Bright CACHE)
		unset(BLACK CACHE)
		unset(RED CACHE)
		unset(GREEN CACHE)
		unset(YELLOW CACHE)
		unset(BLUE CACHE)
		unset(MAGENTA CACHE)
		unset(CYAN CACHE)
		unset(WHITE CACHE)
		
		# Background Colors (Bright CACHE)
		unset(BG_BLACK CACHE)
		unset(BG_RED CACHE)
		unset(BG_GREEN CACHE)
		unset(BG_YELLOW CACHE)
		unset(BG_BLUE CACHE)
		unset(BG_MAGENTA CACHE)
		unset(BG_CYAN CACHE)
		unset(BG_WHITE CACHE)
	
		message("${clr}COLOR OFF")
	endif()
endfunction()
dk_color(1)





function(DKTEST) ####### DKTEST ####### DKTEST ####### DKTEST ####### DKTEST ####### DKTEST #######
	dk_debugFunc(${ARGV})
	
	dk_color(ON)
	dk_color(OFF)
	dk_color(1)
	dk_color(0)
	dk_color(TRUE)
	dk_color(FALSE)
	dk_color(true)
	dk_color(false)
	dk_color(YES)
	dk_color(NO)
	dk_color(yes)
	dk_color(no)
	dk_color(Y)
	dk_color(N)
	dk_color(y)
	dk_color(n)
	dk_color()
	dk_color(OFF)
	dk_color(ON)
	#dk_color(OFF)
	
	dk_echo("")
	dk_echo("${black}${BG_BLACK}           Styles            ${clr}")
	dk_echo("\${clr}        ${clr}Reset${clr}")
	dk_echo("\${bold}       ${bold}Bold${clr}")
	dk_echo("\${underline}  ${underline}Underline${clr}")
	dk_echo("\${inverse}    ${inverse}Inverse${clr}")
	dk_echo("")
	dk_echo("${black}${BG_BLACK}      Foreground Colors      ${clr}")
	dk_echo("\${black}      ${black}Black${clr}")
	dk_echo("\${red}        ${red}Red${clr}")
	dk_echo("\${green}      ${green}Green${clr}")
	dk_echo("\${yellow}     ${yellow}Yellow${clr}")
	dk_echo("\${blue}       ${blue}BLUE${clr}")
	dk_echo("\${magenta}    ${magenta}Magenta${clr}")
	dk_echo("\${cyan}       ${cyan}Cyan${clr}")
	dk_echo("\${white}      ${white}White${clr}")
	dk_echo("")
	dk_echo("${black}${BG_BLACK}      Background Colors      ${clr}")
	dk_echo("\${bg_black}   ${bg_black}Black${clr}")
	dk_echo("\${bg_red}     ${bg_red}Red${clr}")
	dk_echo("\${bg_green}   ${bg_green}Green${clr}")
	dk_echo("\${bg_yellow}  ${bg_yellow}Yellow${clr}")
	dk_echo("\${bg_blue}    ${bg_blue}BLUE${clr}")
	dk_echo("\${bg_magenta} ${bg_magenta}Magenta${clr}")
	dk_echo("\${bg_cyan}    ${bg_cyan}Cyan${clr}")
	dk_echo("\${bg_white}   ${bg_white}White${clr}")
	dk_echo("")
	dk_echo("${black}${BG_BLACK} Foreground Colors (bright)  ${clr}")
	dk_echo("\${BLACK}      ${BLACK}Black${clr}")
	dk_echo("\${RED}        ${RED}Red${clr}")
	dk_echo("\${GREEN}      ${GREEN}Green${clr}")
	dk_echo("\${YELLOW}     ${YELLOW}Yellow${clr}")
	dk_echo("\${BLUE}       ${BLUE}BLUE${clr}")
	dk_echo("\${MAGENTA}    ${MAGENTA}Magenta${clr}")
	dk_echo("\${CYAN}       ${CYAN}Cyan${clr}")
	dk_echo("\${WHITE}      ${WHITE}White${clr}")
	dk_echo("")
	dk_echo("${black}${BG_BLACK} Background Colors (bright)  ${clr}")
	dk_echo("\${BG_BLACK}   ${BG_BLACK}Black${clr}")
	dk_echo("\${BG_RED}     ${BG_RED}Red${clr}")
	dk_echo("\${BG_GREEN}   ${BG_GREEN}Green${clr}")
	dk_echo("\${BG_YELLOW}  ${BG_YELLOW}Yellow${clr}")
	dk_echo("\${BG_BLUE}    ${BG_BLUE}BLUE${clr}")
	dk_echo("\${BG_MAGENTA} ${BG_MAGENTA}Magenta${clr}")
	dk_echo("\${BG_CYAN}    ${BG_CYAN}Cyan${clr}")
	dk_echo("\${BG_WHITE}   ${BG_WHITE}White${clr}")
	dk_echo("")
	dk_echo("${black}${BG_BLACK}        Combinations         ${clr}")
	dk_echo("\${inverse}                             ${inverse}   inverse foreground <-> background   ${clr}")
	dk_echo("\${bg_yellow}\${red}                     ${bg_yellow}${red}   yellow backgroud / red foreground   ${clr}")
	dk_echo("\${bg_yellow}\${red}\${inverse}           ${bg_yellow}${red}${inverse}        yellow / red inversed          ${clr}")
	dk_echo("\${bg_red}..\${bg_green}..\${bg_blue}     ${bg_red}    nested   ${bg_green}    colors    ${bg_blue}    text    ${clr}")
	dk_echo("")
	dk_echo("")
	dk_echo(" ${bg_blue} * * * * * * * * * ${bg_red}                                  ${clr}")
	dk_echo(" ${bg_blue}  * * * * * * * *  ${bg_white}                                  ${clr}")
	dk_echo(" ${bg_blue} * * * * * * * * * ${bg_red}                                  ${clr}") 
	dk_echo(" ${bg_blue}  * * * * * * * *  ${bg_white}                                  ${clr}")
	dk_echo(" ${bg_blue} * * * * * * * * * ${bg_red}                                  ${clr}")
	dk_echo(" ${bg_blue}  * * * * * * * *  ${bg_white}                                  ${clr}")
	dk_echo(" ${bg_blue} * * * * * * * * * ${bg_red}                                  ${clr}")
	dk_echo(" ${bg_white}                                                     ${clr}")
	dk_echo(" ${bg_red}                                                     ${clr}")
	dk_echo(" ${bg_white}                                                     ${clr}")
	dk_echo(" ${bg_red}                                                     ${clr}")
	dk_echo(" ${bg_white}                                                     ${clr}")
	dk_echo(" ${bg_red}                                                     ${clr}")
endfunction()