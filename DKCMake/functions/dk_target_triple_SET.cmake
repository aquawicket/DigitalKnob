#!/usr/bin/cmake -P
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")
include_guard()

###############################################################################
# dk_target_triple_SET()
#
#
function(dk_target_triple_SET)
	dk_debugFunc()
	message("dk_target_triple_SET(${ARGV})")

	set(Default_Target_Env "clang")

	if(CMAKE_SCRIPT_MODE_FILE)
		dk_validate(Host_Triple "dk_host_triple()")
		
		dk_echo()
		dk_echo(" 1) ${Host_Triple}_${Default_Target_Env}")
		dk_echo()
		dk_echo(" 2) cosmopolitan")
		dk_echo(" 3) android_arm32_clang")
		dk_echo(" 4) android_arm64_clang")
		dk_echo(" 5) android_x86_clang")
		dk_echo(" 6) android_x86_64_clang")
		dk_echo(" 7) emscripten_x86_clang")
		dk_echo(" 8) ios_arm32_clang")
		dk_echo(" 9) ios_arm64_clang")
		dk_echo("10) ios_x86_clang")
		dk_echo("11) ios_x86_64_clang")
		dk_echo("12) iossim_arm32_clang")
		dk_echo("13) iossim_arm64_clang")
		dk_echo("14) iossim_x86_clang")
		dk_echo("15) iossim_x86_64_clang")
		dk_echo("16) linux_arm32_clang")
		dk_echo("17) linux_arm64_clang")
		dk_echo("18) linux_x86_clang")
		dk_echo("19) linux_x86_64_clang")
		dk_echo("20) mac_arm32_clang")
		dk_echo("21) mac_arm64_clang")
		dk_echo("22) mac_x86_clang")
		dk_echo("23) mac_x86_64_clang")
		dk_echo("24) raspberry_arm32_clang")
		dk_echo("25) raspberry_arm64_clang")
		dk_echo("26) raspberry_x86_clang")
		dk_echo("27) raspberry_x86_64_clang")
		dk_echo("28) windows_arm32_clang")
		dk_echo("29) windows_arm64_clang")
		dk_echo("30) windows_x86_clang")
		dk_echo("31) windows_x86_gcc")
		dk_echo("32) windows_x86_msvc")
		dk_echo("33) windows_x86_64_clang")
		dk_echo("34) windows_x86_64_gcc")
		dk_echo("35) windows_x86_64_msvc")
		dk_echo("36) windows_x86_64_ucrt")
		dk_echo("37) Exit")
		dk_echo()
		
		dk_keyboardInput(input)
		if("${input}" STREQUAL "0")
			#dk_echo("repeating last selection")
			#dk_set(Target_App 		${_Target_App_})
			#dk_set(Target_Os 		${_Target_Os_})
			#dk_set(Target_Type 	${_Target_Type_})
		elseif("${input}" STREQUAL "1")
			dk_set(Target_Triple 	"${Host_Triple}")
			dk_set(Target_Os     	"${Host_Os}")
			dk_set(Target_Arch  	"${Host_Arch}")
			if(Default_Target_Env)
				dk_set(Target_Env  "${Default_Target_Env}")
			endif()
		elseif("${input}" STREQUAL "2")
			dk_set(Target_Os "cosmopolitan")
			dk_set(Target_Arch "cosmopolitan")
			dk_set(Target_Env "cosmopolitan")
		elseif("${input}" STREQUAL "3")
			dk_set(Target_Os "android")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "4")
			dk_set(Target_Os "android")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "5")
			dk_set(Target_Os "android")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "6")
			dk_set(Target_Os "android")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "7")
			dk_set(Target_Os "emscripten")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "8")
			dk_set(Target_Os "ios")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "9")
			dk_set(Target_Os "ios")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "10")
			dk_set(Target_Os "ios")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "11")
			dk_set(Target_Os "ios")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "12")
			dk_set(Target_Os "iossim")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "13")
			dk_set(Target_Os "iossim")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "14")
			dk_set(Target_Os "iossim")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "15")
			dk_set(Target_Os "iossim")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "16")
			dk_set(Target_Os "linux")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "17")
			dk_set(Target_Os "linux")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "18")
			dk_set(Target_Os "linux")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "19")
			dk_set(Target_Os "linux")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "20")
			dk_set(Target_Os "mac")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "21")
			dk_set(Target_Os "mac")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "22")
			dk_set(Target_Os "mac")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "23")
			dk_set(Target_Os "mac")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "24")
			dk_set(Target_Os "raspberry")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "25")
			dk_set(Target_Os "raspberry")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "26")
			dk_set(Target_Os "raspberry")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "27")
			dk_set(Target_Os "raspberry")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "28")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "arm32")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "29")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "arm64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "30")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "31")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "gcc")
		elseif("${input}" STREQUAL "32")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86")
			dk_set(Target_Env "msvc")
		elseif("${input}" STREQUAL "33")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "clang")
		elseif("${input}" STREQUAL "34")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "gcc")
		elseif("${input}" STREQUAL "35")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "msvc")
		elseif("${input}" STREQUAL "36")
			dk_set(Target_Os "win")
			dk_set(Target_Arch "x86_64")
			dk_set(Target_Env "Ucrt")
		elseif("${input}" STREQUAL "37")
			dk_exit(0)
		else()
			dk_warning("invalid selection")
		endif()
		
		dk_assertVar(Target_Os)
		dk_toLower(${Target_Os} target_os)
		dk_toUpper(${Target_Os} TARGET_OS)
		dk_set(target_os ${target_os})
		dk_set(Target_Os ${Target_Os})
		dk_set(TARGET_OS ${TARGET_OS})
		dk_set(${target_os} 1)
		dk_set(${Target_Os} 1)
		dk_set(${TARGET_OS} 1)
		dk_assertVar(TARGET_OS)
		dk_printVar(target_os)
		dk_printVar(tTarget_Os)
		dk_printVar(TARGET_OS)
		dk_printVar(${target_os})
		dk_printVar(${Target_Os})
		dk_printVar(${TARGET_OS})

		dk_assertVar(Target_Arch)
		dk_toLower(${Target_Arch} target_arch)
		dk_toUpper(${Target_Arch} TARGET_ARCH)
		dk_set(target_arch ${target_arch})
		dk_set(target_arch ${Target_Arch})
		dk_set(TARGET_ARCH ${TARGET_ARCH})
		dk_set(${target_arch} 1)
		dk_set(${Target_Arch} 1)
		dk_set(${TARGET_ARCH} 1)
		dk_assertVar(TARGET_ARCH)
		dk_printVar(target_arch)
		dk_printVar(Target_Arch)
		dk_printVar(TARGET_ARCH)
		dk_printVar(${target_arch})
		dk_printVar(${Target_Arch})
		dk_printVar(${TARGET_ARCH})
		
		if(Target_Env)
			dk_toLower(${Target_Env} target_env)
			dk_toUpper(${Target_Env} TARGET_ENV)
			dk_set(target_env ${target_env})
			dk_set(Target_Env ${Target_Env})
			dk_set(TARGET_ENV ${TARGET_ENV})
			dk_set(${target_env} 1)
			dk_set(${Target_Env} 1)
			dk_set(${TARGET_ENV} 1)
			dk_printVar(target_env)
			dk_printVar(Target_Env)
			dk_printVar(TARGET_ENV)
			dk_printVar(${target_env})
			dk_printVar(${Target_Env})
			dk_printVar(${TARGET_ENV})
		endif()
		
		if(Target_Env)
			dk_set(Target_Triple "${Target_Os}_${Target_Arch}_${Target_Env}")
			dk_set(target_triple "${target_os}_${target_arch}_${target_env}")
			dk_set(TARGET_TRIPLE "${TARGET_OS}_${TARGET_ARCH}_${TARGET_ENV}")
		else()
			dk_set(Target_Triple "${Target_os}_${Target_Arch}")
			dk_set(target_triple "${target_os}_${target_arch}")
			dk_set(TARGET_TRIPLE "${TARGET_OS}_${TARGET_ARCH}")
		endif()
		dk_assertVar(target_triple)
		dk_assertVar(Target_Triple)
		dk_assertVar(TARGET_TRIPLE)
		dk_set(target_triple ${target_triple})
		dk_set(Target_Triple ${Target_Triple})
		dk_set(TARGET_TRIPLE ${TARGET_TRIPLE})
		dk_set(${target_triple} 1)
		dk_set(${Target_Triple} 1)
		dk_set(${TARGET_TRIPLE} 1)
		dk_printVar(target_triple)
		dk_printVar(Target_Triple)
		dk_printVar(TARGET_TRIPLE)
		dk_printVar(${target_triple})
		dk_printVar(${Target_Triple})
		dk_printVar(${TARGET_TRIPLE})	
		
		### Set DEBUG_DIR and RELEASE_DIR variables
		if(IOS)
			dk_set(DEBUG_DIR Debug-iphoneos)
			dk_set(RELEASE_DIR Release-iphoneos)
		elseif(IOSSIM)
			dk_set(DEBUG_DIR Debug-iphonesimulator)
			dk_set(RELEASE_DIR Release-iphonesimulator)
		else()
			dk_set(DEBUG_DIR Debug)
			dk_set(RELEASE_DIR Release)
		endif()
		dk_assertVar(DEBUG_DIR)
		dk_assertVar(RELEASE_DIR)
		dk_printVar(DEBUG_DIR)
		dk_printVar(RELEASE_DIR)
	else()
		dk_error("dk_target_triple must run in CMAKE_SCRIPT_MODE_FILE")
	endif()
endfunction()






###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc(0)
	
	dk_target_triple_SET()
endfunction()
