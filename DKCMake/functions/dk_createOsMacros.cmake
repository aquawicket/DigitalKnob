include(${DKCMAKE_FUNCTIONS_DIR}/DK.cmake)
include(${DKCMAKE_FUNCTIONS_DIR}/dk_createPrefixMacro.cmake)
#include_guard()


###############################################################################
# dk_createOsMacros(func)
#
#	Prefix a function with <OS>_ macros. Calling the <OS>_function will only be called if the current <OS> or <OS_HOST> is true
#
#	@func	- The func of the function to create aliases for
#
function(dk_createOsMacros func)
	#dk_debugFunc(${ARGV})
	message("dk_createOsMacros(${ARGV})")
	
	if(ext_string)
		dk_error("ext_string variable already in use")
	endif()
	
	### HOST Prefix functions ###
	if(NOT COMMAND WIN_HOST_${func})
		dk_createPrefixMacro(${func} WIN_HOST)
	endif()
	dk_createPrefixMacro(${func}    WIN_ARM64_HOST)
	dk_createPrefixMacro(${func}      WIN_X86_HOST)
	dk_createPrefixMacro(${func}   WIN_X86_64_HOST)
	dk_createPrefixMacro(${func}         UNIX_HOST)
	dk_createPrefixMacro(${func}          MAC_HOST)
	dk_createPrefixMacro(${func}      MAC_X86_HOST)
	dk_createPrefixMacro(${func}   MAC_X86_64_HOST)
	dk_createPrefixMacro(${func}        LINUX_HOST)
	dk_createPrefixMacro(${func}  LINUX_ARM64_HOST)
	dk_createPrefixMacro(${func}    LINUX_X86_HOST)
	dk_createPrefixMacro(${func} LINUX_X86_64_HOST)
	dk_createPrefixMacro(${func}      ANDROID_HOST)
	
	### TARGET Prefix functions ###
	dk_createPrefixMacro(${func}             WIN_TARGET)
	dk_createPrefixMacro(${func}       WIN_ARM64_TARGET)
	dk_createPrefixMacro(${func}         WIN_X86_TARGET)
	dk_createPrefixMacro(${func}      WIN_X86_64_TARGET)
	dk_createPrefixMacro(${func}            UNIX_TARGET)
	dk_createPrefixMacro(${func}           APPLE_TARGET)
	dk_createPrefixMacro(${func}         APPLE32_TARGET)
	dk_createPrefixMacro(${func}         APPLE64_TARGET)
	dk_createPrefixMacro(${func}             MAC_TARGET)
	dk_createPrefixMacro(${func}         MAC_X86_TARGET)
	dk_createPrefixMacro(${func}      MAC_X86_64_TARGET)
	dk_createPrefixMacro(${func}             IOS_TARGET)
	dk_createPrefixMacro(${func}       IOS_ARM32_TARGET)
	dk_createPrefixMacro(${func}       IOS_ARM64_TARGET)
	dk_createPrefixMacro(${func}          IOSSIM_TARGET)
	dk_createPrefixMacro(${func}      IOSSIM_X86_TARGET)
	dk_createPrefixMacro(${func}   IOSSIM_X86_64_TARGET)
	dk_createPrefixMacro(${func}           LINUX_TARGET)
	dk_createPrefixMacro(${func}     LINUX_ARM64_TARGET)
	dk_createPrefixMacro(${func}       LINUX_X86_TARGET)
	dk_createPrefixMacro(${func}    LINUX_X86_64_TARGET)
	dk_createPrefixMacro(${func}       RASPBERRY_TARGET)
	dk_createPrefixMacro(${func} RASPBERRY_ARM32_TARGET)
	dk_createPrefixMacro(${func} RASPBERRY_ARM64_TARGET)
	dk_createPrefixMacro(${func}         ANDROID_TARGET)
	dk_createPrefixMacro(${func}   ANDROID_ARM32_TARGET)
	dk_createPrefixMacro(${func}   ANDROID_ARM64_TARGET)
	dk_createPrefixMacro(${func}      EMSCRIPTEN_TARGET)
	
	### TARGET / BUILD Prefix functions ###
	if(NOT "${ARGN}" STREQUAL "NO_DEBUG_RELEASE_TAGS")
		dk_createPrefixMacro(${func}                        DEBUG)
		dk_createPrefixMacro(${func}             WIN_TARGET DEBUG)
		dk_createPrefixMacro(${func}         WIN_X86_TARGET DEBUG)
		dk_createPrefixMacro(${func}      WIN_X86_64_TARGET DEBUG)
		dk_createPrefixMacro(${func}            UNIX_TARGET DEBUG)
		dk_createPrefixMacro(${func}           APPLE_TARGET DEBUG)
		dk_createPrefixMacro(${func}             MAC_TARGET DEBUG)
		dk_createPrefixMacro(${func}         MAC_X86_TARGET DEBUG)
		dk_createPrefixMacro(${func}      MAC_X86_64_TARGET DEBUG)
		dk_createPrefixMacro(${func}             IOS_TARGET DEBUG)
		dk_createPrefixMacro(${func}       IOS_ARM32_TARGET DEBUG)
		dk_createPrefixMacro(${func}       IOS_ARM64_TARGET DEBUG)
		dk_createPrefixMacro(${func}          IOSSIM_TARGET DEBUG)
		dk_createPrefixMacro(${func}      IOSSIM_X86_TARGET DEBUG)
		dk_createPrefixMacro(${func}   IOSSIM_X86_64_TARGET DEBUG)
		dk_createPrefixMacro(${func}           LINUX_TARGET DEBUG)
		dk_createPrefixMacro(${func}       LINUX_X86_TARGET DEBUG)
		dk_createPrefixMacro(${func}    LINUX_X86_64_TARGET DEBUG)
		dk_createPrefixMacro(${func}       RASPBERRY_TARGET DEBUG)
		dk_createPrefixMacro(${func} RASPBERRY_ARM32_TARGET DEBUG)
		dk_createPrefixMacro(${func} RASPBERRY_ARM64_TARGET DEBUG)
		dk_createPrefixMacro(${func}         ANDROID_TARGET DEBUG)
		dk_createPrefixMacro(${func}   ANDROID_ARM32_TARGET DEBUG)
		dk_createPrefixMacro(${func}   ANDROID_ARM64_TARGET DEBUG)
		dk_createPrefixMacro(${func}      EMSCRIPTEN_TARGET DEBUG)
		
		dk_createPrefixMacro(${func}                        RELEASE)
		dk_createPrefixMacro(${func}             WIN_TARGET RELEASE)
		dk_createPrefixMacro(${func}         WIN_X86_TARGET RELEASE)
		dk_createPrefixMacro(${func}      WIN_X86_64_TARGET RELEASE)
		dk_createPrefixMacro(${func}            UNIX_TARGET RELEASE)
		dk_createPrefixMacro(${func}           APPLE_TARGET RELEASE)
		dk_createPrefixMacro(${func}             MAC_TARGET RELEASE)
		dk_createPrefixMacro(${func}         MAC_X86_TARGET RELEASE)
		dk_createPrefixMacro(${func}      MAC_X86_64_TARGET RELEASE)
		dk_createPrefixMacro(${func}             IOS_TARGET RELEASE)
		dk_createPrefixMacro(${func}       IOS_ARM32_TARGET RELEASE)
		dk_createPrefixMacro(${func}       IOS_ARM64_TARGET RELEASE)
		dk_createPrefixMacro(${func}          IOSSIM_TARGET RELEASE)
		dk_createPrefixMacro(${func}      IOSSIM_X86_TARGET RELEASE)
		dk_createPrefixMacro(${func}   IOSSIM_X86_64_TARGET RELEASE)
		dk_createPrefixMacro(${func}           LINUX_TARGET RELEASE)
		dk_createPrefixMacro(${func}       LINUX_X86_TARGET RELEASE)
		dk_createPrefixMacro(${func}    LINUX_X86_64_TARGET RELEASE)
		dk_createPrefixMacro(${func}       RASPBERRY_TARGET RELEASE)
		dk_createPrefixMacro(${func} RASPBERRY_ARM32_TARGET RELEASE)
		dk_createPrefixMacro(${func} RASPBERRY_ARM64_TARGET RELEASE)
		dk_createPrefixMacro(${func}         ANDROID_TARGET RELEASE)
		dk_createPrefixMacro(${func}   ANDROID_ARM32_TARGET RELEASE)
		dk_createPrefixMacro(${func}   ANDROID_ARM64_TARGET RELEASE)
		dk_createPrefixMacro(${func}      EMSCRIPTEN_TARGET RELEASE)
	endif()
endfunction()






###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc(${ARGV})
	
	dk_todo()
endfunction()
