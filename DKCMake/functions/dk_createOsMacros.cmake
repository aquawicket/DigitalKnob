include_guard()

###############################################################################
# dk_createOsMacros(func)
#
#	Prefix a function with <OS>_ macros. Calling the <OS>_function will only be called if the current <OS> or <OS_HOST> is true
#
#	@func	- The func of the function to create aliases for
#
function(dk_createOsMacros func)
	DKDEBUGFUNC(${ARGV})
	
	set(${func}_ext ${DKCMAKE_DIR}/${func}_ext.cmake)
	if(NOT EXISTS ${func}_ext)
		file(APPEND ${func}_ext "### Don't make changes in this file. They will be overwritten. ###\n")
		file(APPEND ${func}_ext "### This file was automatically generated from dk_createOsMacros.cmake ###\n")
	endif()
	file(APPEND ${func}_ext "\n## ${func} ##\n")
	file(APPEND ${func}_ext "macro(WIN_HOST_${func})\n   if(WIN_HOST)\n      ${func}(\${ARGV})\n  endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_HOST_${func})\n   if(WIN_HOST AND X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_64_HOST_${func})\n   if(WIN_HOST AND X64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(UNIX_HOST_${func})\n   if(UNIX_HOST)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_HOST_${func})\n   if(MAC_HOST)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_HOST_${func})\n   if(MAC_HOST AND X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_64_HOST_${func})\n   if(MAC_HOST AND X64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_HOST_${func})\n   if(LINUX_HOST)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_HOST_${func})\n   if(LINUX_HOST AND X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_64_HOST_${func})\n   if(LINUX_HOST AND X64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_HOST_${func})\n   if(ANDROID_HOST)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	
	file(APPEND ${func}_ext "macro(WIN_${func})\n   if(WIN)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_${func})\n   if(WIN_X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_64_${func})\n   if(WIN_X86_64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(UNIX_${func})\n   if(NOT WIN)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(APPLE_${func})\n   if(MAC OR IOS OR IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(APPLE32_${func})\n   if(MAC_X86 OR IOS_ARM32 OR IOSSIM_X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(APPLE64_${func})\n   if(MAC_X86_64 OR IOS_ARM64 OR IOSSIM_X86_64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_${func})\n   if(MAC)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_${func})\n   if(MAC_X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_64_${func})\n   if(MAC_X86_64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_${func})\n   if(IOS AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM32_${func})\n   if(IOS_ARM32 AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM64_${func})\n   if(IOS_ARM64 AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_${func})\n   if(IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_${func})\n   if(IOSSIM_X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_64_${func})\n   if(IOSSIM_X86_64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_${func})\n   if(LINUX)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_${func})\n   if(LINUX_X86)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_64_${func})\n   if(LINUX_X86_64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_${func})\n   if(RASPBERRY)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM32_${func})\n   if(RASPBERRY_ARM32)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM64_${func})\n   if(RASPBERRY_ARM64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_${func})\n   if(ANDROID)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM32_${func})\n   if(ANDROID_ARM32)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM64_${func})\n   if(ANDROID_ARM64)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(EMSCRIPTEN_${func})\n   if(EMSCRIPTEN)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	
	if("${ARGN}" STREQUAL "NO_DEBUG_RELEASE_TAGS")
		return()
	endif()
	file(APPEND ${func}_ext "macro(DEBUG_${func})\n   if(DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_DEBUG_${func})\n   if(WIN AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_DEBUG_${func})\n   if(WIN_X86 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_64_DEBUG_${func})\n   if(WIN_X86_64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(UNIX_DEBUG_${func})\n   if(NOT WIN AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(APPLE_DEBUG_${func})\n   if(MAC OR IOS OR IOSSIM AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_DEBUG_${func})\n   if(MAC AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_DEBUG_${func})\n   if(MAC_X86 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_64_DEBUG_${func})\n   if(MAC_X86_64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_DEBUG_${func})\n   if(IOS AND DEBUG AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM32_DEBUG_${func})\n   if(IOS_ARM32 AND DEBUG AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM64_DEBUG_${func})\n   if(IOS_ARM64 AND DEBUG AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_DEBUG_${func})\n   if(IOSSIM AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_DEBUG_${func})\n   if(IOSSIM_X86 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_64_DEBUG_${func})\n   if(IOSSIM_X86_64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_DEBUG_${func})\n   if(LINUX AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_DEBUG_${func})\n   if(LINUX_X86 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_64_DEBUG_${func})\n   if(LINUX_X86_64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_DEBUG_${func})\n   if(RASPBERRY AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM32_DEBUG_${func})\n   if(RASPBERRY_ARM32 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM64_DEBUG_${func})\n   if(RASPBERRY_ARM64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_DEBUG_${func})\n   if(ANDROID AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM32_DEBUG_${func})\n   if(ANDROID_ARM32 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM64_DEBUG_${func})\n   if(ANDROID_ARM64 AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(EMSCRIPTEN_DEBUG_${func})\n   if(EMSCRIPTEN AND DEBUG)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	
	file(APPEND ${func}_ext "macro(RELEASE_${func})\n   if(RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_RELEASE_${func})\n   if(WIN AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_RELEASE_${func})\n   if(WIN_X86 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(WIN_X86_64_RELEASE_${func})\n   if(WIN_X86_64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(UNIX_RELEASE_${func})\n   if(NOT WIN AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(APPLE_RELEASE_${func})\n   if(MAC OR IOS OR IOSSIM AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_RELEASE_${func})\n   if(MAC AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_RELEASE_${func})\n   if(MAC_X86 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(MAC_X86_64_RELEASE_${func})\n   if(MAC_X86_64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_RELEASE_${func})\n   if(IOS AND RELEASE AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM32_RELEASE_${func})\n   if(IOS_ARM32 AND RELEASE AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOS_ARM64_RELEASE_${func})\n   if(IOS_ARM64 AND RELEASE AND NOT IOSSIM)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_RELEASE_${func})\n   if(IOSSIM AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_RELEASE_${func})\n   if(IOSSIM_X86 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(IOSSIM_X86_64_RELEASE_${func})\n   if(IOSSIM_X86_64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_RELEASE_${func})\n   if(LINUX AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_RELEASE_${func})\n   if(LINUX_X86 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(LINUX_X86_64_RELEASE_${func})\n   if(LINUX_X86_64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_RELEASE_${func})\n   if(RASPBERRY AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM32_RELEASE_${func})\n   if(RASPBERRY_ARM32 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(RASPBERRY_ARM64_RELEASE_${func})\n   if(RASPBERRY_ARM64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_RELEASE_${func})\n   if(ANDROID AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM32_RELEASE_${func})\n   if(ANDROID_ARM32 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(ANDROID_ARM64_RELEASE_${func})\n   if(ANDROID_ARM64 AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	file(APPEND ${func}_ext "macro(EMSCRIPTEN_RELEASE_${func})\n   if(EMSCRIPTEN AND RELEASE)\n      ${func}(\${ARGV})\n   endif()\nendmacro()\n")
	
	include(${func}_ext)
endfunction()