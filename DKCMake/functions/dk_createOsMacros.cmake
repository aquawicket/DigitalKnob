#!/usr/bin/cmake -P
include("$ENV{DKCMAKE_FUNCTIONS_DIR_}DK.cmake")
include($ENV{DKCMAKE_FUNCTIONS_DIR}/dk_createPrefixMacro.cmake)
include_guard()


###############################################################################
# dk_createOsMacros(func)
#
#	Prefix a function with <OS>_ macros. Calling the <OS>_function will only be called if the current <OS> or <OS_HOST> is true
#
#	@func	- The func of the function to create aliases for
#
function(dk_createOsMacros func)
	dk_debugFunc()
	
	if(ext_string)
		dk_fatal("ext_string variable already in use")
	endif()
	
	### HOST Prefix functions ###
	dk_createPrefixMacro(${func} Android_Host)
	dk_createPrefixMacro(${func} Android_Arm32_Host)
	dk_createPrefixMacro(${func} Android_Arm64_Host)
	dk_createPrefixMacro(${func} Android_X86_64_Host)
	dk_createPrefixMacro(${func} Android_X86_Host)
	dk_createPrefixMacro(${func} Linux_Host)
	dk_createPrefixMacro(${func} Linux_Arm32_Host)
	dk_createPrefixMacro(${func} Linux_Arm64_Host)
	dk_createPrefixMacro(${func} Linux_X86_64_Host)
	dk_createPrefixMacro(${func} Linux_X86_Host)
	dk_createPrefixMacro(${func} Mac_Host)
	dk_createPrefixMacro(${func} Mac_X86_64_Host)
	dk_createPrefixMacro(${func} Mac_X86_Host)
	dk_createPrefixMacro(${func} UNIX_HOST)
	dk_createPrefixMacro(${func} Windows_Host)
	dk_createPrefixMacro(${func} Windows_Arm64_Host)
	dk_createPrefixMacro(${func} Windows_X86_64_Host)
	dk_createPrefixMacro(${func} Windows_X86_Host)
	
	### TARGET Prefix functions ###
	dk_createPrefixMacro(${func} ANDROID)
	dk_createPrefixMacro(${func} ANDROID_DEBUG)
	dk_createPrefixMacro(${func} Android_Arm32)
	dk_createPrefixMacro(${func} ANDROID_ARM64)
	dk_createPrefixMacro(${func} ANDROID_X86)
	dk_createPrefixMacro(${func} ANDROID_X86_64)
	dk_createPrefixMacro(${func} APPLE)
	dk_createPrefixMacro(${func} APPLE32)
	dk_createPrefixMacro(${func} APPLE64)
	dk_createPrefixMacro(${func} EMSCRIPTEN)
	dk_createPrefixMacro(${func} IOS)
	dk_createPrefixMacro(${func} IOSSIM)
	dk_createPrefixMacro(${func} IOSSIM_X86)
	dk_createPrefixMacro(${func} IOSSIM_X86_64)
	dk_createPrefixMacro(${func} IOS_ARM32)
	dk_createPrefixMacro(${func} IOS_ARM64)
	dk_createPrefixMacro(${func} LINUX)
	dk_createPrefixMacro(${func} LINUX_ARM32)
	dk_createPrefixMacro(${func} LINUX_ARM64)
	dk_createPrefixMacro(${func} LINUX_X86)
	dk_createPrefixMacro(${func} LINUX_X86_64)
	dk_createPrefixMacro(${func} MAC)
	dk_createPrefixMacro(${func} MAC_ARM64)
	dk_createPrefixMacro(${func} MAC_X86)
	dk_createPrefixMacro(${func} MAC_X86_64)
	dk_createPrefixMacro(${func} RASPBERRY)
	dk_createPrefixMacro(${func} RASPBERRY_ARM32)
	dk_createPrefixMacro(${func} RASPBERRY_ARM64)
	dk_createPrefixMacro(${func} UNIX)
	dk_createPrefixMacro(${func} Windows)
	dk_createPrefixMacro(${func} WIN_ARM64)
	dk_createPrefixMacro(${func} Windows_X86)
	dk_createPrefixMacro(${func} Windows_X86_64)
	
	### TARGET / BUILD Prefix functions ###
	if(NOT "${ARGN}" STREQUAL "NO_DEBUG_RELEASE_TAGS")
		dk_createPrefixMacro(${func}                 Debug)
		dk_createPrefixMacro(${func}         Windows Debug)
		dk_createPrefixMacro(${func}       WIN_ARM64 Debug)
		dk_createPrefixMacro(${func}         Windows_X86 Debug)
		dk_createPrefixMacro(${func}      Windows_X86_64 Debug)
		dk_createPrefixMacro(${func}            UNIX Debug)
		dk_createPrefixMacro(${func}           APPLE Debug)
		dk_createPrefixMacro(${func}             MAC Debug)
		dk_createPrefixMacro(${func}         MAC_X86 Debug)
		dk_createPrefixMacro(${func}      MAC_X86_64 Debug)
		dk_createPrefixMacro(${func}             IOS Debug)
		dk_createPrefixMacro(${func}       IOS_ARM32 Debug)
		dk_createPrefixMacro(${func}       IOS_ARM64 Debug)
		dk_createPrefixMacro(${func}          IOSSIM Debug)
		dk_createPrefixMacro(${func}      IOSSIM_X86 Debug)
		dk_createPrefixMacro(${func}   IOSSIM_X86_64 Debug)
		dk_createPrefixMacro(${func}           LINUX Debug)
		dk_createPrefixMacro(${func}       LINUX_X86 Debug)
		dk_createPrefixMacro(${func}    LINUX_X86_64 Debug)
		dk_createPrefixMacro(${func}       RASPBERRY Debug)
		dk_createPrefixMacro(${func} RASPBERRY_ARM32 Debug)
		dk_createPrefixMacro(${func} RASPBERRY_ARM64 Debug)
		dk_createPrefixMacro(${func}         ANDROID Debug)
		dk_createPrefixMacro(${func}   Android_Arm32 Debug)
		dk_createPrefixMacro(${func}   ANDROID_ARM64 Debug)
		dk_createPrefixMacro(${func}     ANDROID_X86 Debug)
		dk_createPrefixMacro(${func}  ANDROID_X86_64 Debug)
		dk_createPrefixMacro(${func}      EMSCRIPTEN Debug)
		
		dk_createPrefixMacro(${func}                 Release)
		dk_createPrefixMacro(${func}             Windows Release)
		dk_createPrefixMacro(${func}       WIN_ARM64 Release)
		dk_createPrefixMacro(${func}         Windows_X86 Release)
		dk_createPrefixMacro(${func}      Windows_X86_64 Release)
		dk_createPrefixMacro(${func}            UNIX Release)
		dk_createPrefixMacro(${func}           APPLE Release)
		dk_createPrefixMacro(${func}             MAC Release)
		dk_createPrefixMacro(${func}         MAC_X86 Release)
		dk_createPrefixMacro(${func}      MAC_X86_64 Release)
		dk_createPrefixMacro(${func}             IOS Release)
		dk_createPrefixMacro(${func}       IOS_ARM32 Release)
		dk_createPrefixMacro(${func}       IOS_ARM64 Release)
		dk_createPrefixMacro(${func}          IOSSIM Release)
		dk_createPrefixMacro(${func}      IOSSIM_X86 Release)
		dk_createPrefixMacro(${func}   IOSSIM_X86_64 Release)
		dk_createPrefixMacro(${func}           LINUX Release)
		dk_createPrefixMacro(${func}       LINUX_X86 Release)
		dk_createPrefixMacro(${func}    LINUX_X86_64 Release)
		dk_createPrefixMacro(${func}       RASPBERRY Release)
		dk_createPrefixMacro(${func} RASPBERRY_ARM32 Release)
		dk_createPrefixMacro(${func} RASPBERRY_ARM64 Release)
		dk_createPrefixMacro(${func}         ANDROID Release)
		dk_createPrefixMacro(${func}   Android_Arm32 Release)
		dk_createPrefixMacro(${func}   ANDROID_ARM64 Release)
		dk_createPrefixMacro(${func}     ANDROID_X86 Release)
		dk_createPrefixMacro(${func}  ANDROID_X86_64 Release)
		dk_createPrefixMacro(${func}      EMSCRIPTEN Release)
	endif()
endfunction()






###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
function(DKTEST)
	dk_debugFunc(0)
	
	dk_createOsMacros(todo) # TODO
endfunction()
