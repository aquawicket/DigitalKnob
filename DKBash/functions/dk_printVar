#echo "$0($*)"
#[ -n "$include_dk_printVar" ] && exit || export readonly include_dk_printVar=1
[ -z "$DKINIT" ] && . ./DK


##################################################################################
# dk_printVar(<variable>)
#
#
dk_printVar() {
	dk_debugFunc
	[ $# -ne 1 ] && dk_error "dk_printVar($*): incorrect number of arguments"
	
	_name=$1
	exists=0
	
	# is _name a variable
	if [ -v $_name ]; then
		# if the _name is an array variable
		if $(declare -p $_name 2> /dev/null | grep -q '^declare \-a'); then	
			declare -n _array="$_name"
			for ((i=0; i < ${#_array[@]}; i++ )); do 
				dk_debug "\$$_name[$i] = ${_array[$i]}";
			done
		else
			dk_debug "\$$_name = ${!_name}"
		fi
		exists=1
	fi
	
	# is _name a function
	if [ "$(type -t $_name)" = "function" ]; then
		func=$(type $_name | sed '1,2d')
		dk_debug "\$$_name = $func"
		exists=1
	fi
	
	if [ $exists -ne 1 ]; then
		dk_debug "${red}\$$_name is not set${clr}"
	fi
}