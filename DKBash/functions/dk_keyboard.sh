#!/bin/sh
[ -z "${DKINIT}" ] && . "$(dirname ${0})/DK.sh"

ESC=
##################################################################################
# dk_keyboard()
#
#
dk_keyboard (){
	dk_debugFunc
	[ ${#} -ne 0 ] && dk_error "${FUNCNAME}(${#}): incorrect number of arguments"
	
	echo "Press any key. Press Ctrl + C to exit."
	ReadKey() {
	  if read -sN1 KEY; then
		while read -sN1 -t 0.001 ; do
		  KEY+="${REPLY}"
		done
	  fi
	}

	while ReadKey; do
	  case "${KEY}" in
	#  https://www.toptal.com/developers/keycode/table
	#                                   	 KeyCode		Key				Code			Unicode		Description
	#	'')         echo '';;           	  	# 0	
	#	'')         echo '';;           	  	# 1
	#	'')         echo '';;           	  	# 2	    
	#	'')         echo 'Cancel';;     	  	# 3			Cancel			Pause						break
	#	'')         echo '';;           	  	# 4
	#	'')         echo '';;           	  	# 5
	#	'')         echo '';;           	  	# 6
	#	'')         echo '';;           	  	# 7
	#	'')         echo 'Backspace';;  	  	# 8			Backspace		Backspace		‚å´			backspace / delete
	#	'')         echo 'Tab';         	  	# 9			Tab				Tab				‚Üπ			tab
	#	'')         echo '';;           	  	# 10
	#	'')         echo '';;           	  	# 11
	#	'')         echo 'Clear';;      	  	# 12		Clear			NumLock			‚åß			clear
	#	'')         echo 'Enter';;      	  	# 13		Enter			Enter			‚Üµ			Enter / Return
	#	'')         echo '';;           	  	# 14
	#	'')         echo '';;           	  	# 15
	#	'')         echo 'Shift';;      	  	# 16   		Shift			ShiftLeft		‚áß			shift
	#	'')         echo 'Shift';;      	  	# 16   		Shift			ShiftRight		‚áß			shift
	#	'')         echo 'Control';;    	  	# 17		Control			ControlLeft		^			ctrl
	#	'')         echo 'Control';;    	  	# 17		Control			ControlRight	^			ctrl
	#	'')         echo 'Alt';;        	  	# 18		Alt				AltLeft			‚éá / ‚å•		Alt / Option
	#	'')         echo 'Alt';;        	  	# 18		Alt				AltRight		‚éá / ‚å•		Alt / Option
	#	'')         echo 'Pause';;      	    # 19		Pause			Pause						pause/break
	#	'')         echo 'CapsLock';;   	  	# 20		CapsLock		CapsLock		‚á™			caps lock
	#	'')         echo '';;           	  	# 21		Unidentified	Lang1						hangul
	#	'')         echo '';;           	  	# 22
	#	'')         echo '';;           	  	# 23
	#	'')         echo '';;           	  	# 24
	#	'')         echo '';;           	  	# 25		Unidentified	Lang2						hanja
	#	'')         echo '';;           	  	# 26
		$'\e')		echo 'Escape';;      	 	# 27		Escape			Escape			‚éã			escape
	#	'')         echo 'henkan';;     	   	# 28		henkan										conversion
	#	'')         echo 'muhenkan';;   	   	# 29		muhenkan									non-conversion
	#	'')         echo '';;           	  	# 30
	#	'')         echo '';;           	  	# 31
		' ')       	echo '';;            	 	# 32		(blank space)	Space						spacebar
		$'\e[5~')  	echo 'PageUp';;      	    # 33		PageUp			Numpad9			‚áû			page up
		$'\e[6~')  	echo 'PageDown';;    	    # 34		PageDown		Numpad3			‚áü			page down
	#	'')         echo 'End';;        	    # 35		End				Numpad1						end
		$'\e[H')   	echo 'Home';;        	    # 36		Home			Numpad7			‚åÇ			home
		$'\e[D')   	echo 'ArrowLeft';;   	    # 37		ArrowLeft		ArrowLeft		‚Üê			left arrow
		$'\e[A')   	echo 'ArrowUp';;     	    # 38		ArrowUp			ArrowUp			‚Üë			up arrow
		$'\e[C')   	echo 'ArrowRight';;  	    # 39		ArrowRight		ArrowRight		‚Üí			right arrow
		$'\e[B')   	echo 'ArrowDown';;   	    # 40		ArrowDown		ArrowDown		‚Üì			down arrow
	#	'')        	echo 'Select';;      	  	# 41		Select										select
	#	'')        	echo 'Print';;       	   	# 42		Print										print
	#	'')        	echo 'Execute';;     	   	# 43		Execute										execute
	#	'')        	echo 'F13';;         	  	# 44		F13				F13				‚éô			Print Screen / F13 (firefox)
	#	'') 	   	echo 'Insert';;      	   	# 45		Insert			Numpad0			x			insert
		$'\e[3~')  	echo 'Delete';;      	    # 46		Delete			NumpadDecimal	‚å¶			delete
	#	'')        	echo 'Help';;        	    # 47		Help							‚ç∞			help
		'0')       	echo '0';;            	 	# 48		0				Digit0			‚ì™			0
		'‚Äô')       	echo '‚Äô';;            	 	# 48		‚Äô				Digit0			‚Äô			apostrophe
		')')   	   	echo ')';;            	 	# 48		)				Digit0			‚Äô			
		'¬∫')       	echo '¬∫';;            		# 49		¬∫				Digit0			¬∫			ordinal indicator
		'1')       	echo '1';;            		# 49		1				Digit1			‚ë†			1 Key
		'!')       	echo '!';;            		# 49		!				Digit1			!			exclamation mark
		'2')       	echo '2';;            	 	# 50		2				Digit2			‚ë°			2 Key
		'@')       	echo '@';;            	 	# 50		@				Digit2			@			at sign
		'¬≤')        echo '¬≤';;           	  	# 50		¬≤				Digit2			¬≤			sqaure
		'‚Ñ¢')        echo '‚Ñ¢';;          	   	# 50		‚Ñ¢				Digit2			‚Ñ¢			trademark
		'3')       	echo '3';;            	 	# 51		3				Digit3			‚ë¢			3 Key
		'#')       	echo '#';;            	 	# 51		#				Digit3			#			hash
		'¬≥')        echo '¬≥';;          	   	# 51		¬≥				Digit3			¬≥			cube
		'¬£')        echo '¬£';;          	   	# 51		¬£				Digit3			¬£			pound
		'4')       	echo '4';;            	 	# 52		4				Digit4			‚ë£			4 Key
		'$')       	echo '$';;            	 	# 52		$				Digit4
		'¬§')        echo '¬§';;            	 	# 52		¬§				Digit4			¬§			currency
		'¬¢')       	echo '¬¢';;            	 	# 52		¬¢				Digit4			¬¢			cent
		'5')       	echo '5';;            	 	# 53		5				Digit5			‚ë§			5 Key
		'%')       	echo '%';;            	 	# 53		%				Digit5			%			percent
		'‚Ç¨')        echo '‚Ç¨';;           	  	# 53		‚Ç¨				Digit5			‚Ç¨			euro
		'‚àû')        echo '‚àû';;           	  	# 53		‚àû				Digit5			‚àû			infinity
		'6')  	   	echo '6';;            	 	# 54		6				Digit6			‚ë•			6 Key
		'¬ß')        echo '¬ß';;           	  	# 54		¬ß				Digit6			¬ß			section sign
		'%')        echo '%';;           	  	# 54		¬º				Digit6			¬º			one quarter
		'7')      	echo '7';;            	 	# 55		7	            Digit7	        ‚ë¶	  		7 Key
		'&')       	echo '&';;            	 	# 55		&				Digit7			&			and
		'%')        echo '%';;           	  	# 55		¬Ω				Digit7			¬Ω			half
		'*')	   	echo '*';;            	 	# 56		*				Digit8						*
		'8')       	echo '8';;            	 	# 56		8				Digit8			‚ëß			8 Key
		'¬æ')        echo '¬æ';;           	  	# 56		¬æ				Digit8			¬æ			three quarters
		'‚Ä¢')        echo '‚Ä¢';;           	  	# 56		‚Ä¢				Digit8			‚Ä¢			bullet
		'9')       	echo '9';;            	 	# 57		9				Digit9			‚ë®			9 Key
		'(')       	echo '(';;            	 	# 57		(				Digit9			(			parentheses left
		'‚Äò')        echo '‚Äò';;           	  	# 57		‚Äò				Digit9			‚Äò			inverted apostrophe
		'¬™')        echo '¬™';;           	  	# 57		¬™				Digit9			¬™			feminine ordinal indicator
		':')        echo ':';;           	  	# 58		:				Period			:
		';')        echo ';';;           	  	# 59		;				Semicolon					semicolon (firefox), equals
		'<')        echo '<';;           	  	# 60		<				Backquote		<
		'=')        echo '=';;           	  	# 61		=				Equal						equals (firefox)
		'√ü')        echo '√ü';;           	  	# 63		√ü				Minus			√ü / ?
		'@')        echo '@';;           	  	# 64		@											@ (firefox)
		'a')        echo 'a';;           	  	# 65		a				KeyA			a
		'√°')        echo '√°';;           	  	# 65		√°				KeyA			√°			a acute
		'b')        echo 'b';;           	  	# 66		b				KeyB			b
		'‚à´')        echo '‚à´';;           	  	# 66		‚à´				KeyB			‚à´			integral
		'c')        echo 'c';;           	 	# 67		c				KeyC			c
		'¬©')        echo '¬©';;           	  	# 67		¬©				KeyC			¬©			copywright
		'd')        echo 'd';;           	  	# 68		d				KeyD			d
		'√∞')        echo '√∞';;           	  	# 68		√∞				KeyD			√∞			voiced dental fricative
		'‚àÇ')        echo '‚àÇ';;           	  	# 68		‚àÇ				KeyD			‚àÇ			partial
		'e')        echo 'e';;           	  	# 69		e				KeyE			e
	#	'')         echo '';;           	  	# 69		Dead			KeyE			e
		'√©')        echo '√©';;           	  	# 69		√©				KeyE			√©			e acute
		'f')        echo 'f';;           	  	# 70		f				KeyF			f
		'∆í')        echo '∆í';;           	  	# 70		∆í				KeyF			∆í			f with hook
		'g')        echo 'g';;           	  	# 71		g				KeyG			g
		'h')        echo 'h';;           	  	# 72		h				KeyH			h
		'Àô')        echo 'Àô';;           	  	# 72		Àô				KeyH			Àô			overdot
		'Àö')        echo 'Àö';;           	  	# 72		Àö				KeyH			Àö			small degree
		'i')        echo 'i';;           	  	# 73		i				KeyI			i
	#	'')         echo '';;           	  	# 73		Dead			KeyI			i
		'^')        echo '^';;           	  	# 73		^				KeyI			^			caret
		'√≠')        echo '√≠';;           	  	# 73		√≠				KeyI			√≠			i acute
		'j')        echo 'j';;           	  	# 74		j				KeyJ			j
		'‚àÜ')        echo '‚àÜ';;           	  	# 74		‚àÜ				KeyJ			‚àÜ			delta
		'k')        echo 'k';;           	  	# 75		k				KeyK			k
		'¬∞')        echo '¬∞';;           	  	# 75		¬∞				KeyK			¬∞			degree
		'l')        echo 'l';;           	  	# 76		l				KeyL			l
		'√∏')        echo '√∏';;           	  	# 76		√∏				KeyL			√∏			close mid front rounded vowel
		'm')       	echo 'm';;           	  	# 77		m				KeyM			m
		'¬µ')       	echo '¬µ';;           	  	# 77		¬µ				KeyM			¬µ			one millionth
		'n')        echo 'n';;           	  	# 78		n				KeyN			n
	#	'')         echo '';;           	  	# 78		Dead			KeyN			n	
		'√±')        echo '√±';;           	  	# 78		√±				KeyN			√±			n with tilde
		'~')        echo '~';;           	  	# 78		~				KeyN			~			tilde
		'o')        echo 'o';;           	  	# 79		o				KeyO			o
		'√≥')        echo '√≥';;           	  	# 79		√≥				KeyO			√≥			o acute
		'p')        echo 'p';;           	  	# 80		p				KeyP			p
		'√∂')        echo '√∂';;           	 	# 80		√∂				KeyP			√∂			o with umlaut
		'œÄ')        echo 'œÄ';;           	 	# 80		œÄ				KeyP			œÄ			pi
		'q')        echo 'q';;           	 	# 81		q				KeyQ			q	
		'√§')        echo '√§';;           	 	# 81		√§				KeyQ			√§			open central unrounded vowel
	#	'')         echo '';;           		# 81		≈ì				KeyQ			≈ì			open mid front rounded vowel
		'r')        echo 'r';;           	  	# 82		r				KeyR			r
		'¬Æ')        echo '¬Æ';;           	  	# 82		¬Æ				KeyR			¬Æ			registered trademark
		's')        echo 's';;           	  	# 83		s				KeyS			s
		'√ü')        echo '√ü';;           	  	# 83		√ü				KeyS			√ü			sharp s
		't')        echo 't';;           	  	# 84		t				KeyT			t
		'√æ')        echo '√æ';;           	  	# 84		√æ				KeyT			√æ			thorn
		'‚Ä†')        echo '‚Ä†';;           	  	# 84		‚Ä†				KeyT			‚Ä†			obelus
		'u')        echo 'u';;           	  	# 85		u				KeyU			u
	#	'')         echo '';;           	  	# 85		Dead			KeyU			u
		'√∫')        echo '√∫';;           	  	# 85		√∫				KeyU			√∫			u acute
		'¬®')        echo '¬®';;           	  	# 85		¬®				KeyU			¬®			umlaut
		'v')        echo 'v';;           	  	# 86		v				KeyV			v
		'‚àö')        echo '‚àö';;          		# 86		‚àö				KeyV			‚àö			sqaure root
		'w')        echo 'w';;          	   	# 87		w				KeyW			w
		'√•')        echo '√•';;          	   	# 87		√•				KeyW			√•			open mid back unrounded vowel
		'Œ£')        echo 'Œ£';;          		# 87		Œ£				KeyW			Œ£			sigma
		'‚àë')        echo '‚àë';;           	  	# 87		‚àë				KeyW			‚àë			summation sigma
		'x')        echo 'x';;           	  	# 88		x				KeyX			x
		'‚âà')        echo '‚âà';;           	  	# 88		‚âà				KeyX			‚âà			approximate
		'y')        echo 'y';;           	  	# 89		y				KeyY			y
		'¬•')        echo '¬•';;           	  	# 89		¬•				KeyY			¬•			yen
		'√º')        echo '√º';;           	  	# 89		√º				KeyY			√º			u with umlaut
		'z')        echo 'z';;          	   	# 90		z				KeyZ			z
		'√¶')        echo '√¶';;          	    # 90		√¶				KeyZ			√¶			near open front unrounded vowel
		'Œ©')        echo 'Œ©';;          	   	# 90		Œ©				KeyZ			Œ©			ohm
	#	'')         echo 'Meta';;       	  	# 91		Meta			MetaLeft		‚åò ‚äû		Windows Key / Left ‚åò / Chromebook Search key
	#	'')         echo 'Meta';;       	    # 92		Meta			MetaRight		‚åò ‚äû		Right Windows
	#	'')         echo 'Cont';;       	    # 93		Cont			extMenu	ContextMenu	‚ñ§		Windows Menu / Right ‚åò
	#	'')         echo 'Stan';;       	    # 95		Stan			dby				‚òæ			sleep
		'0')        echo '0';;          	   	# 96		0				Numpad0			‚ì™			Number Pad 0
		'1')        echo '1';;          	   	# 97		1				Numpad1			‚ë†			Number Pad 1
		'2')        echo '2';;          	   	# 98		2				Numpad2			‚ë°			Number Pad 2
		'3')        echo '3';;          	   	# 99		3				Numpad3			‚ë¢			Number Pad 3
		'4')        echo '4';;          	   	# 100		4				Numpad4			‚ë£			Number Pad 4
		'5')        echo '5';;          	   	# 101		5				Numpad5			‚ë§			Number Pad 5
		'6')        echo '6';;          	   	# 102		6				Numpad6			‚ë•			Number Pad 6
		'7')        echo '7';;          	   	# 103		7				Numpad7			‚ë¶			Number Pad 7
		'8')        echo '8';;          	   	# 104		8				Numpad8			‚ëß			Number Pad 8
		'9')        echo '9';;          	   	# 105		9				Numpad9			‚ë®			Number Pad 9
		'*')        echo '*';;          	   	# 106		*				NumpadMultiply	√ó			multiply
		'+')        echo '+';;           	  	# 107		+				NumpadAdd					add
		',')        echo ',';;           		# 108		,				NumpadDecimal				numpad period (firefox)
		'-')        echo '-';;           	  	# 109		-				NumpadSubtract				subtract
		'.')        echo '.';;           	  	# 110		.				NumpadDecimal				decimal point
		'/')        echo '/';;           	  	# 111		/				NumpadDivide	√∑			divide
		$'\eOP')   	echo 'F1';;           		# 112		F1				F1				f1
		$'\eOQ')   	echo 'F2';;           		# 113		F2				F2				f2
		$'\eOR')   	echo 'F3';;           		# 114		F3				F3				f3  
		$'\eOS')   	echo 'F4';;           		# 115		F4				F4				f4
		$'\e[15~') 	echo 'F5';;           		# 116		F5				F5				f5
		$'\e[17~') 	echo 'F6';;           		# 117		F6				F6				f6
		$'\e[18~') 	echo 'F7';;           		# 118		F7				F7				f7
		$'\e[19~') 	echo 'F8';;           		# 119		F8				F8				f8
		$'\e[20~') 	echo 'F9';;           		# 120		F9				F9				f9
		$'\e[21~') 	echo 'F10';;          		# 121		F10				F10				f10
		$'\e[23~') 	echo 'F11';;          		# 122		F11				F11				f11
		$'\e[24~') 	echo 'F12';;          		# 123		F12				F12				f12
	#	'')         echo 'F13';;         	 	# 124		F13				F13				f13
	#	'')         echo 'F14';;         	 	# 125		F14				F14				f14
	#	'')         echo 'F15';;         	 	# 126		F15				F15				f15
	#	'')         echo 'F16';;         	 	# 127		F16				F16				f16
	#	'')         echo 'F17';;         	 	# 128		F17				F17				f17
	#	'')         echo 'F18';;         	 	# 129		F18				F18				f18
	#	'')         echo 'F19';;         	 	# 130		F19				F19				f19
	#	'')         echo 'F20';;         	 	# 131		F20				F20				F20
	#	'')         echo 'F21';;          		# 132		F21				F21				F21
	#	'')         echo 'F22';;          		# 133		F22				F22				F22
	#	'')         echo 'F23';;          		# 134		F23				F23				F23
	#	'')         echo 'F24';;          		# 135		F24				F24				F24
	#	'')         echo 'F25';;          		# 136		F25				F25				F25
	#	'')         echo 'F26';;          		# 137		F26				F26				F26
	#	'')         echo 'F27';;          		# 138		F27				F27				F27
	#	'')         echo 'F28';;          		# 139		F28				F28				F28
	#	'')         echo 'F29';;          		# 140		F29				F29				F29
	#	'')         echo 'F30';;          		# 141		F30				F30				F30
	#	'')         echo 'F31';;          		# 142		F31				F31				F31
	#	'')         echo 'F32';;          		# 143		F32				F32				F32
	#	'')         echo 'NumLock';;      		# 144		NumLock			NumLock			‚á≠			num lock
	#	'')         echo 'ScrollLock';;   		# 145		ScrollLock		ScrollLock		‚§ì			scroll lock
	#	'')         echo 'airplane mode';;      # 151		airplane mode
	#	'^')        echo '^';;            		# 160		^				BracketLeft		^
	#	'')         echo '';;             		# 161		Dead			BracketRight	!
	#	'')         echo '';;             		# 162										ÿõ 			(arabic semicolon) / " / ¬¢
		'#')        echo '#';;             		# 163		#				Backquote		#
		'$')        echo '$';;            		# 164		$				Backslash		$
		'√π')        echo '√π';;             		# 165		√π				Quote			√π
	#	'')         echo 'BrowserBack';;     	# 166		BrowserBack		browser page backward
	#	'')         echo 'BrowserForward';; 	# 167		BrowserForward	browser page forward
	#	'')         echo 'BrowserRefresh';;		# 168		BrowserRefresh	browser refresh
		')')        echo ')';;           		# 169		)				Minus						closing paren (AZERTY)
		'*')        echo '*';;           	  	# 170		*				Backslash		*
		'+')        echo '+';;             		# 171		+				BracketRight				~ + * key
		'|')        echo '|';;             		# 172		|				home key, pipe key
		'-')        echo '-';;             		# 173		-				Minus						minus (firefox), mute/unmute
	#	'')         echo 'AudioVolumeDown';;    # 174		AudioVolumeDown	decrease volume level
	#	'')         echo 'AudioVolumeUp';;      # 175		AudioVolumeUp	increase volume level
	#	'')         echo 'MediaTrackNext';;     # 176		MediaTrackNext	MediaTrackNext				next
	#	'')         echo 'MediaTrackPrevious';; # 177		MediaTrackPrevious	MediaTrackPrevious		previous
	#	'')         echo 'MediaStop';;          # 178		MediaStop			stop
	#	'')         echo 'MediaPlayPause';;     # 179		MediaPlayPause			play/pause
	#	'')         echo 'LaunchMail';;         # 180		LaunchMail		‚úâ	e-mail
	#	'')         echo 'AudioVolumeMute';;    # 181		AudioVolumeMute	VolumeMute					mute/unmute (firefox)
	#	'')         echo 'AudioVolumeDown';;    # 182		AudioVolumeDown	VolumeDown					decrease volume level (firefox)
	#	'')         echo 'AudioVolumeUp';;      # 183		AudioVolumeUp	VolumeUp					increase volume level (firefox)
		';')        echo ';';;             		# 186		;				Semicolon					semi-colon / √±
		'¬∂')        echo '¬∂';;             		# 186		¬∂				Semicolon		¬∂			pilcrow
		'‚Ä¶')        echo '‚Ä¶';;             		# 186		‚Ä¶				Semicolon		‚Ä¶			ellipsis
		'=')       	echo '=';;             		# 187		=				Equal						equal sign
		'¬±')        echo '¬±';;             		# 187		¬±				Equal			¬±			plus minus
		'√ó')        echo '√ó';;             		# 187		√ó				Equal			√ó			multiply
		'‚â†')        echo '‚â†';;             		# 187		‚â†				Equal			‚â†			not equal
		',')        echo ',';;             		# 188		,				Comma						comma
		'√ß')        echo '√ß';;             		# 188		√ß				Comma			√ß			c cedilla
		'‚â•')        echo '‚â•';;             		# 188		‚â•				Comma			‚â•			greater than or equal
		'-')        echo '-';;             		# 189		-				Minus						dash
		'‚Äì')        echo '‚Äì';;             		# 189		‚Äì				Minus			‚Äì			dash
		'_')        echo '_';;             		# 189		_				Minus			_			underscore
		'.')        echo '.';;             		# 190		.				Period						period
		'>')        echo '>';;             		# 190		>				Period			>			greater than
		'‚â§')        echo '‚â§';;             		# 190		‚â§				Period			‚â§			less than or equal
		'/')        echo '/';;             		# 191		/				Slash						forward slash / √ß
		'?')        echo '?';;             		# 191		?				Slash			?			question mark
		'¬ø')        echo '¬ø';;             		# 191		¬ø				Slash			¬ø			inverted question mark
		'√∑')        echo '√∑';;             		# 191		√∑				Slash			√∑			division
		'`')        echo '`';;             		# 192		`				Backquote					Backtick / grave accent / √± / √¶ / √∂ / ¬ß / ¬±
		'~')        echo '~';;             		# 192		Dead			IntlBackslash				Backtick / grave accent / √± / √¶ / √∂ / ¬ß / ¬±
	#	'')         echo '';;             		# 193		/IntlRo			?, / or ¬∞
		'.')        echo '.';;             		# 194		.				NumpadComma					numpad period (chrome)
		'[')        echo '[';;             		# 219		[				BracketLeft					open bracket
		'{')        echo '{';;             		# 219		{				BracketLeft		{			braces left
		'¬´')        echo '¬´';;             		# 219		¬´				BracketLeft		¬´			left guillemet
		'‚Äù')        echo '‚Äù';;             		# 219		‚Äù				BracketLeft		‚Äù			right double quotation
		'‚Äú')        echo '‚Äú';;             		# 219		‚Äú				BracketLeft		‚Äú			inverted double quotation
		'\`')       echo '\`';;            		# 220		\				Backslash					back slash
		"¬¨")        echo '¬¨';;           		# 220		¬¨				Backslash		¬¨			logical negation
		']')        echo ']';;             		# 221		]				BracketRight				close bracket / √•
		'}')        echo '}';;             		# 221		}				BracketRight	}			braces right
		'¬ª')        echo '¬ª';;             		# 221		¬ª				BracketRight	¬ª			right guillemet
		"'")        echo "'";;             		# 222		'				Quote						single quote / √∏ / √§
		'"')        echo '"';;             		# 222		"				Quote			"			double quote
		'¬¥')        echo '¬¥';;             		# 222		¬¥				Quote			¬¥			accent
		'`')        echo '`';;             		# 223		`				Backquote		`
	#	'')         echo 'Meta';;           	# 224		Meta			OSLeft			‚åò			left or right ‚åò key (firefox)
	#	'')         echo 'AltGraph';;         	# 225		AltGraph		AltRight		‚éá or ‚å•	altgr
		'\')        echo '\';;            		# 226		\				IntlBackslash				< /git >, left back slash
	#	'')         echo '';;             		# 229		Dead			Backquote		
	#	'')         echo '';;             		# 230						GNOME Compose Key
	#	'')         echo '';;             		# 231						√ß
	#	'')         echo '';;             		# 233													XF86Forward / √©
	#	'')         echo '';;             		# 234													XF86Back / √™
	#	'')         echo '';;             		# 235													non-conversion / √´
	#	'')         echo 'Alphanumeric';;       # 240		Alphanumeric								alphanumeric / √∞
	#	'')         echo 'HiraganaKatakana';;   # 242		HiraganaKatakana							hiragana/katakana / √≤
	#	'')         echo 'ZenkakuHankaku';;     # 243		ZenkakuHankaku								half-width/full-width / √≥
	#	'')         echo 'KanjiMode';;          # 244		KanjiMode									kanji / √¥
	#	'')         echo '';;             		# 251													unlock track pad (Chrome/Edge) / √ª
	#	'')         echo 'WakeUp';;            	# 255		WakeUp			WakeUp						WakeUp
		*) echo   "Keys pressed: '${KEY}'";;
	  esac
	  #echo ${KEY} >> keys.txt
	done
}




DKTEST (){ ####### DKTEST ####### DKTEST ####### DKTEST ####### DKTEST ####### DKTEST ###
	dk_debugFunc
	
	dk_keyboard
}
	

	


