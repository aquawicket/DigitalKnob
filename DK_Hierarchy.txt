//  Object heirarchy syntax across different languages


//  Our program is a heirarchy structrue that is of cascading inheritence.  
//  Our target language is javascript. 
//  All languages linked to equivelent functions can be named in acordance.
//  lets start by looking a console.log found in browsers. 
//  Console is a root object. In browsers, Window.console only refrences the Console root object.
//  This is a perfect place to start, with a root object.	


console.log()                    = javascript  (.js   )    log is a child of console. log is a member function of the 'console' object


    //// EXAMPLE ////
console_log                      = string      ("string")  log is a substring of the console_log string.
console/log                      = path        (./)        
TODO                             = cmake       (.cmake)    
console::log()                   = c++         (.cpp  )    log is a child of console. log is a member function of the 'console' class
TODO                             = java        (.java )
TODO                             = css         (.css )
<console><log/></console>        = html        (.html )    log is a child node of console
console.log()                    = javascript  (.js   )    log is a child of console. log is a member function of the 'console' object

 
    //// DK ROOT NODE EXAMPLE ////
dk_console_log                   = string      ("string")
dk/console/log                   = path        (./)        
TODO                             = cmake       (.cmake)    
dk::console::log()               = c++         (.cpp  )     https://www.w3schools.com/cpp/cpp_inheritance.asp
TODO                             = java        (.java )     https://www.w3schools.com/java/java_inheritance.asp
TODO                             = css         (.css )      https://www.w3.org/TR/css-cascade-3/
<dk>                             = html        (.html )     
	<console>
		<log/>
	</console>
</dk>
dk.console.log()                 = javascript  (.js   )


    //// EXPANDED EXAMPLE ////
dk_gui_frame_titlebar_text       = string      ("string")
dk/gui/frame/titlebar/text       = path        (./)
TODO                             = cmake       (.cmake)
dk::dgui::frame::titlebar::text  = c++         (.cpp  )
TODO                             = java        (.java )
TODO                             = css         (.css )
<dk>                             = html        (.html )
	<gui>
		<frame>
			<titlebar>
				</text>
			</titlebar>
		</frame>
	</gui>
</dk>
dk.gui.frame.titlebar.text       = javascript  (.js   )





//	Let's look at languages in a heirarchial view


0101
0101_assembaly
0101_assembaly_c
0101_assembaly_c_c++_
0101_assembaly_c_c++_string
0101_assembaly_c_c++_path
0101_assembaly_c_c++_cmake
0101_assembaly_c_c++_java
0101_assembaly_c_c++_css
0101_assembaly_c_c++_html
0101_assembaly_c_c++_javascript
