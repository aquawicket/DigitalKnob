@echo off&::########################################## DigitalKnob DKBatch ########################################################################
if not exist "%DKBATCH_FUNCTIONS_DIR_%DK.cmd" for /F "tokens=*" %%G IN ('where /r "%USERPROFILE%" DK.cmd') do (set "DKBATCH_FUNCTIONS_DIR_=%%~dpG")
if not defined DK.cmd (call "%DKBATCH_FUNCTIONS_DIR_%DK.cmd" "%~0" %*) 
::#################################################################################################################################################
::if not defined dk_Target_Tuple_SET (set "dk_Target_Tuple_SET=1") else (goto:eof)

::###############################################################################
::# dk_Target_Tuple_SET()
::#
::#
:dk_Target_Tuple_SET
::%setlocal%
	%dk_call% dk_debugFunc 0

	%dk_call% dk_validate Host_Tuple "%dk_call% dk_Host_Tuple"

	echo: 
	echo  1^) !Host_Tuple!
	echo: 
	echo  2) Cosmopolitan
	echo  3) Android_Arm32_Clang
	echo  4) Android_Arm64_Clang
	echo  5) Android_X86_Clang
	echo  6) Android_X86_64_Clang
	echo  7) Emscripten_X86_Clang
	echo  8) Ios_Arm32_Clang
	echo  9) Ios_Arm64_Clang
	echo 10) Ios_X86_Clang
	echo 11) Ios_X86_64_Clang
	echo 12) Iossim_Arm32_Clang
	echo 13) Iossim_Arm64_Clang
	echo 14) Iossim_X86_Clang
	echo 15) Iossim_X86_Clang
	echo 16) Linux_Arm32_Clang
	echo 17) Linux_Arm64_Clang
	echo 18) Linux_X86_Clang
	echo 19) Linux_X86_64_Clang
	echo 20) Mac_Arm32_Clang
	echo 21) Mac_Arm64_Clang
	echo 22) Mac_X86_Clang
	echo 23) Mac_X86_64_Clang
	echo 24) Raspberry_Arm32_Clang
	echo 25) Raspberry_Arm64_Clang
	echo 26) raspberry_x86_clang
	echo 27) raspberry_x86_64_clang
	echo 28) windows_arm32_clang
	echo 29) windows_arm64_clang
	echo 30) windows_x86_clang
	echo 31) windows_x86_gcc
	echo 32) windows_x86_msvc
	echo 33) windows_x86_64_clang
	echo 34) windows_x86_64_gcc
	echo 35) windows_x86_64_msvc
	echo 36) windows_x86_64_ucrt
	echo 37) Exit
	echo:

	%dk_call% dk_keyboardInput input
	if "!input!" equ "0" (
		#%dk_call% dk_echo "repeating last selection"
		#%dk_call% dk_set Target_App	"!_Target_App_!"
		#%dk_call% dk_set Target_Tuple	"!_Target_Tuple_!"
		#%dk_call% dk_set Target_Type	"!_Target_Type_!"
	) else if "!input!" equ "1" (
		%dk_call% dk_set Target_Tuple 	"!Host_Tuple!"
		%dk_call% dk_set Target_Os		"!Host_Os!"
		%dk_call% dk_set Target_Arch	"!Host_Arch!"
		if defined Host_Env (
			%dk_call% dk_set Target_Env	"!Host_Env!"
		)
	) else if "!input!" equ "2" (
		%dk_call% dk_set Target_Os		"Cosmopolitan"
		%dk_call% dk_set Target_Arch	"Cosmopolitan"
		%dk_call% dk_set Target_Env		"Cosmopolitan"
	) else if "!input!" equ "3" (
		%dk_call% dk_set Target_Os		"Android"
		%dk_call% dk_set Target_Arch	"Arm32"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "4" (
		%dk_call% dk_set Target_Os		"Android"
		%dk_call% dk_set Target_Arch	"Arm64"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "5" (
		%dk_call% dk_set Target_Os		"Android"
		%dk_call% dk_set Target_Arch	"X86"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "6" (
		%dk_call% dk_set Target_Os		"Android"
		%dk_call% dk_set Target_Arch	"X86_64"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "7" (
		%dk_call% dk_set Target_Os		"Emscripten"
		%dk_call% dk_set Target_Arch	"X86"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "8" (
		%dk_call% dk_set Target_Os		"Ios"
		%dk_call% dk_set Target_Arch	"Arm32"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "9" (
		%dk_call% dk_set Target_Os		"Ios"
		%dk_call% dk_set Target_Arch	"Arm64"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "10" (
		%dk_call% dk_set Target_Os		"Ios"
		%dk_call% dk_set Target_Arch	"X86"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "11" (
		%dk_call% dk_set Target_Os		"Ios"
		%dk_call% dk_set Target_Arch	"X86_64"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "12" (
		%dk_call% dk_set Target_Os		"Iossim"
		%dk_call% dk_set Target_Arch	"Arm32"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "13" (
		%dk_call% dk_set Target_Os		"Iossim"
		%dk_call% dk_set Target_Arch	"Arm64"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "14" (
		%dk_call% dk_set Target_Os		"Iossim"
		%dk_call% dk_set Target_Arch	"X86"
		%dk_call% dk_set Target_Env		"Clang"
	) else if "!input!" equ "15" (
		%dk_call% dk_set Target_Os 		"Iossim"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "16" (
		%dk_call% dk_set Target_Os 		"Linux"
		%dk_call% dk_set Target_Arch 	"Arm32"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "17" (
		%dk_call% dk_set Target_Os 		"Linux"
		%dk_call% dk_set Target_Arch 	"Arm64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "18" (
		%dk_call% dk_set Target_Os 		"Linux"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "19" (
		%dk_call% dk_set Target_Os 		"Linux"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "20" (
		%dk_call% dk_set Target_Os 		"Mac"
		%dk_call% dk_set Target_Arch 	"Arm32"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "21" (
		%dk_call% dk_set Target_Os 		"Mac"
		%dk_call% dk_set Target_Arch 	"Arm64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "22" (
		%dk_call% dk_set Target_Os 		"Mac"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "23" (
		%dk_call% dk_set Target_Os 		"Mac"
		%dk_call% dk_set Target_Arch	"X86_64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "24" (
		%dk_call% dk_set Target_Os 		"Raspberry"
		%dk_call% dk_set Target_Arch 	"Arm32"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "25" (
		%dk_call% dk_set Target_Os 		"Raspberry"
		%dk_call% dk_set Target_Arch 	"Arm64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "26" (
		%dk_call% dk_set Target_Os 		"Raspberry"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "27" (
		%dk_call% dk_set Target_Os 		"Raspberry"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "28" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"Arm32"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "29" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"Arm64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "30" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "31" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Gcc"
	) else if "!input!" equ "32" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86"
		%dk_call% dk_set Target_Env 	"Msvc"
	) else if "!input!" equ "33" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Clang"
	) else if "!input!" equ "34" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Gcc"
	) else if "!input!" equ "35" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Msvc"
	) else if "!input!" equ "36" (
		%dk_call% dk_set Target_Os 		"Win"
		%dk_call% dk_set Target_Arch 	"X86_64"
		%dk_call% dk_set Target_Env 	"Ucrt"
	) else if "!input!" equ "37" (
		%dk_call% dk_exit 0
	) else (
		%dk_call% dk_warning "invalid selection"
	)

	%dk_call% dk_assertVar Target_Os
	%dk_call% dk_set !Target_Os! 1
	
	%dk_call% dk_assertVar Target_Arch
	%dk_call% dk_set !Target_Arch! 1

	if not defined Target_Env (
		%dk_call% dk_set Target_Env Clang
	)
	if defined Target_Env (
		%dk_call% dk_set !Target_Env! 1
		%dk_call% dk_set Target_Tuple !Target_Os!_!Target_Arch!_!Target_Env!
	) else (
		%dk_call% dk_set Target_Tuple !Target_Os!_!Target_Arch!
	)
	%dk_call% dk_assertVar Target_Tuple
	%dk_call% dk_set !Target_Tuple! 1	

	::###### Set DEBUG_DIR and RELEASE_DIR variables ######
	if defined IOS (
		%dk_call% dk_set DEBUG_DIR Debug-iphoneos
		%dk_call% dk_set RELEASE_DIR Release-iphoneos
	) else if defined IOSSIM (
		%dk_call% dk_set DEBUG_DIR Debug-iphonesimulator
		%dk_call% dk_set RELEASE_DIR Release-iphonesimulator
	) else (
		%dk_call% dk_set DEBUG_DIR Debug
		%dk_call% dk_set RELEASE_DIR Release
	)
	%dk_call% dk_assertVar DEBUG_DIR
	%dk_call% dk_assertVar RELEASE_DIR
%endfunction%






::###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ###### DKTEST ######
:DKTEST
%setlocal%
	%dk_call% dk_debugFunc 0
 
	%dk_call% dk_Target_Tuple_SET
%endfunction%
