/*** Object heirarchy syntax across different languages ***/

/* 
	Our target language is javascript. 
	All languages linked to equivelent functions can be named in acordance.
	
*/

//// EXAMPLE ////
console_log                = string      ("string")  "log is a substring of the console_log string."
console/log                = path        (./)        
                           = CMake       (.cmake)    
console::log()             = C++         (.cpp  )    "log is a child of console", "log is a member function of the 'console' class
console.log()              = javascript  (.js   )    "log is a child of console", "log is a member function of the 'console' object"
<console><log/></console>  = html        (.html )    "log is a child node of console"
TODO (JAVA)                = Java        (.java )    
                           
    
					   
						   
//// ROOT NODE EXAMPLE ////
dk_console_log              = string      ("string")  "log is a substring of the console_log string."
dk/console/log              = path        (./)        
                            = CMake       (.cmake)    
dk::dconsole::log()         = C++         (.cpp  )    "log is a child of console", "log is a member function of the 'console' class
dk.console.log()            = javascript  (.js   )    "log is a child of console", "log is a member function of the 'console' object"
<dk>                        = html        (.html )    "log is a child node of console"
	<console>
		<log/>
	</console>
</dk>
TODO (JAVA)                 = Java        (.java )   



//// EXPANDED EXAMPLE ////
dk_gui_frame_titlebar        = string      ("string")  
dk/gui/frame/titlebar        = path        (./)        
                             = CMake       (.cmake)    
dk::dgui::frame::titlebar()  = C++         (.cpp  )    
dk.gui.frame.titlebar()      = javascript  (.js   )    
<dk>                         = html        (.html )    
	<gui>
		<frame>
			<titlebar/>
		</frame>
	</gui>
</dk>
TODO (JAVA)                  = Java        (.java ) 