IF(ANDROID)
	RETURN()
ENDIF()
IF(IOSSIM)
	RETURN()
ENDIF()


DKSET(QUEUE_BUILD ON)
##DKDEPEND(cef_binary_3.2704.1434.gec3e9ed_windows32)
##DKDEPEND(cef_binary_3.2704.1434.gec3e9ed_windows64)
DKDEPEND(cef_binary_3.2704.1434.gec3e9ed_macosx64)
##DKDEPEND(cef_binary_3.2704.1434.gec3e9ed_linux64)
##DKDEPEND(cef_binary_3.2743.1432.g66425de_macosx64)
##DKDEPEND(cef_binary_3.2924.1575.g97389a9_windows32)
DKDEPEND(cef_binary_3.2987.1601.gf035232_windows32)
DKDEPEND(cef_binary_3.2987.1601.gf035232_windows64)
DKDEPEND(cef_binary_3.2987.1601.gf035232_linux64)
DKDEPEND(upx391w)
DKDEPEND(libgtk2.0-dev)


DKPLUGIN(DKCef)
DKASSETS(DKCef)


IF(WIN)
	IF(DEBUG)
		DKCOPY(${CEF}/Debug/ ${DKPROJECT}/assets/DKCef/Debug TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/assets/DKCef/Debug TRUE)
		DKCOPY(${CEF}/Resources/ ${DKPROJECT}/assets/DKCef/Debug TRUE)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/Debug/cef_sandbox.lib)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/Debug/libcef.lib)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/Debug/wow_helper.exe)
	ENDIF()
	IF(RELEASE)
		UPX_COMPRESS(${CEF}/Release/libcef.dll)
		DKCOPY(${CEF}/Release/ ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources/ ${DKPROJECT}/assets/DKCef TRUE)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/cef_sandbox.lib)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/libcef.lib)
		FILE(REMOVE ${DKPROJECT}/assets/DKCef/wow_helper.exe)
		##FILE(REMOVE ${DKPROJECT}/assets/DKCef/d3dcompiler_47.dll)
		##FILE(REMOVE ${DKPROJECT}/assets/DKCef/d3dcompiler_43.dll)
		##FILE(REMOVE ${DKPROJECT}/assets/DKCef/libGLESv2.dll)
	ENDIF()
	
	LIST(APPEND DEBUG_LINK_FLAGS /DELAYLOAD:libcef.dll)
	LIST(APPEND RELEASE_LINK_FLAGS /DELAYLOAD:libcef.dll)
	LIST(APPEND DEBUG_LINK_FLAGS /DELAYLOAD:chrome_elf.dll)
	LIST(APPEND RELEASE_LINK_FLAGS /DELAYLOAD:chrome_elf.dll)
	LIST(APPEND WIN_LIBS winmm.lib)
ENDIF()

IF(MAC_64)
	#DKCOPY(${CEF}/Release ${DKPROJECT}/assets/DKCef TRUE)
	FILE(MAKE_DIRECTORY ${DKPROJECT}/mac64/Debug/${AppName}.app/Contents/Frameworks)
	DKCOPY(${CEF}/Debug ${DKPROJECT}/mac64/Debug/${AppName}.app/Contents/Frameworks TRUE)
	FILE(MAKE_DIRECTORY ${DKPROJECT}/mac64/Release/${AppName}.app/Contents/Frameworks)
	DKCOPY(${CEF}/Release ${DKPROJECT}/mac64/Release/${AppName}.app/Contents/Frameworks TRUE)
	#FIND_LIBRARY(AK AppKit)
	#LIST(APPEND DEBUG_LIBS ${AK})
	#LIST(APPEND RELEASE_LIBS ${AK})

	#FIXME - command does not work because app does not exist yet
	MAC_COMMAND(install_name_tool -change "@executable_path/Chromium Embedded Framework" "@executable_path/../Frameworks/Chromium Embedded Framework.framework/Chromium Embedded Framework" "${DKPROJECT}/mac64/Debug/${AppName}.app/Contents/MacOS/${AppName}")
ENDIF()

IF(LINUX)
	IF(DEBUG)
		DKCOPY(${CEF}/Debug ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Debug ${DKPROJECT}/linux64/Debug TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/linux64/Debug TRUE)
	ENDIF()
	
	IF(RELEASE)
		DKCOPY(${CEF}/Release ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Resources ${DKPROJECT}/assets/DKCef TRUE)
		DKCOPY(${CEF}/Release ${DKPROJECT}/linux64/Release TRUE)
		DKCOPY(${CEF}/Resources/icudtl.dat ${DKPROJECT}/linux64/Release TRUE)
	ENDIF()
	
	FILE(REMOVE ${DKPROJECT}/assets/DKCef/cef_sandbox.a)
	FILE(REMOVE ${DKPROJECT}/assets/DKCef/libcef.a)
	FILE(REMOVE ${DKPROJECT}/assets/DKCef/wow_helper.exe)
ENDIF()


